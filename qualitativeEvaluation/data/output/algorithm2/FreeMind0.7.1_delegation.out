*** DELEGATION CANDIDATES FOR PROJECT FreeMind0.7.1


PERFECT MATCHES
Delegation candidate with percentage coverage:1.0
	Class:freemind.modes.StylePattern
	Attribute: ChildrenStylePatternwith type: freemind.modes.StylePattern
		 and domain interface:void setName(String) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setRecursive(boolean) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFolded(boolean) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setText(String) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setNodeColor(Color) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setNodeStyle(String) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setNodeFont(Font) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setNodeIcon(MindIcon) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setEdgeColor(Color) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setEdgeStyle(String) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setEdgeWidth(int) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setChildrenStylePattern(StylePattern) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], static List loadPatterns(File) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], static List loadPatterns(Reader) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void loadPattern(XMLElement, List) [in StylePattern [in StylePattern.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
PARTIAL MATCHES
Delegation candidate with percentage coverage:0.95652175
	Class:freemind.modes.NodeAdapter
	Attribute: preferredChildwith type: freemind.modes.MindMapNode
		 and domain interface:ListIterator childrenFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], ListIterator childrenUnfolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean hasChildren() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int getChildPosition(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setPreferredChild(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isBold() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isItalic() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isUnderlined() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setViewer(NodeView) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String toString() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isDescendantOf(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], freemind.main.Tools.BooleanHolder isLeft() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFolded(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFont(Font) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLink(String) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFontSize(int) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setColor(Color) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void addIcon(MindIcon) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int removeLastIcon() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], MindMapNode shallowCopy() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.95652175
	Class:freemind.modes.NodeAdapter
	Attribute: parentwith type: freemind.modes.MindMapNode
		 and domain interface:ListIterator childrenFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], ListIterator childrenUnfolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean hasChildren() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int getChildPosition(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setPreferredChild(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isBold() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isItalic() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isUnderlined() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setViewer(NodeView) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String toString() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isDescendantOf(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], freemind.main.Tools.BooleanHolder isLeft() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFolded(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFont(Font) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLink(String) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFontSize(int) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setColor(Color) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void addIcon(MindIcon) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int removeLastIcon() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], MindMapNode shallowCopy() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.42857143
	Class:freemind.view.mindmapview.NodeView
	Attribute: edgewith type: freemind.view.mindmapview.EdgeView
		 and domain interface:void update() [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paint(Graphics2D) [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], int getNodeShift(NodeView) [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isAntialiasAll() [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isAntialiasEdges() [in EdgeView [in EdgeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.33333334
	Class:freemind.modes.mindmapmode.MindMapController
	Attribute: toolbarwith type: freemind.modes.mindmapmode.MindMapToolBar
		 and domain interface:void selectFontSize(String) [in MindMapToolBar [in MindMapToolBar.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void selectFontName(String) [in MindMapToolBar [in MindMapToolBar.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void setAllActions(boolean) [in MindMapToolBar [in MindMapToolBar.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.25
	Class:freemind.modes.StylePattern
	Attribute: nodeIconwith type: freemind.modes.MindIcon
		 and domain interface:void setName(String) [in MindIcon [in MindIcon.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String getDescription(FreeMindMain) [in MindIcon [in MindIcon.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], Icon getIcon(FreeMindMain) [in MindIcon [in MindIcon.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setIcon(Icon) [in MindIcon [in MindIcon.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.23076923
	Class:freemind.controller.Controller
	Attribute: framewith type: freemind.main.FreeMindMain
		 and domain interface:boolean isApplet() [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setView(MapView) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setWaitingCursor(boolean) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void out(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void err(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void openDocument(URL) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void repaint() [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], String getProperty(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setProperty(String, String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void saveProperties() [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setTitle(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], java.util.logging.Logger getLogger(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.16666667
	Class:freemind.modes.mindmapmode.MindMapMapModel
	Attribute: lockManagerwith type: freemind.modes.mindmapmode.MindMapMapModel$LockManager
		 and domain interface:File getSemaphoreFile(File) [in LockManager [in MindMapMapModel [in MindMapMapModel.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]]], String popLockingUserOfOldLock() [in LockManager [in MindMapMapModel [in MindMapMapModel.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]]], void writeSemaphoreFile(File) [in LockManager [in MindMapMapModel [in MindMapMapModel.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]]], String tryToLock(File) [in LockManager [in MindMapMapModel [in MindMapMapModel.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]]], void releaseLock() [in LockManager [in MindMapMapModel [in MindMapMapModel.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]]], void releaseTimer() [in LockManager [in MindMapMapModel [in MindMapMapModel.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]]], 
Delegation candidate with percentage coverage:0.13043478
	Class:freemind.view.mindmapview.NodeView
	Attribute: modelwith type: freemind.modes.MindMapNode
		 and domain interface:ListIterator childrenFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], ListIterator childrenUnfolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean hasChildren() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int getChildPosition(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setPreferredChild(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isBold() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isItalic() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isUnderlined() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setViewer(NodeView) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String toString() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isDescendantOf(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], freemind.main.Tools.BooleanHolder isLeft() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFolded(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFont(Font) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLink(String) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFontSize(int) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setColor(Color) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void addIcon(MindIcon) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int removeLastIcon() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], MindMapNode shallowCopy() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.125
	Class:freemind.main.FreeMind
	Attribute: cwith type: freemind.controller.Controller
		 and domain interface:void checkJavaVersion() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getProperty(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setProperty(String, String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getResourceString(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], Font getFontThroughMap(Font) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasEdges(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasAll(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean changeToMode(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setMenubarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setLeftToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setFrame(FreeMindMain) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void moveToRoot() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void obtainFocusForSelected() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]]
  class <anonymous #1>
    void run(), void setZoom(float) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setTitle() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAllActions(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void quit() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean acquirePrinterJobAndPageFormat() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.125
	Class:freemind.main.FreeMindApplet
	Attribute: cwith type: freemind.controller.Controller
		 and domain interface:void checkJavaVersion() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getProperty(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setProperty(String, String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getResourceString(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], Font getFontThroughMap(Font) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasEdges(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasAll(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean changeToMode(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setMenubarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setLeftToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setFrame(FreeMindMain) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void moveToRoot() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void obtainFocusForSelected() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]]
  class <anonymous #1>
    void run(), void setZoom(float) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setTitle() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAllActions(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void quit() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean acquirePrinterJobAndPageFormat() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.10344828
	Class:freemind.modes.NodeAdapter
	Attribute: viewerwith type: freemind.view.mindmapview.NodeView
		 and domain interface:void setDraggedOver(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setDraggedOver(Point) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDragListener(DragGestureListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDropListener(DropTargetListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], static NodeView newNodeView(MindMapNode, MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropAsSibling(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropPosition(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean followLink(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateCursor(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSiblingOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isChildOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isParentOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void getCoordinates(LinkedList, int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintSelected(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintDragOver(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setTreeHeight(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSelected() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isLeft() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setModel(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setMap(MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setEdge(EdgeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void update() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateAll() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.10344828
	Class:freemind.view.mindmapview.EdgeView
	Attribute: sourcewith type: freemind.view.mindmapview.NodeView
		 and domain interface:void setDraggedOver(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setDraggedOver(Point) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDragListener(DragGestureListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDropListener(DropTargetListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], static NodeView newNodeView(MindMapNode, MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropAsSibling(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropPosition(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean followLink(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateCursor(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSiblingOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isChildOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isParentOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void getCoordinates(LinkedList, int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintSelected(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintDragOver(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setTreeHeight(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSelected() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isLeft() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setModel(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setMap(MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setEdge(EdgeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void update() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateAll() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.10344828
	Class:freemind.view.mindmapview.EdgeView
	Attribute: targetwith type: freemind.view.mindmapview.NodeView
		 and domain interface:void setDraggedOver(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setDraggedOver(Point) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDragListener(DragGestureListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDropListener(DropTargetListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], static NodeView newNodeView(MindMapNode, MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropAsSibling(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropPosition(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean followLink(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateCursor(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSiblingOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isChildOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isParentOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void getCoordinates(LinkedList, int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintSelected(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintDragOver(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setTreeHeight(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSelected() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isLeft() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setModel(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setMap(MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setEdge(EdgeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void update() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateAll() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.083333336
	Class:freemind.view.mindmapview.MapView
	Attribute: controllerwith type: freemind.controller.Controller
		 and domain interface:void checkJavaVersion() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getProperty(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setProperty(String, String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getResourceString(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], Font getFontThroughMap(Font) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasEdges(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasAll(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean changeToMode(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setMenubarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setLeftToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setFrame(FreeMindMain) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void moveToRoot() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void obtainFocusForSelected() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]]
  class <anonymous #1>
    void run(), void setZoom(float) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setTitle() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAllActions(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void quit() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean acquirePrinterJobAndPageFormat() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.07692308
	Class:freemind.modes.XMLElementAdapter
	Attribute: framewith type: freemind.main.FreeMindMain
		 and domain interface:boolean isApplet() [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setView(MapView) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setWaitingCursor(boolean) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void out(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void err(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void openDocument(URL) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void repaint() [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], String getProperty(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setProperty(String, String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void saveProperties() [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], void setTitle(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], java.util.logging.Logger getLogger(String) [in FreeMindMain [in FreeMindMain.java [in freemind.main [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.04347826
	Class:freemind.modes.LineAdapter
	Attribute: targetwith type: freemind.modes.MindMapNode
		 and domain interface:ListIterator childrenFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], ListIterator childrenUnfolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean hasChildren() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int getChildPosition(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setPreferredChild(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isBold() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isItalic() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isUnderlined() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setViewer(NodeView) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String toString() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isDescendantOf(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], freemind.main.Tools.BooleanHolder isLeft() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFolded(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFont(Font) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLink(String) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFontSize(int) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setColor(Color) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void addIcon(MindIcon) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int removeLastIcon() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], MindMapNode shallowCopy() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.04347826
	Class:freemind.modes.LinkAdapter
	Attribute: sourcewith type: freemind.modes.MindMapNode
		 and domain interface:ListIterator childrenFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], ListIterator childrenUnfolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean hasChildren() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int getChildPosition(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setPreferredChild(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isBold() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isItalic() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isUnderlined() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setViewer(NodeView) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String toString() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isDescendantOf(MindMapNode) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isFolded() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], freemind.main.Tools.BooleanHolder isLeft() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFolded(boolean) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFont(Font) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLink(String) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setFontSize(int) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setColor(Color) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void addIcon(MindIcon) [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], int removeLastIcon() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], MindMapNode shallowCopy() [in MindMapNode [in MindMapNode.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.041666668
	Class:freemind.controller.MainToolBar
	Attribute: cwith type: freemind.controller.Controller
		 and domain interface:void checkJavaVersion() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getProperty(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setProperty(String, String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], String getResourceString(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], Font getFontThroughMap(Font) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasEdges(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAntialiasAll(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean changeToMode(String) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setMenubarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setLeftToolbarVisible(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setFrame(FreeMindMain) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void moveToRoot() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void informationMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void errorMessage(Object, JComponent) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void obtainFocusForSelected() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]]
  class <anonymous #1>
    void run(), void setZoom(float) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setTitle() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void setAllActions(boolean) [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], void quit() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], boolean acquirePrinterJobAndPageFormat() [in Controller [in Controller.java [in freemind.controller [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.03448276
	Class:freemind.view.mindmapview.CloudView
	Attribute: sourcewith type: freemind.view.mindmapview.NodeView
		 and domain interface:void setDraggedOver(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setDraggedOver(Point) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDragListener(DragGestureListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDropListener(DropTargetListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], static NodeView newNodeView(MindMapNode, MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropAsSibling(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropPosition(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean followLink(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateCursor(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSiblingOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isChildOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isParentOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void getCoordinates(LinkedList, int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintSelected(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintDragOver(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setTreeHeight(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSelected() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isLeft() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setModel(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setMap(MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setEdge(EdgeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void update() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateAll() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.03448276
	Class:freemind.view.mindmapview.ArrowLinkView
	Attribute: sourcewith type: freemind.view.mindmapview.NodeView
		 and domain interface:void setDraggedOver(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setDraggedOver(Point) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDragListener(DragGestureListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDropListener(DropTargetListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], static NodeView newNodeView(MindMapNode, MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropAsSibling(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropPosition(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean followLink(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateCursor(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSiblingOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isChildOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isParentOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void getCoordinates(LinkedList, int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintSelected(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintDragOver(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setTreeHeight(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSelected() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isLeft() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setModel(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setMap(MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setEdge(EdgeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void update() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateAll() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.03448276
	Class:freemind.view.mindmapview.ArrowLinkView
	Attribute: targetwith type: freemind.view.mindmapview.NodeView
		 and domain interface:void setDraggedOver(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setDraggedOver(Point) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDragListener(DragGestureListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void addDropListener(DropTargetListener) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], static NodeView newNodeView(MindMapNode, MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropAsSibling(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean dropPosition(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean followLink(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateCursor(double) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isRoot() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSiblingOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isChildOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isParentOf(NodeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void getCoordinates(LinkedList, int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintSelected(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void paintDragOver(Graphics2D, Dimension) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setTreeHeight(int) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isSelected() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], boolean isLeft() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setLeft(boolean) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setModel(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setMap(MapView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setEdge(EdgeView) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void insert(MindMapNode) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void remove() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void update() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void updateAll() [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], void setRendering(Graphics2D) [in NodeView [in NodeView.java [in freemind.view.mindmapview [in src [in FreeMind0.7.1]]]]], 
Delegation candidate with percentage coverage:0.01923077
	Class:freemind.modes.mindmapmode.MindMapToolBar
	Attribute: cwith type: freemind.modes.mindmapmode.MindMapController
		 and domain interface:MapAdapter newModel() [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void loadPatterns(File) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void loadPatterns(Reader) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void createPatterns(List) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void createIconActions() [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void setFontSize(int) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void setFontFamily(String) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void nodeChanged(MindMapNode) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void anotherNodeSelected(MindMapNode) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], MindMapNode newNode() [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], JPopupMenu getPopupForModel(java.lang.Object) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void setAllActions(boolean) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], String getWidthTitle(int) [in MindMapController [in MindMapController.java [in freemind.modes.mindmapmode [in src [in FreeMind0.7.1]]]]], void load(File) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean save(File) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void addNew(NodeView, int, KeyEvent) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void newMap() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean save() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean saveAs() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void open() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean close() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void doubleClick(MouseEvent) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void plainClick(MouseEvent) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void toggleFolded() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean isBlocked() [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void edit(KeyEvent, boolean, boolean) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void mouseWheelMoved(MouseWheelEvent) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean extendSelection(MouseEvent) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void showPopupMenu(MouseEvent) [in ModeController [in ModeController.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String getText(String) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], boolean binOptionIsTrue(String) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void newMap(MindMap) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], JMenuItem add(JMenu, Action, String) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void add(JMenu, Action) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void handleLoadingException(Exception) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void mapOpened(boolean) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void changeComponentHeight(JComponent, int, int) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void editLong(NodeView, String, KeyEvent) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]]
  class <anonymous #1>
    void actionPerformed(ActionEvent)
  class <anonymous #2>
    void actionPerformed(ActionEvent)
  class <anonymous #3>
    void actionPerformed(ActionEvent)
  class <anonymous #4>
    void actionPerformed(ActionEvent)
  class <anonymous #5>
    void keyPressed(KeyEvent)
    void keyTyped(KeyEvent)
    void keyReleased(KeyEvent)
  class <anonymous #6>
    void mouseClicked(MouseEvent)
    void mouseEntered(MouseEvent)
    void mouseExited(MouseEvent)
    void mousePressed(MouseEvent)
    void mouseReleased(MouseEvent)
    void conditionallyShowPopup(MouseEvent), void closeEdit() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setBlocked(boolean) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void edit(NodeView, NodeView, KeyEvent, boolean, boolean, boolean) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]]
  class TextFieldListener
    void focusGained(FocusEvent)
    void focusLost(FocusEvent)
    void keyPressed(KeyEvent)
    void keyTyped(KeyEvent)
    void keyReleased(KeyEvent)
    void mouseClicked(MouseEvent)
    void mouseEntered(MouseEvent)
    void mouseExited(MouseEvent)
    void mousePressed(MouseEvent)
    void mouseReleased(MouseEvent)
    void conditionallyShowPopup(MouseEvent)
  class <anonymous #1>
    void run(), void toggleChildrenFolded() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLinkByTextField() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setLinkByFileChooser() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setImageByFileChooser() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], String getLinkByFileChooser(FileFilter) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void loadURL(String) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void loadURL() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void setMode(Mode) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], URL getResource(String) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void updateMapModuleName() [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], void select(NodeView) [in ControllerAdapter [in ControllerAdapter.java [in freemind.modes [in src [in FreeMind0.7.1]]]]], 
