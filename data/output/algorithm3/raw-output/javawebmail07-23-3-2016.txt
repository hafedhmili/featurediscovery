processing compilation unit: POPAuthenticator.java
processing compilation unit: SimpleAuthenticator.java
processing compilation unit: UnixAuthenticator.java
processing compilation unit: IMAPAuthenticator.java
processing compilation unit: IntegerConfigParameter.java
processing compilation unit: ConfigStore.java
processing compilation unit: ConfigurationListener.java
processing compilation unit: CryptedStringConfigParameter.java
processing compilation unit: ConfigScheme.java
processing compilation unit: StringConfigParameter.java
processing compilation unit: UnchangeableStringConfigParameter.java
processing compilation unit: ChoiceConfigParameter.java
processing compilation unit: ConfigParameter.java
processing compilation unit: ConfigYesNoParameter.java
processing compilation unit: ErrorHandler.java
processing compilation unit: NoSuchFolderException.java
processing compilation unit: BinaryNotFoundException.java
processing compilation unit: UserDataException.java
processing compilation unit: TimeoutException.java
processing compilation unit: InvalidPasswordException.java
processing compilation unit: CreateUserDataException.java
processing compilation unit: WebMailException.java
processing compilation unit: InvalidDataException.java
processing compilation unit: StylesheetNotFoundException.java
processing compilation unit: DocumentNotFoundException.java
processing compilation unit: FileLogger.java
processing compilation unit: ServletLogger.java
processing compilation unit: ExpireableCache.java
processing compilation unit: TEA.java
processing compilation unit: StringHeap.java
processing compilation unit: JavaScriptCleaner.java
processing compilation unit: Helper.java
processing compilation unit: ByteStore.java
processing compilation unit: StreamConnector.java
processing compilation unit: AttributedExpireableCache.java
processing compilation unit: MD5.java
processing compilation unit: Queue.java
processing compilation unit: About.java
processing compilation unit: UserSetup.java
processing compilation unit: Composer.java
processing compilation unit: ShowMessage.java
processing compilation unit: MailboxList.java
processing compilation unit: ImageHandler.java
processing compilation unit: ErrorHandler.java
processing compilation unit: LogoutSession.java
processing compilation unit: FolderSetup.java
processing compilation unit: NavBar.java
processing compilation unit: WebMailHelp.java
processing compilation unit: WebMailTitle.java
processing compilation unit: AdminPlugin.java
processing compilation unit: FolderList.java
processing compilation unit: ShowMIME.java
processing compilation unit: SendMessage.java
processing compilation unit: FileAttacher.java
processing compilation unit: PassThroughPlugin.java
processing compilation unit: URLHandlerTreeNode.java
processing compilation unit: WebMailServlet.java
processing compilation unit: Logger.java
processing compilation unit: ToplevelURLHandler.java
processing compilation unit: Authenticator.java
processing compilation unit: TimeableConnection.java
processing compilation unit: UserData.java
processing compilation unit: PluginHandler.java
processing compilation unit: Storage.java
processing compilation unit: AuthenticatorHandler.java
processing compilation unit: WebMailVirtualDomain.java
processing compilation unit: PluginDependencyTree.java
processing compilation unit: SystemCheck.java
processing compilation unit: StatusServer.java
processing compilation unit: URLHandlerTree.java
processing compilation unit: HTTPSession.java
processing compilation unit: Plugin.java
processing compilation unit: AdminSession.java
processing compilation unit: ConnectionTimer.java
processing compilation unit: WebMailServer.java
processing compilation unit: MailHostData.java
processing compilation unit: WebMailSession.java
processing compilation unit: URLHandler.java
processing compilation unit: HTTPRequestHeader.java
processing compilation unit: HTTPResponseHeader.java
processing compilation unit: FileStorage.java
processing compilation unit: SimpleStorage.java
processing compilation unit: HTMLImage.java
processing compilation unit: HTMLDocument.java
processing compilation unit: HTMLHeader.java
processing compilation unit: Fancyfier.java
processing compilation unit: JavaScriptFilter.java
processing compilation unit: XHTMLDocument.java
processing compilation unit: XMLSystemData.java
processing compilation unit: XMLGenericModel.java
processing compilation unit: XMLAdminModel.java
processing compilation unit: XMLMessage.java
processing compilation unit: XMLMessagePart.java
processing compilation unit: XMLUserData.java
processing compilation unit: XMLCommon.java
processing compilation unit: XMLResourceBundle.java
processing compilation unit: XMLUserModel.java
processing compilation unit: TranscodeUtil.java
processing compilation unit: ResourceBase.java
processing compilation unit: Resources_en.java
processing compilation unit: Resources_zh_TW.java
processing compilation unit: Resources.java
processing compilation unit: Resources_en_US.java
processing compilation unit: OTPAuthDisplayMngr.java
processing compilation unit: OTPCacheNode.java
processing compilation unit: CRAuthDisplayMngr.java
processing compilation unit: OTPAuthenticatorIface.java
processing compilation unit: AuthDisplayMngr.java
processing compilation unit: CRAuthenticator.java
processing compilation unit: OTPAuthenticator.java
processing compilation unit: ChallengeHandler.java
Project javawebmail-0.7 has : 111 compilation units, and 115 defined types
Printing the relation
net.wastl.webmail.authenticators.IMAPAuthenticator =====> [ void init(Storage store), void register(ConfigScheme store), void authenticatePreUserData(String user, String domain, String passwd), void IMAPAuthenticator(), boolean canChangePassword(), String getVersion() ]
net.wastl.webmail.authenticators.POPAuthenticator =====> [ void POPAuthenticator(), void init(Storage store), void register(ConfigScheme store), void authenticatePreUserData(String user, String domain, String passwd), boolean canChangePassword(), String getVersion() ]
net.wastl.webmail.authenticators.SimpleAuthenticator =====> [ void changePassword(UserData udata, String passwd, String verify), void authenticatePostUserData(UserData udata, String domain, String password), void init(Storage store), void SimpleAuthenticator(), void register(ConfigScheme store), String getVersion() ]
net.wastl.webmail.authenticators.UnixAuthenticator =====> [ void UnixAuthenticator(), void authenticatePreUserData(String user, String domain, String given_passwd), void init(Storage store), void register(ConfigScheme store), boolean canChangePassword(), String getVersion() ]
net.wastl.webmail.config.ChoiceConfigParameter =====> [ String getDescription(String choice), void ConfigYesNoParameter(String name, String desc), void addChoice(Object choice, String desc), String getType(), void removeChoice(Object choice), void ChoiceConfigParameter(String name, String desc), Enumeration choices(), boolean isPossibleValue(Object value) ]
net.wastl.webmail.config.ConfigParameter =====> [ String getDescription(String choice), void addChoice(Object choice, String desc), void setDefault(Object value), void StringConfigParameter(String name, String def, String desc), String getDescription(), void addConfigurationListener(ConfigurationListener l), void IntegerConfigParameter(String name, String def, String desc), void CryptedStringConfigParameter(String name, String def, String desc), void ConfigParameter(String name, Object def, String desc), boolean isPossibleValue(Object value), void ConfigYesNoParameter(String name, String desc), void UnchangeableStringConfigParameter(String name, String def, String desc), void setGroup(String g), Enumeration getConfigurationListeners(), String getType(), String getGroup(), void removeChoice(Object choice), void ChoiceConfigParameter(String name, String desc), Enumeration choices(), String getKey(), String filter(String s), Object getDefault() ]
net.wastl.webmail.config.ConfigScheme =====> [ void configRegisterChoiceKey(ConfigurationListener l, String key, String desc), void notifyConfigurationChange(String key), void configRegisterYesNoKey(String key, String desc), Enumeration getPossibleKeys(), void configRegisterStringKey(ConfigurationListener l, String key, String def, String desc), String getDescription(String key), void configRegisterChoiceKey(String key, String desc), Object getDefaultValue(String key), void registerConfig(ConfigParameter parm), void configRegisterStringKey(String key, String def, String desc), void configRegisterIntegerKey(String key, String def, String desc), void setDefaultValue(String key, Object default_value), void configRegisterCryptedStringKey(String key, String def, String desc), void configRegisterYesNoKey(ConfigurationListener l, String key, String desc), void configRegisterIntegerKey(ConfigurationListener l, String key, String def, String desc), void configAddChoice(String key, String choice, String desc), void addConfigurationListener(String key, ConfigurationListener l), ConfigParameter getConfigParameter(String key), boolean isValid(String key, Object value), void configRegisterCryptedStringKey(ConfigurationListener l, String key, String def, String desc), String getConfigParameterGroup(String key), String getConfigParameterType(String key), void ConfigScheme(), String filter(String key, String value) ]
net.wastl.webmail.config.ConfigStore =====> [ Enumeration getConfigKeys(), void ConfigStore(ConfigScheme cs), void setVirtualDomain(String name, WebMailVirtualDomain domain), void setConfig(String key, String value), void initChoices(), void deleteVirtualDomain(String name), void setConfigRaw(String groupname, String key, String value, String type), String getConfig(String key), void deleteConfigGroup(String groupname), void ConfigStore(), void createVirtualDomain(String name), void initChoices(String key), boolean isConfigSet(String key), void addConfigurationListener(String key, ConfigurationListener l), Enumeration getVirtualDomains(), void setConfigRaw(String group, String key, String value, String type), ConfigScheme getConfigScheme(), String getConfigRaw(String key), Element createConfigElement(String key, String value, String type), Element getSysData(), long getLoadTime(), DocumentFragment getDocumentFragment(), Element getConfigElementByKey(String key), Document getRoot(), WebMailVirtualDomain getVirtualDomain(String domname), Element createConfigGroup(String groupname), void XMLSystemData(Document d, ConfigScheme cs), void setLoadTime(long time), void setConfig(String key, String value, boolean filter, boolean notify) ]
net.wastl.webmail.config.ConfigYesNoParameter =====> [ void ConfigYesNoParameter(String name, String desc), String getType() ]
net.wastl.webmail.config.ConfigurationListener =====> [ void initConfig(), void notifyConfigurationChange(String key), void queue(long time, String message), void SimpleStorage(WebMailServer parent), void initLog(), void writeMessage(long time, String message), Templates getStylesheet(String name, Locale locale, String theme), String getURL(), void register(WebMailServer parent), String formatDate(long date), void flush(), void FileLogger(WebMailServer parent, Storage st), byte[] getBinaryFile(String name, Locale locale, String theme), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), void loadXMLSysData(), void initAuth(), String getStringResource(String key, Locale locale), void initMIME(), void saveXMLSysData(), void ServletLogger(WebMailServer parent, Storage st), void initLanguages(), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), void log(int level, Exception ex), Authenticator getAuthenticator(), String getDescription(), void saveUserData(String user, String domain), void init(), String getName(), String provides(), void SendMessage(), void FileStorage(WebMailServer parent), XMLUserData createUserData(String user, String domain, String password), void shutdown(), void deleteUserData(String user, String domain), String requires(), void log(int level, String message), Enumeration getUsers(String domain), String getMimeType(String name), void initCache(), String getVersion() ]
net.wastl.webmail.config.CryptedStringConfigParameter =====> [ String getType(), void CryptedStringConfigParameter(String name, String def, String desc), String filter(String s) ]
net.wastl.webmail.config.IntegerConfigParameter =====> [ String getType(), void IntegerConfigParameter(String name, String def, String desc), boolean isPossibleValue(Object value) ]
net.wastl.webmail.config.StringConfigParameter =====> [ void UnchangeableStringConfigParameter(String name, String def, String desc), void StringConfigParameter(String name, String def, String desc), String getType(), void CryptedStringConfigParameter(String name, String def, String desc), String filter(String s), boolean isPossibleValue(Object value) ]
net.wastl.webmail.config.UnchangeableStringConfigParameter =====> [ void UnchangeableStringConfigParameter(String name, String def, String desc), String getType(), boolean isPossibleValue(Object value) ]
net.wastl.webmail.debug.ErrorHandler =====> [ void ErrorHandler(Exception ex) ]
net.wastl.webmail.exceptions.BinaryNotFoundException =====> [ void BinaryNotFoundException(), void BinaryNotFoundException(String s) ]
net.wastl.webmail.exceptions.CreateUserDataException =====> [ void CreateUserDataException(String s, String user, String domain), void CreateUserDataException() ]
net.wastl.webmail.exceptions.DocumentNotFoundException =====> [ void DocumentNotFoundException(String s), void DocumentNotFoundException() ]
net.wastl.webmail.exceptions.InvalidDataException =====> [ void InvalidDataException(), void InvalidDataException(String s) ]
net.wastl.webmail.exceptions.InvalidPasswordException =====> [ void InvalidPasswordException(), void InvalidPasswordException(String s) ]
net.wastl.webmail.exceptions.NoSuchFolderException =====> [ void NoSuchFolderException(), void NoSuchFolderException(String msg) ]
net.wastl.webmail.exceptions.StylesheetNotFoundException =====> [ void StylesheetNotFoundException(), void StylesheetNotFoundException(String s) ]
net.wastl.webmail.exceptions.TimeoutException =====> [ void TimeoutException() ]
net.wastl.webmail.exceptions.UserDataException =====> [ void UserDataException(), void CreateUserDataException(String s, String user, String domain), void UserDataException(String s, String user, String domain), String getUser(), String getDomain(), void CreateUserDataException() ]
net.wastl.webmail.exceptions.WebMailException =====> [ void InvalidPasswordException(), void InvalidPasswordException(String s), void UserDataException(), String getUser(), String getDomain(), void WebMailException(), void StylesheetNotFoundException(), void StylesheetNotFoundException(String s), void WebMailException(Exception ex), void DocumentNotFoundException(), void CreateUserDataException(), void BinaryNotFoundException(String s), void CreateUserDataException(String s, String user, String domain), void InvalidDataException(), void InvalidDataException(String s), void UserDataException(String s, String user, String domain), void WebMailException(String s), void DocumentNotFoundException(String s), void BinaryNotFoundException() ]
net.wastl.webmail.logger.FileLogger =====> [ String formatDate(long date), void log(int level, Exception ex), void flush(), void FileLogger(WebMailServer parent, Storage st), void queue(long time, String message), void notifyConfigurationChange(String key), void shutdown(), void initLog(), void writeMessage(long time, String message), void log(int level, String message) ]
net.wastl.webmail.logger.ServletLogger =====> [ void log(int level, Exception ex), void notifyConfigurationChange(String key), void shutdown(), void initLog(), void log(int level, String message), void ServletLogger(WebMailServer parent, Storage st) ]
net.wastl.webmail.misc.AttributedExpireableCache =====> [ void AttributedExpireableCache(int capacity), void remove(Object key), void AttributedExpireableCache(int capacity, float expire_factor), void put(Object id, Object object, Object attribs), Object getAttributes(Object key) ]
net.wastl.webmail.misc.ByteStore =====> [ void setDescription(String s), String getDescription(), String getContentEncoding(), int getSize(), void ByteStore(byte[] b), String getName(), void setContentEncoding(String s), byte[] getBytes(), String getContentType(), void setContentType(String s), void setName(String s), ByteStore getBinaryFromIS(InputStream in, int nr_bytes_to_read) ]
net.wastl.webmail.misc.ExpireableCache =====> [ void AttributedExpireableCache(int capacity, float expire_factor), void put(Object id, Object object, Object attribs), void ExpireableCache(int capacity), int getMisses(), void hit(), void miss(), void ExpireableCache(int capacity, float expire_factor), int getUsage(), void remove(Object key), int getHits(), void AttributedExpireableCache(int capacity), void shutdown(), void setCapacity(int size), int getCapacity(), Object get(Object key), void expireOver(), Object getAttributes(Object key), void put(Object key, Object value) ]
net.wastl.webmail.misc.ExpireableCache.MyHeap =====> [ void insert(Object key, long value), void increase(int cur_pos), void remove(Object key), void decrease(int cur_pos), void MyHeap(int capacity), Object next() ]
net.wastl.webmail.misc.Helper =====> [ int getQuoteLevel(String token), int HPERM_OP(int a, int n, int m), int[] des_set_key(byte[] key), String calcSessionCode(InetAddress a, HTTPRequestHeader h), void PERM_OP(int a, int b, int n, int m, int[] results), int D_ENCRYPT(int L, int R, int S, int E0, int E1, int[] s), String decryptTEA(String src), void Helper(), void intToFourBytes(int iValue, byte[] b, int offset), Enumeration breakLine(String line, int linesize, int quotelevel), int[] body(int[] schedule, int Eswap0, int Eswap1), String joinAddress(Address[] a), String encryptTEA(String src), String crypt(String salt, String original), int byteToUnsigned(byte b), int fourBytesToInt(byte[] b, int offset), int findFittingBreakPos(String line, int linesize), void main(String[] args) ]
net.wastl.webmail.misc.JavaScriptCleaner =====> [ void JavaScriptCleaner(Document d), void walkTree(Node node) ]
net.wastl.webmail.misc.MD5 =====> [ void Update(MD5State stat, byte[] buffer, int offset, int length), String asHex(), int uadd(int a, int b), int GG(int a, int b, int c, int d, int x, int s, int ac), String asHex(byte[] hash), byte[] Final(), void Init(), int FF(int a, int b, int c, int d, int x, int s, int ac), void Update(String s), byte[] Encode(int[] input, int len), void Transform(MD5State state, byte[] buffer, int shift), void Update(int i), int uadd(int a, int b, int c), int II(int a, int b, int c, int d, int x, int s, int ac), int rotate_left(int x, int n), void MD5(), void Update(byte[] buffer, int length), void Update(byte b), void MD5(Object ob), int HH(int a, int b, int c, int d, int x, int s, int ac), int uadd(int a, int b, int c, int d), void Update(byte[] buffer, int offset, int length), int[] Decode(byte[] buffer, int len, int shift), void Update(byte[] buffer) ]
net.wastl.webmail.misc.MD5State =====> [ void MD5State(), void MD5State(MD5State from) ]
net.wastl.webmail.misc.Queue =====> [ void Queue(), boolean isEmpty(), void queue(Object o), Object next() ]
net.wastl.webmail.misc.StreamConnector =====> [ void StreamConnector(InputStream sin, int size), ByteStore getResult() ]
net.wastl.webmail.misc.StringHeap =====> [ void StringHeap(int capacity), void increase(int cur_pos), void decrease(int cur_pos), void insert(String key), void remove(String key), String next(), boolean isEmpty() ]
net.wastl.webmail.misc.TEA =====> [ int[] decipher(int[] v), byte[] decode(byte[] b, int count), void TEA(byte[] key), byte[] encipher(byte[] v), int padding(), String dumpBytes(byte[] b), byte[] decipher(byte[] v), byte[] decode(int[] b), int[] encipher(int[] v), int[] encode(byte[] b, int count), void main(String[] args) ]
net.wastl.webmail.plugins.About =====> [ String getDescription(), String getName(), String requires(), String getURL(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void About(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.AdminPlugin =====> [ String getDescription(), void AdminPlugin(), String getName(), String requires(), String getURL(), String provides(), void reqShutdown(int time, boolean reboot), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.AdminPlugin.ShutdownThread =====> [ void ShutdownThread(int time, boolean restart, WebMailServer parent) ]
net.wastl.webmail.plugins.Composer =====> [ String getDescription(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), void Composer(), String provides(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.ErrorHandler =====> [ String getDescription(), String getName(), String requires(), String getURL(), String provides(), void ErrorHandler(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.FileAttacher =====> [ HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), String getDescription(), String getName(), String requires(), String getURL(), String provides(), void FileAttacher(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.FolderList =====> [ String getDescription(), void FolderList(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), String provides(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.FolderSetup =====> [ String getDescription(), void FolderSetup(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), String provides(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.ImageHandler =====> [ String getDescription(), String getName(), String requires(), String getURL(), void ImageHandler(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.LogoutSession =====> [ String getDescription(), String getName(), String requires(), String getURL(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void LogoutSession(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.MailboxList =====> [ String getDescription(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), String provides(), void MailboxList(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.NavBar =====> [ void NavBar(), String getDescription(), String getName(), String requires(), String getURL(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.PassThroughPlugin =====> [ String getDescription(), String getName(), String requires(), String getURL(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void PassThroughPlugin(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.SendMessage =====> [ HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), void notifyConfigurationChange(String key), String getDescription(), void init(), String getName(), String requires(), String getURL(), String provides(), void SendMessage(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.ShowMIME =====> [ String getDescription(), void ShowMIME(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), String provides(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.ShowMessage =====> [ void ShowMessage(), String getDescription(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), String provides(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.UserSetup =====> [ void UserSetup(), String getDescription(), String getName(), String requires(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getURL(), String provides(), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.WebMailHelp =====> [ String getDescription(), String getName(), String requires(), String getURL(), void WebMailHelp(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.plugins.WebMailTitle =====> [ void WebMailTitle(), String getDescription(), String getName(), String requires(), String getURL(), String provides(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void register(WebMailServer parent), String getVersion() ]
net.wastl.webmail.server.AdminSession =====> [ void setupUserEdit(), boolean isLoggedOut(), long getLastAccess(), Document getModel(), String getSessionCode(), void changeUser(HTTPRequestHeader head), Locale getLocale(), void selectUser(String user), void login(HTTPRequestHeader h), void saveData(), void setException(Exception ex), long getTimeout(), InetAddress getRemoteAddress(), String getEnv(String key), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void doInit(WebMailServer parent, HTTPRequestHeader h), void setEnv(String key, String value), void timeoutOccured(), void deleteUser(String user), void login(), void setEnv(), void logout(), void setLastAccess(), void clearUser(), void selectDomain(String domain) ]
net.wastl.webmail.server.Authenticator =====> [ void authenticatePreUserData(String login, String domain, String passwd), void putIntoCache(String key, OTPState ast, OTPState nst), void authenticatePostUserData(UserData udata, String domain, String password), OTPState getFromCache(String key, int type), void POPAuthenticator(), void changePassword(UserData ud, String newpass, String vrfy), void removeFromCache(String key, int type), void changePassword(UserData udata, String passwd, String verify), String getNewChallenge(UserData udata), void authenticatePostUserData(UserData ud, String dom, String pass), void getFromCache(String key, int type, OTPState[] sts), void SimpleAuthenticator(), boolean canChangePassword(), void OTPAuthenticator(), void authenticatePreUserData(String user, String domain, String given_passwd), void register(ConfigScheme store), void authenticatePreUserData(String user, String domain, String passwd), void Authenticator(), void OTPAuthenticatorIface(), void changePassword(UserData udata, String newpassword, String verify), String getNewChallenge(UserData ud), void UnixAuthenticator(), void CRAuthenticator(), void init(Storage store), String getChallenge(UserData ud), AuthDisplayMngr getAuthDisplayMngr(), void IMAPAuthenticator(), String getKey(), String getVersion() ]
net.wastl.webmail.server.AuthenticatorHandler =====> [ Authenticator getAuthenticator(String key), void AuthenticatorHandler(WebMailServer parent), void registerAuthenticators() ]
net.wastl.webmail.server.ConnectionTimer =====> [ void removeTimeableConnection(TimeableConnection c), void printStatus(), void removeAll(), void ConnectionTimer(), void addTimeableConnection(TimeableConnection c) ]
net.wastl.webmail.server.HTTPSession =====> [ void setupUserEdit(), void refreshFolderInformation(), boolean isLoggedOut(), ByteStore getAttachment(String key), void clearWork(), String generateFolderHash(Folder folder), void addWorkAttachment(String name, ByteStore bs, String description), String formatDate(long date), Enumeration getMimeParts(String msgid), void subscribeFolder(String folderhash), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void getMessage(String folderhash, int msgnum), void prepareCompose(), Folder connect(String name), long getTimeout(), Folder getChildFolder(Folder root, String folderhash), void timeoutOccured(), void setSent(boolean b), void login(), void setEnv(), void getMessage(String folderhash, int msgnum, int mode), void changeSetup(HTTPRequestHeader head), void disconnectAll(), void clearAttachments(), void setLastAccess(), Hashtable getAttachments(), void refreshFolderInformation(boolean subscribed_only), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void connectAll(), String getStringResource(String key), String getUserName(), Folder getFolder(String folderhash), Folder getRootFolder(String name), long getLastAccess(), boolean isSent(), void removeWorkAttachment(String name), void removeFolder(String id, boolean recurse), Document getModel(), String getSessionCode(), void changeUser(HTTPRequestHeader head), Locale getLocale(), void selectUser(String user), int[] getSelectedMessages(HTTPRequestHeader head, int max), void login(HTTPRequestHeader h), void setAddToFolder(String id), void refreshFolderInformation(String folderhash), void saveData(), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void handleTransportException(SendFailedException e), void expungeFolders(), void unsubscribeFolder(String folderhash), void addMailbox(String name, String protocol, String host, String login, String password), InetAddress getRemoteAddress(), UserData getUser(), String getEnv(String key), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void doInit(WebMailServer parent, HTTPRequestHeader h), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void setEnv(String key, String value), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), XMLUserModel getUserModel(), void createMessageList(String folderhash, int list_part), void deleteUser(String user), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), void disconnect(String name), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void logout(), void removeMailbox(String name), void clearUser(), void selectDomain(String domain), void setSubscribedAll(String id, boolean subscribed), ByteStore getMIMEPart(String msgid, String name), void storeMessage(HTTPRequestHeader head), Hashtable getActiveConnections() ]
net.wastl.webmail.server.Logger =====> [ void log(int level, Exception ex), String formatDate(long date), void flush(), void FileLogger(WebMailServer parent, Storage st), void queue(long time, String message), void notifyConfigurationChange(String key), void shutdown(), void initLog(), void writeMessage(long time, String message), void log(int level, String message), void ServletLogger(WebMailServer parent, Storage st) ]
net.wastl.webmail.server.MailHostData =====> [ void setLogin(String s), void setName(String v), String getLogin(), void setHostURL(String v), void setPassword(String v), String getName(), String getID(), String getHostURL(), String getPassword() ]
net.wastl.webmail.server.Plugin =====> [ void notifyConfigurationChange(String key), void AdminPlugin(), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), void FolderList(), String getURL(), void reqShutdown(int time, boolean reboot), void register(WebMailServer parent), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), void ShowMessage(), void WebMailTitle(), void ImageHandler(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void ErrorHandler(), void MailboxList(), void PassThroughPlugin(), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), void UserSetup(), String getDescription(), void ShowMIME(), void FolderSetup(), String getName(), void init(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), void WebMailHelp(), String provides(), void SendMessage(), void NavBar(), String requires(), void Composer(), void FileAttacher(), String getVersion(), void About(), void LogoutSession() ]
net.wastl.webmail.server.PluginDependencyTree =====> [ boolean addPlugin(Plugin p), boolean provides(String s), void PluginDependencyTree(String s), void PluginDependencyTree(Plugin p), String provides(), void register(WebMailServer parent) ]
net.wastl.webmail.server.PluginHandler =====> [ Enumeration getPlugins(), void registerPlugins(), void PluginHandler(WebMailServer parent) ]
net.wastl.webmail.server.PluginHandler.FFilter =====> [ void FFilter() ]
net.wastl.webmail.server.StatusServer =====> [ String getStatus() ]
net.wastl.webmail.server.Storage =====> [ Enumeration getConfigKeys(), XMLAdminModel createXMLAdminModel(), void initConfig(), void notifyConfigurationChange(String key), void SimpleStorage(WebMailServer parent), void initLog(), void setConfig(String key, String value), void deleteVirtualDomain(String name), Templates getStylesheet(String name, Locale locale, String theme), void setDebug(boolean b), String getConfig(String key), void deleteUserData(String user), boolean getDebug(), void save(), String formatDate(long date), Enumeration getUsers(), byte[] getBinaryFile(String name, Locale locale, String theme), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), XMLUserModel createXMLUserModel(XMLUserData data), Enumeration getVirtualDomains(), WebMailVirtualDomain createVirtualDomain(String name), void loadXMLSysData(), String getStringResource(String key, Locale locale), void initAuth(), void initMIME(), void saveXMLSysData(), void setUserData(String user, UserData userdata), void initLanguages(), XMLGenericModel createXMLGenericModel(), Authenticator getAuthenticator(), void log(int level, Exception ex), WebMailVirtualDomain getVirtualDomain(String name), void saveUserData(String user, String domain), void FileStorage(WebMailServer parent), void initConfigKeys(), String getBasePath(Locale locale, String theme), XMLSystemData getSystemData(), XMLUserData createUserData(String user, String domain, String password), void deleteUserData(String user, String domain), void shutdown(), XMLUserData getUserData(String user, String domain, String passwd), void Storage(WebMailServer parent), void setVirtualDomain(String name, WebMailVirtualDomain v), void log(int level, String message), Enumeration getUsers(String domain), String getMimeType(String name), void initCache() ]
net.wastl.webmail.server.SystemCheck =====> [ void SystemCheck(WebMailServer parent), void checkPathProperty(WebMailServer parent, String property) ]
net.wastl.webmail.server.TimeableConnection =====> [ void setupUserEdit(), void refreshFolderInformation(), boolean isLoggedOut(), ByteStore getAttachment(String key), void clearWork(), String generateFolderHash(Folder folder), void addWorkAttachment(String name, ByteStore bs, String description), String formatDate(long date), Enumeration getMimeParts(String msgid), void subscribeFolder(String folderhash), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void getMessage(String folderhash, int msgnum), void prepareCompose(), Folder connect(String name), long getTimeout(), Folder getChildFolder(Folder root, String folderhash), void timeoutOccured(), void setSent(boolean b), void login(), void setEnv(), void getMessage(String folderhash, int msgnum, int mode), void changeSetup(HTTPRequestHeader head), void disconnectAll(), void clearAttachments(), void setLastAccess(), Hashtable getAttachments(), void refreshFolderInformation(boolean subscribed_only), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void connectAll(), String getStringResource(String key), String getUserName(), Folder getFolder(String folderhash), Folder getRootFolder(String name), long getLastAccess(), boolean isSent(), void removeWorkAttachment(String name), void removeFolder(String id, boolean recurse), Document getModel(), String getSessionCode(), void changeUser(HTTPRequestHeader head), Locale getLocale(), void selectUser(String user), int[] getSelectedMessages(HTTPRequestHeader head, int max), void login(HTTPRequestHeader h), void setAddToFolder(String id), void refreshFolderInformation(String folderhash), void saveData(), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void handleTransportException(SendFailedException e), void expungeFolders(), void unsubscribeFolder(String folderhash), void addMailbox(String name, String protocol, String host, String login, String password), InetAddress getRemoteAddress(), UserData getUser(), String getEnv(String key), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void doInit(WebMailServer parent, HTTPRequestHeader h), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void setEnv(String key, String value), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), XMLUserModel getUserModel(), void createMessageList(String folderhash, int list_part), void deleteUser(String user), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), void disconnect(String name), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void logout(), void removeMailbox(String name), void clearUser(), void selectDomain(String domain), void setSubscribedAll(String id, boolean subscribed), ByteStore getMIMEPart(String msgid, String name), void storeMessage(HTTPRequestHeader head), Hashtable getActiveConnections() ]
net.wastl.webmail.server.ToplevelURLHandler =====> [ void registerHandler(String url, URLHandler handler), String getDescription(), HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), String getName(), String getURL(), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), void ToplevelURLHandler(WebMailServer parent) ]
net.wastl.webmail.server.URLHandler =====> [ void notifyConfigurationChange(String key), void AdminPlugin(), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), void FolderList(), String getURL(), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), void reqShutdown(int time, boolean reboot), void register(WebMailServer parent), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), void ShowMessage(), HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), void WebMailTitle(), void ImageHandler(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void ErrorHandler(), void ToplevelURLHandler(WebMailServer parent), void MailboxList(), void PassThroughPlugin(), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), void UserSetup(), String getDescription(), void ShowMIME(), void FolderSetup(), String getName(), void init(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), void WebMailHelp(), String provides(), void SendMessage(), void NavBar(), void registerHandler(String url, URLHandler handler), String requires(), void Composer(), void FileAttacher(), void About(), String getVersion(), void LogoutSession() ]
net.wastl.webmail.server.URLHandlerTree =====> [ void addHandler(String url, URLHandler h), URLHandler getHandler(String url), String getURL(), void URLHandlerTree(String url) ]
net.wastl.webmail.server.URLHandlerTreeNode =====> [ void notifyConfigurationChange(String key), void AdminPlugin(), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), void FolderList(), URLHandler getHandler(String url), String getURL(), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), void reqShutdown(int time, boolean reboot), void register(WebMailServer parent), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), void ShowMessage(), HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), void WebMailTitle(), void addHandler(String url, URLHandler h), void ImageHandler(), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), void ErrorHandler(), void ToplevelURLHandler(WebMailServer parent), void MailboxList(), void PassThroughPlugin(), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), void UserSetup(), String getDescription(), void ShowMIME(), void FolderSetup(), String getName(), void init(), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), void WebMailHelp(), String provides(), void SendMessage(), void NavBar(), void registerHandler(String url, URLHandler handler), String requires(), void Composer(), void FileAttacher(), void About(), String getVersion(), void LogoutSession(), void URLHandlerTree(String url) ]
net.wastl.webmail.server.UserData =====> [ Locale getPreferredLocale(), void setMaxLineLength(int i), void setBreakLines(boolean b), void setSignature(String s), String getDomain(), MailHostData getMailHost(String name), boolean checkPassword(String s), void addMailHost(String name, String host, String login, String password), MailHostData getMailHost(String id), Enumeration mailHosts(), void setPassword(String newpasswd, String verify), String getLastLogin(), void setSaveSent(boolean b), String formatDate(long date), void setBoolVar(String var, boolean value), void removeMailHost(String name), void resetBoolVars(), long getIntVar(String var), boolean wantsBreakLines(), void setPasswordData(String data), void setBoolVarWrapper(String var, boolean value), void setEmail(String s), int getMaxShowMessages(), String getTheme(), void setShowFancy(boolean b), void setSetFlags(boolean b), boolean wantsShowImages(), void XMLUserData(Document d), String getFirstLogin(), void login(), void setFullName(String s), long getIntVarWrapper(String var), void setIntVar(String var, long value), void removeMailHost(String id), void setPreferredLocale(String newloc), boolean getBoolVar(String var), String getLoginCount(), void ensureElement(String tag, String attribute, String att_value), String getUserName(), boolean wantsShowFancy(), String getLogin(), String getEmail(), void setDomain(String s), void setSentFolder(String s), void setTheme(String theme), void init(String user, String domain, String password), boolean wantsSetFlags(), String getSentFolder(), Element getUserData(), void setUserName(String s), boolean getBoolVarWrapper(String var), boolean wantsSaveSent(), DocumentFragment getDocumentFragment(), Document getRoot(), void setMaxShowMessages(int i), void setShowImages(boolean b), String getPasswordData(), String getFullName(), void logout(), String getSignature(), int getMaxLineLength(), void setIntVarWrapper(String var, long value) ]
net.wastl.webmail.server.WebMailServer =====> [ ConnectionTimer getConnectionTimer(), void initConfig(), long getUptime(), AuthenticatorHandler getAuthenticatorHandler(), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), void initProviders(), void WebMailServlet(), void debugOut(String msg, Exception ex), void setDebug(boolean b), String getConfig(String key), boolean getDebug(), void initStorage(), Provider[] getTransportProviders(), void setProperty(String name, String value), String getCopyright(), Storage getStorage(), void removeSession(HTTPSession w), Locale getDefaultLocale(), ConfigScheme getConfigScheme(), WebMailServer getServer(), void debugOut(String msg), String getProperty(String name), HTTPSession getSession(String key), ServletContext getServletContext(), void initServers(), void reinitServer(String ID), void WebMailServer(), Object getServer(String ID), void doInit(), String getDefaultTheme(), String getBasePath(), void shutdownServers(), Enumeration getSessions(), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), ToplevelURLHandler getURLHandler(), void shutdown(), String generateMessageID(String user), AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), String getBaseURI(HTTPRequestHeader header), Enumeration getServers(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), Provider[] getStoreProviders(), String getImageBasePath(), PluginHandler getPluginHandler(), void restart(), String getVersion() ]
net.wastl.webmail.server.WebMailServlet =====> [ void reinitServer(String ID), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), Object getServer(String ID), String getBasePath(), void shutdownServers(), void WebMailServlet(), void debugOut(String msg, Exception ex), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), Enumeration getServers(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), ServletContext getServletContext(), String getImageBasePath(), void initServers(), String getVersion() ]
net.wastl.webmail.server.WebMailSession =====> [ void refreshFolderInformation(), ByteStore getAttachment(String key), boolean isLoggedOut(), void clearWork(), String generateFolderHash(Folder folder), void addWorkAttachment(String name, ByteStore bs, String description), String formatDate(long date), Enumeration getMimeParts(String msgid), void subscribeFolder(String folderhash), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void getMessage(String folderhash, int msgnum), void prepareCompose(), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), long getTimeout(), void timeoutOccured(), void setSent(boolean b), void login(), void getMessage(String folderhash, int msgnum, int mode), void setEnv(), void changeSetup(HTTPRequestHeader head), void disconnectAll(), void clearAttachments(), void setLastAccess(), Hashtable getAttachments(), void refreshFolderInformation(boolean subscribed_only), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void connectAll(), String getStringResource(String key), String getUserName(), Folder getFolder(String folderhash), Folder getRootFolder(String name), long getLastAccess(), boolean isSent(), void removeWorkAttachment(String name), void removeFolder(String id, boolean recurse), Document getModel(), String getSessionCode(), Locale getLocale(), int[] getSelectedMessages(HTTPRequestHeader head, int max), void login(HTTPRequestHeader h), void setAddToFolder(String id), void refreshFolderInformation(String folderhash), void saveData(), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void handleTransportException(SendFailedException e), void expungeFolders(), void unsubscribeFolder(String folderhash), void addMailbox(String name, String protocol, String host, String login, String password), UserData getUser(), InetAddress getRemoteAddress(), String getEnv(String key), void doInit(WebMailServer parent, HTTPRequestHeader h), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), void setEnv(String key, String value), XMLUserModel getUserModel(), void createMessageList(String folderhash, int list_part), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), void disconnect(String name), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void logout(), void removeMailbox(String name), void setSubscribedAll(String id, boolean subscribed), ByteStore getMIMEPart(String msgid, String name), void storeMessage(HTTPRequestHeader head), Hashtable getActiveConnections() ]
net.wastl.webmail.server.WebMailVirtualDomain =====> [ String getAuthenticationHost(), void setHostsRestricted(boolean b), void setDefaultServer(String name), String getDomainName(), boolean isAllowedHost(String host), void setAllowedHosts(String hosts), Enumeration getAllowedHosts(), String getDefaultServer(), void setAuthenticationHost(String name), void setDomainName(String name), boolean getHostsRestricted() ]
net.wastl.webmail.server.http.HTTPRequestHeader =====> [ boolean isContentSet(String key), void setMethod(String s), void setVersion(String s), String getContent(String key), void HTTPRequestHeader(), String getMethod(), void setHeader(String key, String value), String getHeader(String t), Object getObjContent(String key), String getPath(), Enumeration getHeaderKeys(), Enumeration getContentKeys(), Hashtable getContent(), void setPath(String s), void setContent(String key, Object value), String getVersion() ]
net.wastl.webmail.server.http.HTTPResponseHeader =====> [ void HTTPResponseHeader(int response_code, String status), void putHeader(String key, String value), String getHeader(String t), String getResponseLine(), void removeHeader(String key), Enumeration getHeaderKeys() ]
net.wastl.webmail.storage.FileStorage =====> [ void initConfig(), void notifyConfigurationChange(String key), void SimpleStorage(WebMailServer parent), void initLog(), Templates getStylesheet(String name, Locale locale, String theme), String formatDate(long date), byte[] getBinaryFile(String name, Locale locale, String theme), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), void loadXMLSysData(), void initAuth(), String getStringResource(String key, Locale locale), void initMIME(), void saveXMLSysData(), void initLanguages(), Authenticator getAuthenticator(), void log(int level, Exception ex), void saveUserData(String user, String domain), void FileStorage(WebMailServer parent), XMLUserData createUserData(String user, String domain, String password), void shutdown(), void deleteUserData(String user, String domain), void log(int level, String message), Enumeration getUsers(String domain), String getMimeType(String name), void initCache() ]
net.wastl.webmail.storage.simple.SimpleStorage =====> [ void initConfig(), XMLUserData createUserData(String user, String domain, String password), void SimpleStorage(WebMailServer parent), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), void deleteUserData(String user, String domain), void saveUserData(String user, String domain), void loadXMLSysData(), void saveXMLSysData(), Enumeration getUsers(String domain), void initCache() ]
net.wastl.webmail.ui.html.Fancyfier =====> [ void Fancyfier(), String apply(String s), void init() ]
net.wastl.webmail.ui.html.HTMLDocument =====> [ void setStatus(int code, String status), int length(), boolean hasHTTPHeader(), String getContentEncoding(), String getReturnStatus(), Enumeration getHTTPHeaderKeys(), void XHTMLDocument(Document xml, String xsl), String getHTTPHeader(String key), String getContentType(), void HTMLDocument(), void HTMLDocument(String title, String content), void addHTTPHeader(String key, String value), void HTMLImage(Storage store, String name, Locale locale, String theme), byte[] toBinary(), int getReturnCode(), void HTMLDocument(String title, String cont, String basepath), void HTMLImage(ByteStore content), int size(), void XHTMLDocument(Document xml, Templates stylesheet) ]
net.wastl.webmail.ui.html.HTMLHeader =====> [ void HTMLHeader(String title) ]
net.wastl.webmail.ui.html.HTMLImage =====> [ void HTMLImage(Storage store, String name, Locale locale, String theme), byte[] toBinary(), String getContentEncoding(), void HTMLImage(ByteStore content), String getContentType(), int size() ]
net.wastl.webmail.ui.html.JavaScriptFilter =====> [ String apply(String s), void init(), void JavaScriptFilter() ]
net.wastl.webmail.ui.xml.XHTMLDocument =====> [ int length(), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet) ]
net.wastl.webmail.xml.XMLAdminModel =====> [ void importUserData(Element userdata), void clearUserData(), Element createTextElement(String tag, String value), Element addStateElement(String tag), Element createElement(String tag), void XMLAdminModel(WebMailServer parent, Element rsysdata) ]
net.wastl.webmail.xml.XMLCommon =====> [ void setTagValue(Element e, String tagname, String text), String getElementTextValue(Element e), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg, boolean cdata), void setElementTextValue(Element e, String text, boolean cdata), void setTagValue(Element e, String tagname, String text, boolean cdata), void genericRemoveAll(Element parent, String tagname), void setElementTextValue(Element e, String text), void writeXMLwalkTree(Node node, int indent, PrintWriter out), Node importNode(Document d, Node n, boolean deep), String getTagValue(Element e, String tagname), void writeXML(Document d, OutputStream os, String sysID), Element getElementByAttribute(Element root, String tagname, String attribute, String att_value), void debugXML(Document d), Node cloneNode(Document d, Node n), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg) ]
net.wastl.webmail.xml.XMLGenericModel =====> [ void clearUserData(), Element createStateVar(String name, String value), void removeAllStateVars(String name), Element createTextElement(String tag, String value), Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), void clearWork(), Element getCurrentFolder(String id), Element createElement(String tag), void addStateVar(String name, String value), String getStateVar(String name), XMLMessage getMessage(Element folder, String msgnr, String msgid), String getNextID(), void update(), XMLMessage setWorkMessage(XMLMessage message), Element getCurrentMessage(String id), void addMailhost(Element mh), Element getCurrent(String type, String id), void setException(Exception ex), Element getFolder(String id), Element setCurrentMessage(String id), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), Element createMessageList(), void removeMessageList(Element folder), void XMLAdminModel(WebMailServer parent, Element rsysdata), void importUserData(Element userdata), Element getStateData(), void setStateVar(String name, String value), boolean messageCached(Element folder, String msgid), void init(), XMLMessage getWorkMessage(), Element addStateElement(String tag), Element createMailhost(String name, String id, String url), void initRoot(), Document getRoot(), Element getMessageList(Element folder), Element setCurrentFolder(String id), void XMLGenericModel(WebMailServer parent, Element rsysdata), Element setCurrent(String type, String id) ]
net.wastl.webmail.xml.XMLMessage =====> [ void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), boolean isReply(String subject), void setHeader(String header, String value), Element getFirstMessageTextPart(Element parent), boolean messageCompletelyCached(), XMLMessagePart getFirstMessageTextPart(), Element getMessageElement(), String getHeader(String header), XMLMessagePart getFirstMessageMultiPart(), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void XMLMessage(Element message), Element getHeader() ]
net.wastl.webmail.xml.XMLMessagePart =====> [ void setHeader(String header, String value), void XMLMessagePart(Document root), void removePart(XMLMessagePart childpart), void removeAllParts(), Element getHeader(), boolean isReply(String subject), Element getFirstMessageTextPart(Element parent), Enumeration getParts(), void removeAllContent(), XMLMessagePart getFirstMessageMultiPart(), String getAttribute(String key), void addContent(String content, int quotelevel), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), Element getPartElement(), XMLMessagePart getFirstMessageTextPart(), void quoteContent(), void XMLMessage(Element message), void addContent(Document content), void addJavaScript(String content), void appendPart(XMLMessagePart childpart), boolean messageCompletelyCached(), Element getMessageElement(), void XMLMessagePart(Element part), void setAttribute(String key, String value), XMLMessagePart createPart(String type), void insertPart(XMLMessagePart childpart), String getHeader(String header), void insertContent(String content, int quotelevel), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message) ]
net.wastl.webmail.xml.XMLResourceBundle =====> [ void getKeys(Element element, Hashtable hash), String getResult(Element element, String key), void XMLResourceBundle(String resourcefile, String lang) ]
net.wastl.webmail.xml.XMLSystemData =====> [ Element createConfigElement(String key, String value, String type), void setVirtualDomain(String name, WebMailVirtualDomain domain), void initChoices(), void deleteVirtualDomain(String name), Element getSysData(), void setConfigRaw(String groupname, String key, String value, String type), long getLoadTime(), void deleteConfigGroup(String groupname), DocumentFragment getDocumentFragment(), Element getConfigElementByKey(String key), Document getRoot(), WebMailVirtualDomain getVirtualDomain(String domname), void createVirtualDomain(String name), Element createConfigGroup(String groupname), void initChoices(String key), void XMLSystemData(Document d, ConfigScheme cs), Enumeration getVirtualDomains(), void setLoadTime(long time), String getConfigRaw(String key) ]
net.wastl.webmail.xml.XMLUserData =====> [ Locale getPreferredLocale(), void setMaxLineLength(int i), void setBreakLines(boolean b), void setSignature(String s), String getDomain(), boolean checkPassword(String s), void addMailHost(String name, String host, String login, String password), MailHostData getMailHost(String id), Enumeration mailHosts(), void setPassword(String newpasswd, String verify), String getLastLogin(), void setSaveSent(boolean b), String formatDate(long date), void setBoolVar(String var, boolean value), void resetBoolVars(), long getIntVar(String var), void setPasswordData(String data), boolean wantsBreakLines(), void setBoolVarWrapper(String var, boolean value), void setEmail(String s), int getMaxShowMessages(), String getTheme(), void setShowFancy(boolean b), void setSetFlags(boolean b), boolean wantsShowImages(), void XMLUserData(Document d), String getFirstLogin(), void login(), void setFullName(String s), long getIntVarWrapper(String var), void setIntVar(String var, long value), void removeMailHost(String id), void setPreferredLocale(String newloc), boolean getBoolVar(String var), void ensureElement(String tag, String attribute, String att_value), String getLoginCount(), String getUserName(), boolean wantsShowFancy(), String getLogin(), String getEmail(), void setDomain(String s), void setSentFolder(String s), void setTheme(String theme), void init(String user, String domain, String password), boolean wantsSetFlags(), Element getUserData(), String getSentFolder(), void setUserName(String s), boolean getBoolVarWrapper(String var), boolean wantsSaveSent(), DocumentFragment getDocumentFragment(), Document getRoot(), void setMaxShowMessages(int i), void setShowImages(boolean b), String getPasswordData(), String getFullName(), void logout(), String getSignature(), int getMaxLineLength(), void setIntVarWrapper(String var, long value) ]
net.wastl.webmail.xml.XMLUserModel =====> [ boolean messageCached(Element folder, String msgid), Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), XMLMessage getWorkMessage(), void clearWork(), Element createMailhost(String name, String id, String url), Element getCurrentFolder(String id), void initRoot(), XMLMessage getMessage(Element folder, String msgnr, String msgid), void update(), XMLMessage setWorkMessage(XMLMessage message), Element getMessageList(Element folder), Element setCurrentFolder(String id), Element getCurrentMessage(String id), void addMailhost(Element mh), Element getCurrent(String type, String id), Element setCurrent(String type, String id), Element getFolder(String id), Element setCurrentMessage(String id), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), Element createMessageList(), void removeMessageList(Element folder) ]
org.bulbul.webmail.util.TranscodeUtil =====> [ String transcodeThenEncodeByLocale(String sourceString, String sourceStringEncoding, Locale locale) ]
org.bulbul.webmail.xmlresource.ResourceBase =====> [ void getKeys(Element element, Hashtable hash), void ResourceBase(), void loadXmlResourceFile(), String getXmlResourceFilename(), String getResult(Element element, String key) ]
org.bulbul.webmail.xmlresource.Resources =====> [ String getXmlResourceFilename() ]
org.bulbul.webmail.xmlresource.Resources_en =====> [ String getXmlResourceFilename() ]
org.bulbul.webmail.xmlresource.Resources_en_US =====> [ String getXmlResourceFilename() ]
org.bulbul.webmail.xmlresource.Resources_zh_TW =====> [ String getXmlResourceFilename() ]
org.webengruven.webmail.auth.AuthDisplayMngr =====> [ String getPassChangeTmpl(), void AuthDisplayMngr(), void setLoginScreenVars(XMLGenericModel model), void OTPAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), String getLoginScreenFile(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setPassChangeVars(UserData ud, XMLGenericModel model), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void CRAuthDisplayMngr(), String getChallengeScreenFile() ]
org.webengruven.webmail.auth.CRAuthDisplayMngr =====> [ String getPassChangeTmpl(), void setLoginScreenVars(XMLGenericModel model), void OTPAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setPassChangeVars(UserData ud, XMLGenericModel model), void CRAuthDisplayMngr(), String getChallengeScreenFile() ]
org.webengruven.webmail.auth.CRAuthenticator =====> [ void OTPAuthenticator(), void putIntoCache(String key, OTPState ast, OTPState nst), OTPState getFromCache(String key, int type), void register(ConfigScheme store), void changePassword(UserData ud, String newpass, String vrfy), void OTPAuthenticatorIface(), String getNewChallenge(UserData ud), void removeFromCache(String key, int type), String getNewChallenge(UserData udata), void CRAuthenticator(), String getChallenge(UserData ud), void init(Storage store), void authenticatePostUserData(UserData ud, String dom, String pass), AuthDisplayMngr getAuthDisplayMngr(), void getFromCache(String key, int type, OTPState[] sts), String getVersion() ]
org.webengruven.webmail.auth.OTPAuthDisplayMngr =====> [ String getPassChangeTmpl(), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setPassChangeVars(UserData ud, XMLGenericModel model) ]
org.webengruven.webmail.auth.OTPAuthenticatorIface =====> [ void OTPAuthenticator(), void putIntoCache(String key, OTPState ast, OTPState nst), OTPState getFromCache(String key, int type), void register(ConfigScheme store), void changePassword(UserData ud, String newpass, String vrfy), void OTPAuthenticatorIface(), String getNewChallenge(UserData ud), void removeFromCache(String key, int type), String getNewChallenge(UserData udata), void init(Storage store), void authenticatePostUserData(UserData ud, String dom, String pass), String getChallenge(UserData ud), AuthDisplayMngr getAuthDisplayMngr(), void getFromCache(String key, int type, OTPState[] sts), String getVersion() ]
org.webengruven.webmail.auth.OTPCacheNode =====> [ void OTPCacheNode(), void OTPCacheNode(OTPState act, OTPState nw), void OTPCacheNode(OTPState act) ]
org.webengruven.webmail.authenticators.OTPAuthenticator =====> [ void OTPAuthenticator(), void putIntoCache(String key, OTPState ast, OTPState nst), OTPState getFromCache(String key, int type), void register(ConfigScheme store), void changePassword(UserData ud, String newpass, String vrfy), void removeFromCache(String key, int type), String getNewChallenge(UserData udata), void init(Storage store), void authenticatePostUserData(UserData ud, String dom, String pass), String getChallenge(UserData ud), AuthDisplayMngr getAuthDisplayMngr(), void getFromCache(String key, int type, OTPState[] sts), String getVersion() ]
org.webengruven.webmail.plugins.ChallengeHandler =====> [ String getDescription(), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), String requires(), String getName(), String getURL(), String provides(), void register(WebMailServer parent), String getVersion() ]

Done building lattice!
NODE_0[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigStore, net.wastl.webmail.config.ConfigYesNoParameter, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter, net.wastl.webmail.debug.ErrorHandler, net.wastl.webmail.exceptions.BinaryNotFoundException, net.wastl.webmail.exceptions.CreateUserDataException, net.wastl.webmail.exceptions.DocumentNotFoundException, net.wastl.webmail.exceptions.InvalidDataException, net.wastl.webmail.exceptions.InvalidPasswordException, net.wastl.webmail.exceptions.NoSuchFolderException, net.wastl.webmail.exceptions.StylesheetNotFoundException, net.wastl.webmail.exceptions.TimeoutException, net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.exceptions.WebMailException, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.misc.AttributedExpireableCache, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.Helper, net.wastl.webmail.misc.JavaScriptCleaner, net.wastl.webmail.misc.MD5, net.wastl.webmail.misc.MD5State, net.wastl.webmail.misc.Queue, net.wastl.webmail.misc.StreamConnector, net.wastl.webmail.misc.StringHeap, net.wastl.webmail.misc.TEA, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.AdminPlugin.ShutdownThread, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.Authenticator, net.wastl.webmail.server.AuthenticatorHandler, net.wastl.webmail.server.ConnectionTimer, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.Logger, net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.PluginDependencyTree, net.wastl.webmail.server.PluginHandler, net.wastl.webmail.server.PluginHandler.FFilter, net.wastl.webmail.server.StatusServer, net.wastl.webmail.server.Storage, net.wastl.webmail.server.SystemCheck, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTree, net.wastl.webmail.server.URLHandlerTreeNode, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.server.WebMailServlet, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.server.WebMailVirtualDomain, net.wastl.webmail.server.http.HTTPRequestHeader, net.wastl.webmail.server.http.HTTPResponseHeader, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.storage.simple.SimpleStorage, net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.HTMLDocument, net.wastl.webmail.ui.html.HTMLHeader, net.wastl.webmail.ui.html.HTMLImage, net.wastl.webmail.ui.html.JavaScriptFilter, net.wastl.webmail.ui.xml.XHTMLDocument, net.wastl.webmail.xml.XMLAdminModel, net.wastl.webmail.xml.XMLCommon, net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLMessage, net.wastl.webmail.xml.XMLMessagePart, net.wastl.webmail.xml.XMLResourceBundle, net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData, net.wastl.webmail.xml.XMLUserModel, org.bulbul.webmail.util.TranscodeUtil, org.bulbul.webmail.xmlresource.ResourceBase, org.bulbul.webmail.xmlresource.Resources, org.bulbul.webmail.xmlresource.Resources_en, org.bulbul.webmail.xmlresource.Resources_en_US, org.bulbul.webmail.xmlresource.Resources_zh_TW, org.webengruven.webmail.auth.AuthDisplayMngr, org.webengruven.webmail.auth.CRAuthDisplayMngr, org.webengruven.webmail.auth.CRAuthenticator, org.webengruven.webmail.auth.OTPAuthDisplayMngr, org.webengruven.webmail.auth.OTPAuthenticatorIface, org.webengruven.webmail.auth.OTPCacheNode, org.webengruven.webmail.authenticators.OTPAuthenticator, org.webengruven.webmail.plugins.ChallengeHandler],[]]
ITS CHILDREN:=================
	->NODE_1[[net.wastl.webmail.misc.Helper, net.wastl.webmail.misc.TEA],[void main(String[] args)]]
	->ITS CHILDREN:=================
	->	->NODE_2[[net.wastl.webmail.misc.TEA],[String dumpBytes(byte[] b), byte[] decipher(byte[] v), byte[] decode(byte[] b, int count), byte[] decode(int[] b), byte[] encipher(byte[] v), int padding(), int[] decipher(int[] v), int[] encipher(int[] v), int[] encode(byte[] b, int count), void TEA(byte[] key), void main(String[] args)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[[],[AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), AuthDisplayMngr getAuthDisplayMngr(), Authenticator getAuthenticator(), Authenticator getAuthenticator(String key), AuthenticatorHandler getAuthenticatorHandler(), ByteStore getAttachment(String key), ByteStore getBinaryFromIS(InputStream in, int nr_bytes_to_read), ByteStore getMIMEPart(String msgid, String name), ByteStore getResult(), ConfigParameter getConfigParameter(String key), ConfigScheme getConfigScheme(), ConnectionTimer getConnectionTimer(), Document getModel(), Document getRoot(), DocumentFragment getDocumentFragment(), Element addStateElement(String tag), Element createConfigElement(String key, String value, String type), Element createConfigGroup(String groupname), Element createElement(String tag), Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), Element createMailhost(String name, String id, String url), Element createMessageList(), Element createStateVar(String name, String value), Element createTextElement(String tag, String value), Element getConfigElementByKey(String key), Element getCurrent(String type, String id), Element getCurrentFolder(String id), Element getCurrentMessage(String id), Element getElementByAttribute(Element root, String tagname, String attribute, String att_value), Element getFirstMessageTextPart(Element parent), Element getFolder(String id), Element getHeader(), Element getMessageElement(), Element getMessageList(Element folder), Element getPartElement(), Element getStateData(), Element getSysData(), Element getUserData(), Element setCurrent(String type, String id), Element setCurrentFolder(String id), Element setCurrentMessage(String id), Enumeration breakLine(String line, int linesize, int quotelevel), Enumeration choices(), Enumeration getAllowedHosts(), Enumeration getConfigKeys(), Enumeration getConfigurationListeners(), Enumeration getContentKeys(), Enumeration getHTTPHeaderKeys(), Enumeration getHeaderKeys(), Enumeration getMimeParts(String msgid), Enumeration getParts(), Enumeration getPlugins(), Enumeration getPossibleKeys(), Enumeration getServers(), Enumeration getSessions(), Enumeration getUsers(), Enumeration getUsers(String domain), Enumeration getVirtualDomains(), Enumeration mailHosts(), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), Folder getFolder(String folderhash), Folder getRootFolder(String name), HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), HTTPSession getSession(String key), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), Hashtable getActiveConnections(), Hashtable getAttachments(), Hashtable getContent(), InetAddress getRemoteAddress(), Locale getDefaultLocale(), Locale getLocale(), Locale getPreferredLocale(), MailHostData getMailHost(String id), MailHostData getMailHost(String name), Node cloneNode(Document d, Node n), Node importNode(Document d, Node n, boolean deep), OTPState getFromCache(String key, int type), Object get(Object key), Object getAttributes(Object key), Object getDefault(), Object getDefaultValue(String key), Object getObjContent(String key), Object getServer(String ID), Object next(), PluginHandler getPluginHandler(), Provider[] getStoreProviders(), Provider[] getTransportProviders(), ServletContext getServletContext(), Storage getStorage(), Store connectStore(String host, String protocol, String login, String password), String apply(String s), String asHex(), String asHex(byte[] hash), String calcCode(InetAddress a, HTTPRequestHeader h), String calcSessionCode(InetAddress a, HTTPRequestHeader h), String crypt(String salt, String original), String decryptTEA(String src), String dumpBytes(byte[] b), String encryptTEA(String src), String filter(String key, String value), String filter(String s), String formatDate(long date), String generateFolderHash(Folder folder), String generateMessageID(String user), String getAttribute(String key), String getAuthenticationHost(), String getBasePath(), String getBasePath(Locale locale, String theme), String getBaseURI(HTTPRequestHeader header), String getChallenge(UserData ud), String getChallengeScreenFile(), String getConfig(String key), String getConfigParameterGroup(String key), String getConfigParameterType(String key), String getConfigRaw(String key), String getContent(String key), String getContentEncoding(), String getContentType(), String getCopyright(), String getDefaultServer(), String getDefaultTheme(), String getDescription(), String getDescription(String choice), String getDescription(String key), String getDomain(), String getDomainName(), String getElementTextValue(Element e), String getEmail(), String getEnv(String key), String getFirstLogin(), String getFullName(), String getGroup(), String getHTTPHeader(String key), String getHeader(String header), String getHeader(String t), String getHostURL(), String getID(), String getImageBasePath(), String getKey(), String getLastLogin(), String getLogin(), String getLoginCount(), String getLoginScreenFile(), String getMethod(), String getMimeType(String name), String getName(), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getNextID(), String getPassChangeTmpl(), String getPassword(), String getPasswordData(), String getPath(), String getProperty(String name), String getResponseLine(), String getResult(Element element, String key), String getReturnStatus(), String getSentFolder(), String getSessionCode(), String getSignature(), String getStateVar(String name), String getStatus(), String getStringResource(String key), String getStringResource(String key, Locale locale), String getTagValue(Element e, String tagname), String getTheme(), String getType(), String getURL(), String getUser(), String getUserName(), String getVersion(), String getXmlResourceFilename(), String joinAddress(Address[] a), String next(), String provides(), String requires(), String transcodeThenEncodeByLocale(String sourceString, String sourceStringEncoding, Locale locale), Templates getStylesheet(String name, Locale locale, String theme), ToplevelURLHandler getURLHandler(), URLHandler getHandler(String url), UserData getUser(), WebMailServer getServer(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), WebMailVirtualDomain createVirtualDomain(String name), WebMailVirtualDomain getVirtualDomain(String domname), WebMailVirtualDomain getVirtualDomain(String name), XMLAdminModel createXMLAdminModel(), XMLGenericModel createXMLGenericModel(), XMLMessage getMessage(Element folder, String msgnr, String msgid), XMLMessage getWorkMessage(), XMLMessage setWorkMessage(XMLMessage message), XMLMessagePart createPart(String type), XMLMessagePart getFirstMessageMultiPart(), XMLMessagePart getFirstMessageTextPart(), XMLSystemData getSystemData(), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String passwd), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), XMLUserModel createXMLUserModel(XMLUserData data), XMLUserModel getUserModel(), boolean addPlugin(Plugin p), boolean canChangePassword(), boolean checkPassword(String s), boolean getBoolVar(String var), boolean getBoolVarWrapper(String var), boolean getDebug(), boolean getHostsRestricted(), boolean hasHTTPHeader(), boolean isAllowedHost(String host), boolean isConfigSet(String key), boolean isContentSet(String key), boolean isEmpty(), boolean isLoggedOut(), boolean isPossibleValue(Object value), boolean isReply(String subject), boolean isSent(), boolean isValid(String key, Object value), boolean messageCached(Element folder, String msgid), boolean messageCompletelyCached(), boolean provides(String s), boolean wantsBreakLines(), boolean wantsSaveSent(), boolean wantsSetFlags(), boolean wantsShowFancy(), boolean wantsShowImages(), byte[] Encode(int[] input, int len), byte[] Final(), byte[] decipher(byte[] v), byte[] decode(byte[] b, int count), byte[] decode(int[] b), byte[] encipher(byte[] v), byte[] getBinaryFile(String name, Locale locale, String theme), byte[] getBytes(), byte[] toBinary(), int D_ENCRYPT(int L, int R, int S, int E0, int E1, int[] s), int FF(int a, int b, int c, int d, int x, int s, int ac), int GG(int a, int b, int c, int d, int x, int s, int ac), int HH(int a, int b, int c, int d, int x, int s, int ac), int HPERM_OP(int a, int n, int m), int II(int a, int b, int c, int d, int x, int s, int ac), int byteToUnsigned(byte b), int findFittingBreakPos(String line, int linesize), int fourBytesToInt(byte[] b, int offset), int getCapacity(), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), int getHits(), int getMaxLineLength(), int getMaxShowMessages(), int getMisses(), int getQuoteLevel(String token), int getReturnCode(), int getSize(), int getUsage(), int length(), int padding(), int rotate_left(int x, int n), int size(), int uadd(int a, int b), int uadd(int a, int b, int c), int uadd(int a, int b, int c, int d), int[] Decode(byte[] buffer, int len, int shift), int[] body(int[] schedule, int Eswap0, int Eswap1), int[] decipher(int[] v), int[] des_set_key(byte[] key), int[] encipher(int[] v), int[] encode(byte[] b, int count), int[] getSelectedMessages(HTTPRequestHeader head, int max), long getIntVar(String var), long getIntVarWrapper(String var), long getLastAccess(), long getLoadTime(), long getTimeout(), long getUptime(), void About(), void AdminPlugin(), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void AttributedExpireableCache(int capacity), void AttributedExpireableCache(int capacity, float expire_factor), void AuthDisplayMngr(), void Authenticator(), void AuthenticatorHandler(WebMailServer parent), void BinaryNotFoundException(), void BinaryNotFoundException(String s), void ByteStore(byte[] b), void CRAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void CRAuthenticator(), void ChoiceConfigParameter(String name, String desc), void Composer(), void ConfigParameter(String name, Object def, String desc), void ConfigScheme(), void ConfigStore(), void ConfigStore(ConfigScheme cs), void ConfigYesNoParameter(String name, String desc), void ConnectionTimer(), void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain), void CryptedStringConfigParameter(String name, String def, String desc), void DocumentNotFoundException(), void DocumentNotFoundException(String s), void ErrorHandler(), void ErrorHandler(Exception ex), void ExpireableCache(int capacity), void ExpireableCache(int capacity, float expire_factor), void FFilter(), void Fancyfier(), void FileAttacher(), void FileLogger(WebMailServer parent, Storage st), void FileStorage(WebMailServer parent), void FolderList(), void FolderSetup(), void HTMLDocument(), void HTMLDocument(String title, String cont, String basepath), void HTMLDocument(String title, String content), void HTMLHeader(String title), void HTMLImage(ByteStore content), void HTMLImage(Storage store, String name, Locale locale, String theme), void HTTPRequestHeader(), void HTTPResponseHeader(int response_code, String status), void Helper(), void IMAPAuthenticator(), void ImageHandler(), void Init(), void IntegerConfigParameter(String name, String def, String desc), void InvalidDataException(), void InvalidDataException(String s), void InvalidPasswordException(), void InvalidPasswordException(String s), void JavaScriptCleaner(Document d), void JavaScriptFilter(), void LogoutSession(), void MD5(), void MD5(Object ob), void MD5State(), void MD5State(MD5State from), void MailboxList(), void MyHeap(int capacity), void NavBar(), void NoSuchFolderException(), void NoSuchFolderException(String msg), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void OTPAuthenticator(), void OTPAuthenticatorIface(), void OTPCacheNode(), void OTPCacheNode(OTPState act), void OTPCacheNode(OTPState act, OTPState nw), void PERM_OP(int a, int b, int n, int m, int[] results), void POPAuthenticator(), void PassThroughPlugin(), void PluginDependencyTree(Plugin p), void PluginDependencyTree(String s), void PluginHandler(WebMailServer parent), void Queue(), void ResourceBase(), void SendMessage(), void ServletLogger(WebMailServer parent, Storage st), void ShowMIME(), void ShowMessage(), void ShutdownThread(int time, boolean restart, WebMailServer parent), void SimpleAuthenticator(), void SimpleStorage(WebMailServer parent), void Storage(WebMailServer parent), void StreamConnector(InputStream sin, int size), void StringConfigParameter(String name, String def, String desc), void StringHeap(int capacity), void StylesheetNotFoundException(), void StylesheetNotFoundException(String s), void SystemCheck(WebMailServer parent), void TEA(byte[] key), void TimeoutException(), void ToplevelURLHandler(WebMailServer parent), void Transform(MD5State state, byte[] buffer, int shift), void URLHandlerTree(String url), void UnchangeableStringConfigParameter(String name, String def, String desc), void UnixAuthenticator(), void Update(MD5State stat, byte[] buffer, int offset, int length), void Update(String s), void Update(byte b), void Update(byte[] buffer), void Update(byte[] buffer, int length), void Update(byte[] buffer, int offset, int length), void Update(int i), void UserDataException(), void UserDataException(String s, String user, String domain), void UserSetup(), void WebMailException(), void WebMailException(Exception ex), void WebMailException(String s), void WebMailHelp(), void WebMailServer(), void WebMailServlet(), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void WebMailTitle(), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet), void XMLAdminModel(WebMailServer parent, Element rsysdata), void XMLGenericModel(WebMailServer parent, Element rsysdata), void XMLMessage(Element message), void XMLMessagePart(Document root), void XMLMessagePart(Element part), void XMLResourceBundle(String resourcefile, String lang), void XMLSystemData(Document d, ConfigScheme cs), void XMLUserData(Document d), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), void addChoice(Object choice, String desc), void addConfigurationListener(ConfigurationListener l), void addConfigurationListener(String key, ConfigurationListener l), void addContent(Document content), void addContent(String content, int quotelevel), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void addHTTPHeader(String key, String value), void addHandler(String url, URLHandler h), void addJavaScript(String content), void addMailHost(String name, String host, String login, String password), void addMailbox(String name, String protocol, String host, String login, String password), void addMailhost(Element mh), void addStateVar(String name, String value), void addTimeableConnection(TimeableConnection c), void addWorkAttachment(String name, ByteStore bs, String description), void appendPart(XMLMessagePart childpart), void authenticatePostUserData(UserData ud, String dom, String pass), void authenticatePostUserData(UserData udata, String domain, String password), void authenticatePreUserData(String login, String domain, String passwd), void authenticatePreUserData(String user, String domain, String given_passwd), void authenticatePreUserData(String user, String domain, String passwd), void changePassword(UserData ud, String newpass, String vrfy), void changePassword(UserData udata, String newpassword, String verify), void changePassword(UserData udata, String passwd, String verify), void changeSetup(HTTPRequestHeader head), void changeUser(HTTPRequestHeader head), void checkPathProperty(WebMailServer parent, String property), void clearAttachments(), void clearUser(), void clearUserData(), void clearWork(), void configAddChoice(String key, String choice, String desc), void configRegisterChoiceKey(ConfigurationListener l, String key, String desc), void configRegisterChoiceKey(String key, String desc), void configRegisterCryptedStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterCryptedStringKey(String key, String def, String desc), void configRegisterIntegerKey(ConfigurationListener l, String key, String def, String desc), void configRegisterIntegerKey(String key, String def, String desc), void configRegisterStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterStringKey(String key, String def, String desc), void configRegisterYesNoKey(ConfigurationListener l, String key, String desc), void configRegisterYesNoKey(String key, String desc), void connectAll(), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void createMessageList(String folderhash, int list_part), void createVirtualDomain(String name), void debugOut(String msg), void debugOut(String msg, Exception ex), void debugXML(Document d), void decrease(int cur_pos), void deleteConfigGroup(String groupname), void deleteUser(String user), void deleteUserData(String user), void deleteUserData(String user, String domain), void deleteVirtualDomain(String name), void disconnect(String name), void disconnectAll(), void doInit(), void doInit(WebMailServer parent, HTTPRequestHeader h), void ensureElement(String tag, String attribute, String att_value), void expireOver(), void expungeFolders(), void flush(), void genericRemoveAll(Element parent, String tagname), void getFromCache(String key, int type, OTPState[] sts), void getKeys(Element element, Hashtable hash), void getMessage(String folderhash, int msgnum), void getMessage(String folderhash, int msgnum, int mode), void handleTransportException(SendFailedException e), void hit(), void importUserData(Element userdata), void increase(int cur_pos), void init(), void init(Storage store), void init(String user, String domain, String password), void initAuth(), void initCache(), void initChoices(), void initChoices(String key), void initConfig(), void initConfigKeys(), void initLanguages(), void initLog(), void initMIME(), void initProviders(), void initRoot(), void initServers(), void initStorage(), void insert(Object key, long value), void insert(String key), void insertContent(String content, int quotelevel), void insertPart(XMLMessagePart childpart), void intToFourBytes(int iValue, byte[] b, int offset), void loadXMLSysData(), void loadXmlResourceFile(), void log(int level, Exception ex), void log(int level, String message), void login(), void login(HTTPRequestHeader h), void logout(), void main(String[] args), void miss(), void notifyConfigurationChange(String key), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void prepareCompose(), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void printStatus(), void put(Object id, Object object, Object attribs), void put(Object key, Object value), void putHeader(String key, String value), void putIntoCache(String key, OTPState ast, OTPState nst), void queue(Object o), void queue(long time, String message), void quoteContent(), void refreshFolderInformation(), void refreshFolderInformation(String folderhash), void refreshFolderInformation(boolean subscribed_only), void register(ConfigScheme store), void register(WebMailServer parent), void registerAuthenticators(), void registerConfig(ConfigParameter parm), void registerHandler(String url, URLHandler handler), void registerPlugins(), void reinitServer(String ID), void remove(Object key), void remove(String key), void removeAll(), void removeAllContent(), void removeAllParts(), void removeAllStateVars(String name), void removeChoice(Object choice), void removeFolder(String id, boolean recurse), void removeFromCache(String key, int type), void removeHeader(String key), void removeMailHost(String id), void removeMailHost(String name), void removeMailbox(String name), void removeMessageList(Element folder), void removePart(XMLMessagePart childpart), void removeSession(HTTPSession w), void removeTimeableConnection(TimeableConnection c), void removeWorkAttachment(String name), void reqShutdown(int time, boolean reboot), void resetBoolVars(), void restart(), void save(), void saveData(), void saveUserData(String user, String domain), void saveXMLSysData(), void selectDomain(String domain), void selectUser(String user), void setAddToFolder(String id), void setAllowedHosts(String hosts), void setAttribute(String key, String value), void setAuthenticationHost(String name), void setBoolVar(String var, boolean value), void setBoolVarWrapper(String var, boolean value), void setBreakLines(boolean b), void setCapacity(int size), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setConfig(String key, String value), void setConfig(String key, String value, boolean filter, boolean notify), void setConfigRaw(String group, String key, String value, String type), void setConfigRaw(String groupname, String key, String value, String type), void setContent(String key, Object value), void setContentEncoding(String s), void setContentType(String s), void setDebug(boolean b), void setDefault(Object value), void setDefaultServer(String name), void setDefaultValue(String key, Object default_value), void setDescription(String s), void setDomain(String s), void setDomainName(String name), void setElementTextValue(Element e, String text), void setElementTextValue(Element e, String text, boolean cdata), void setEmail(String s), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void setFullName(String s), void setGroup(String g), void setHeader(String header, String value), void setHeader(String key, String value), void setHostURL(String v), void setHostsRestricted(boolean b), void setIntVar(String var, long value), void setIntVarWrapper(String var, long value), void setLastAccess(), void setLoadTime(long time), void setLogin(String s), void setLoginScreenVars(XMLGenericModel model), void setMaxLineLength(int i), void setMaxShowMessages(int i), void setMethod(String s), void setName(String s), void setName(String v), void setPassChangeVars(UserData ud, XMLGenericModel model), void setPassword(String newpasswd, String verify), void setPassword(String v), void setPasswordData(String data), void setPath(String s), void setPreferredLocale(String newloc), void setProperty(String name, String value), void setSaveSent(boolean b), void setSent(boolean b), void setSentFolder(String s), void setSetFlags(boolean b), void setShowFancy(boolean b), void setShowImages(boolean b), void setSignature(String s), void setStateVar(String name, String value), void setStatus(int code, String status), void setSubscribedAll(String id, boolean subscribed), void setTagValue(Element e, String tagname, String text), void setTagValue(Element e, String tagname, String text, boolean cdata), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg, boolean cdata), void setTheme(String theme), void setUserData(String user, UserData userdata), void setUserName(String s), void setVersion(String s), void setVirtualDomain(String name, WebMailVirtualDomain domain), void setVirtualDomain(String name, WebMailVirtualDomain v), void setupUserEdit(), void shutdown(), void shutdownServers(), void storeMessage(HTTPRequestHeader head), void subscribeFolder(String folderhash), void timeoutOccured(), void unsubscribeFolder(String folderhash), void update(), void walkTree(Node node), void writeMessage(long time, String message), void writeXML(Document d, OutputStream os, String sysID), void writeXMLwalkTree(Node node, int indent, PrintWriter out)]]
	->	->NODE_4[[net.wastl.webmail.misc.Helper],[Enumeration breakLine(String line, int linesize, int quotelevel), String calcSessionCode(InetAddress a, HTTPRequestHeader h), String crypt(String salt, String original), String decryptTEA(String src), String encryptTEA(String src), String joinAddress(Address[] a), int D_ENCRYPT(int L, int R, int S, int E0, int E1, int[] s), int HPERM_OP(int a, int n, int m), int byteToUnsigned(byte b), int findFittingBreakPos(String line, int linesize), int fourBytesToInt(byte[] b, int offset), int getQuoteLevel(String token), int[] body(int[] schedule, int Eswap0, int Eswap1), int[] des_set_key(byte[] key), void Helper(), void PERM_OP(int a, int b, int n, int m, int[] results), void intToFourBytes(int iValue, byte[] b, int offset), void main(String[] args)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_5[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel],[void setException(Exception ex)]]
	->ITS CHILDREN:=================
	->	->NODE_6[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.WebMailSession],[Document getModel(), InetAddress getRemoteAddress(), Locale getLocale(), String getEnv(String key), String getSessionCode(), boolean isLoggedOut(), long getLastAccess(), long getTimeout(), void doInit(WebMailServer parent, HTTPRequestHeader h), void login(), void login(HTTPRequestHeader h), void logout(), void saveData(), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setLastAccess(), void timeoutOccured()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_7[[net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.WebMailSession],[ByteStore getAttachment(String key), ByteStore getMIMEPart(String msgid, String name), Document getModel(), Enumeration getMimeParts(String msgid), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), Folder getFolder(String folderhash), Folder getRootFolder(String name), Hashtable getActiveConnections(), Hashtable getAttachments(), InetAddress getRemoteAddress(), Locale getLocale(), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), String formatDate(long date), String generateFolderHash(Folder folder), String getEnv(String key), String getSessionCode(), String getStringResource(String key), String getUserName(), UserData getUser(), XMLUserModel getUserModel(), boolean isLoggedOut(), boolean isSent(), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), int[] getSelectedMessages(HTTPRequestHeader head, int max), long getLastAccess(), long getTimeout(), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void addMailbox(String name, String protocol, String host, String login, String password), void addWorkAttachment(String name, ByteStore bs, String description), void changeSetup(HTTPRequestHeader head), void clearAttachments(), void clearWork(), void connectAll(), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void createMessageList(String folderhash, int list_part), void disconnect(String name), void disconnectAll(), void doInit(WebMailServer parent, HTTPRequestHeader h), void expungeFolders(), void getMessage(String folderhash, int msgnum), void getMessage(String folderhash, int msgnum, int mode), void handleTransportException(SendFailedException e), void login(), void login(HTTPRequestHeader h), void logout(), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void prepareCompose(), void refreshFolderInformation(), void refreshFolderInformation(String folderhash), void refreshFolderInformation(boolean subscribed_only), void removeFolder(String id, boolean recurse), void removeMailbox(String name), void removeWorkAttachment(String name), void saveData(), void setAddToFolder(String id), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void setLastAccess(), void setSent(boolean b), void setSubscribedAll(String id, boolean subscribed), void storeMessage(HTTPRequestHeader head), void subscribeFolder(String folderhash), void timeoutOccured(), void unsubscribeFolder(String folderhash)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_8[[net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection],[ByteStore getAttachment(String key), ByteStore getMIMEPart(String msgid, String name), Document getModel(), Enumeration getMimeParts(String msgid), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), Folder getFolder(String folderhash), Folder getRootFolder(String name), Hashtable getActiveConnections(), Hashtable getAttachments(), InetAddress getRemoteAddress(), Locale getLocale(), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), String formatDate(long date), String generateFolderHash(Folder folder), String getEnv(String key), String getSessionCode(), String getStringResource(String key), String getUserName(), UserData getUser(), XMLUserModel getUserModel(), boolean isLoggedOut(), boolean isSent(), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), int[] getSelectedMessages(HTTPRequestHeader head, int max), long getLastAccess(), long getTimeout(), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void addMailbox(String name, String protocol, String host, String login, String password), void addWorkAttachment(String name, ByteStore bs, String description), void changeSetup(HTTPRequestHeader head), void changeUser(HTTPRequestHeader head), void clearAttachments(), void clearUser(), void clearWork(), void connectAll(), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void createMessageList(String folderhash, int list_part), void deleteUser(String user), void disconnect(String name), void disconnectAll(), void doInit(WebMailServer parent, HTTPRequestHeader h), void expungeFolders(), void getMessage(String folderhash, int msgnum), void getMessage(String folderhash, int msgnum, int mode), void handleTransportException(SendFailedException e), void login(), void login(HTTPRequestHeader h), void logout(), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void prepareCompose(), void refreshFolderInformation(), void refreshFolderInformation(String folderhash), void refreshFolderInformation(boolean subscribed_only), void removeFolder(String id, boolean recurse), void removeMailbox(String name), void removeWorkAttachment(String name), void saveData(), void selectDomain(String domain), void selectUser(String user), void setAddToFolder(String id), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void setLastAccess(), void setSent(boolean b), void setSubscribedAll(String id, boolean subscribed), void setupUserEdit(), void storeMessage(HTTPRequestHeader head), void subscribeFolder(String folderhash), void timeoutOccured(), void unsubscribeFolder(String folderhash)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->	->NODE_9[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection],[Document getModel(), InetAddress getRemoteAddress(), Locale getLocale(), String getEnv(String key), String getSessionCode(), boolean isLoggedOut(), long getLastAccess(), long getTimeout(), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void changeUser(HTTPRequestHeader head), void clearUser(), void deleteUser(String user), void doInit(WebMailServer parent, HTTPRequestHeader h), void login(), void login(HTTPRequestHeader h), void logout(), void saveData(), void selectDomain(String domain), void selectUser(String user), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setLastAccess(), void setupUserEdit(), void timeoutOccured()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_8[...,...]
	->	->NODE_10[[net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel],[void clearWork(), void setException(Exception ex)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_11[[net.wastl.webmail.xml.XMLGenericModel],[Document getRoot(), Element addStateElement(String tag), Element createElement(String tag), Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), Element createMailhost(String name, String id, String url), Element createMessageList(), Element createStateVar(String name, String value), Element createTextElement(String tag, String value), Element getCurrent(String type, String id), Element getCurrentFolder(String id), Element getCurrentMessage(String id), Element getFolder(String id), Element getMessageList(Element folder), Element getStateData(), Element setCurrent(String type, String id), Element setCurrentFolder(String id), Element setCurrentMessage(String id), String getNextID(), String getStateVar(String name), XMLMessage getMessage(Element folder, String msgnr, String msgid), XMLMessage getWorkMessage(), XMLMessage setWorkMessage(XMLMessage message), boolean messageCached(Element folder, String msgid), void XMLAdminModel(WebMailServer parent, Element rsysdata), void XMLGenericModel(WebMailServer parent, Element rsysdata), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), void addMailhost(Element mh), void addStateVar(String name, String value), void clearUserData(), void clearWork(), void importUserData(Element userdata), void init(), void initRoot(), void removeAllStateVars(String name), void removeMessageList(Element folder), void setException(Exception ex), void setStateVar(String name, String value), void update()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->	->NODE_7[...,...]
	->NODE_12[[net.wastl.webmail.misc.Queue, net.wastl.webmail.misc.StringHeap],[boolean isEmpty()]]
	->ITS CHILDREN:=================
	->	->NODE_13[[net.wastl.webmail.misc.Queue],[Object next(), boolean isEmpty(), void Queue(), void queue(Object o)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_14[[net.wastl.webmail.misc.StringHeap],[String next(), boolean isEmpty(), void StringHeap(int capacity), void decrease(int cur_pos), void increase(int cur_pos), void insert(String key), void remove(String key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_15[[net.wastl.webmail.plugins.AdminPlugin.ShutdownThread],[void ShutdownThread(int time, boolean restart, WebMailServer parent)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_16[[net.wastl.webmail.server.PluginHandler],[Enumeration getPlugins(), void PluginHandler(WebMailServer parent), void registerPlugins()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_17[[net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[String getLogin()]]
	->ITS CHILDREN:=================
	->	->NODE_18[[net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[Document getRoot(), DocumentFragment getDocumentFragment(), Element getUserData(), Enumeration mailHosts(), Locale getPreferredLocale(), MailHostData getMailHost(String id), String formatDate(long date), String getDomain(), String getEmail(), String getFirstLogin(), String getFullName(), String getLastLogin(), String getLogin(), String getLoginCount(), String getPasswordData(), String getSentFolder(), String getSignature(), String getTheme(), String getUserName(), boolean checkPassword(String s), boolean getBoolVar(String var), boolean getBoolVarWrapper(String var), boolean wantsBreakLines(), boolean wantsSaveSent(), boolean wantsSetFlags(), boolean wantsShowFancy(), boolean wantsShowImages(), int getMaxLineLength(), int getMaxShowMessages(), long getIntVar(String var), long getIntVarWrapper(String var), void XMLUserData(Document d), void addMailHost(String name, String host, String login, String password), void ensureElement(String tag, String attribute, String att_value), void init(String user, String domain, String password), void login(), void logout(), void removeMailHost(String id), void resetBoolVars(), void setBoolVar(String var, boolean value), void setBoolVarWrapper(String var, boolean value), void setBreakLines(boolean b), void setDomain(String s), void setEmail(String s), void setFullName(String s), void setIntVar(String var, long value), void setIntVarWrapper(String var, long value), void setMaxLineLength(int i), void setMaxShowMessages(int i), void setPassword(String newpasswd, String verify), void setPasswordData(String data), void setPreferredLocale(String newloc), void setSaveSent(boolean b), void setSentFolder(String s), void setSetFlags(boolean b), void setShowFancy(boolean b), void setShowImages(boolean b), void setSignature(String s), void setTheme(String theme), void setUserName(String s)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_19[[net.wastl.webmail.server.UserData],[Document getRoot(), DocumentFragment getDocumentFragment(), Element getUserData(), Enumeration mailHosts(), Locale getPreferredLocale(), MailHostData getMailHost(String id), MailHostData getMailHost(String name), String formatDate(long date), String getDomain(), String getEmail(), String getFirstLogin(), String getFullName(), String getLastLogin(), String getLogin(), String getLoginCount(), String getPasswordData(), String getSentFolder(), String getSignature(), String getTheme(), String getUserName(), boolean checkPassword(String s), boolean getBoolVar(String var), boolean getBoolVarWrapper(String var), boolean wantsBreakLines(), boolean wantsSaveSent(), boolean wantsSetFlags(), boolean wantsShowFancy(), boolean wantsShowImages(), int getMaxLineLength(), int getMaxShowMessages(), long getIntVar(String var), long getIntVarWrapper(String var), void XMLUserData(Document d), void addMailHost(String name, String host, String login, String password), void ensureElement(String tag, String attribute, String att_value), void init(String user, String domain, String password), void login(), void logout(), void removeMailHost(String id), void removeMailHost(String name), void resetBoolVars(), void setBoolVar(String var, boolean value), void setBoolVarWrapper(String var, boolean value), void setBreakLines(boolean b), void setDomain(String s), void setEmail(String s), void setFullName(String s), void setIntVar(String var, long value), void setIntVarWrapper(String var, long value), void setMaxLineLength(int i), void setMaxShowMessages(int i), void setPassword(String newpasswd, String verify), void setPasswordData(String data), void setPreferredLocale(String newloc), void setSaveSent(boolean b), void setSentFolder(String s), void setSetFlags(boolean b), void setShowFancy(boolean b), void setShowImages(boolean b), void setSignature(String s), void setTheme(String theme), void setUserName(String s)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->NODE_20[[net.wastl.webmail.server.MailHostData],[String getHostURL(), String getID(), String getLogin(), String getName(), String getPassword(), void setHostURL(String v), void setLogin(String s), void setName(String v), void setPassword(String v)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_21[[net.wastl.webmail.exceptions.InvalidPasswordException, net.wastl.webmail.exceptions.WebMailException],[void InvalidPasswordException(), void InvalidPasswordException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[[net.wastl.webmail.exceptions.WebMailException],[String getDomain(), String getUser(), void BinaryNotFoundException(), void BinaryNotFoundException(String s), void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain), void DocumentNotFoundException(), void DocumentNotFoundException(String s), void InvalidDataException(), void InvalidDataException(String s), void InvalidPasswordException(), void InvalidPasswordException(String s), void StylesheetNotFoundException(), void StylesheetNotFoundException(String s), void UserDataException(), void UserDataException(String s, String user, String domain), void WebMailException(), void WebMailException(Exception ex), void WebMailException(String s)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_23[[net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.StringHeap],[void decrease(int cur_pos), void increase(int cur_pos)]]
	->ITS CHILDREN:=================
	->	->NODE_14[...,...]
	->	->NODE_24[[net.wastl.webmail.misc.ExpireableCache.MyHeap],[Object next(), void MyHeap(int capacity), void decrease(int cur_pos), void increase(int cur_pos), void insert(Object key, long value), void remove(Object key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_25[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription()]]
	->ITS CHILDREN:=================
	->	->NODE_26[[net.wastl.webmail.config.ConfigParameter],[Enumeration choices(), Enumeration getConfigurationListeners(), Object getDefault(), String filter(String s), String getDescription(), String getDescription(String choice), String getGroup(), String getKey(), String getType(), boolean isPossibleValue(Object value), void ChoiceConfigParameter(String name, String desc), void ConfigParameter(String name, Object def, String desc), void ConfigYesNoParameter(String name, String desc), void CryptedStringConfigParameter(String name, String def, String desc), void IntegerConfigParameter(String name, String def, String desc), void StringConfigParameter(String name, String def, String desc), void UnchangeableStringConfigParameter(String name, String def, String desc), void addChoice(Object choice, String desc), void addConfigurationListener(ConfigurationListener l), void removeChoice(Object choice), void setDefault(Object value), void setGroup(String g)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_27[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_28[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName(), String getURL()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_29[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_30[[net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_31[[net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ShowMessage(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[[net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->	->NODE_33[[net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void ToplevelURLHandler(WebMailServer parent), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void registerHandler(String url, URLHandler handler), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->	->	->NODE_34[[net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), URLHandler getHandler(String url), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void ToplevelURLHandler(WebMailServer parent), void URLHandlerTree(String url), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void addHandler(String url, URLHandler h), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void registerHandler(String url, URLHandler handler), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->	->	->	->NODE_3[...,...]
	->	->	->	->	->	->NODE_35[[net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ShowMIME(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_36[[net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void UserSetup(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_37[[net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void FolderSetup(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_38[[net.wastl.webmail.plugins.FolderList, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void FolderList(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_39[[net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void MailboxList(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_40[[net.wastl.webmail.plugins.Composer, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void Composer(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_41[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_42[[net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void AdminPlugin(), void register(WebMailServer parent), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_43[[net.wastl.webmail.plugins.About, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_44[[net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ErrorHandler(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_45[[net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void WebMailTitle(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_46[[net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ImageHandler(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_47[[net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void PassThroughPlugin(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_48[[net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void LogoutSession(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_49[[net.wastl.webmail.plugins.NavBar, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void NavBar(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_50[[net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void WebMailHelp(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_51[[net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void FileAttacher(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_52[[net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_53[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void SendMessage(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_54[[net.wastl.webmail.config.ConfigurationListener],[Authenticator getAuthenticator(), Enumeration getUsers(String domain), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), String formatDate(long date), String getDescription(), String getMimeType(String name), String getName(), String getStringResource(String key, Locale locale), String getURL(), String getVersion(), String provides(), String requires(), Templates getStylesheet(String name, Locale locale, String theme), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), byte[] getBinaryFile(String name, Locale locale, String theme), void FileLogger(WebMailServer parent, Storage st), void FileStorage(WebMailServer parent), void SendMessage(), void ServletLogger(WebMailServer parent, Storage st), void SimpleStorage(WebMailServer parent), void deleteUserData(String user, String domain), void flush(), void init(), void initAuth(), void initCache(), void initConfig(), void initLanguages(), void initLog(), void initMIME(), void loadXMLSysData(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void register(WebMailServer parent), void saveUserData(String user, String domain), void saveXMLSysData(), void shutdown(), void writeMessage(long time, String message)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_3[...,...]
	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->NODE_55[[net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), void ToplevelURLHandler(WebMailServer parent), void registerHandler(String url, URLHandler handler)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_33[...,...]
	->	->	->NODE_56[[net.wastl.webmail.misc.ByteStore],[ByteStore getBinaryFromIS(InputStream in, int nr_bytes_to_read), String getContentEncoding(), String getContentType(), String getDescription(), String getName(), byte[] getBytes(), int getSize(), void ByteStore(byte[] b), void setContentEncoding(String s), void setContentType(String s), void setDescription(String s), void setName(String s)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->NODE_57[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTree, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getURL()]]
	->ITS CHILDREN:=================
	->	->NODE_28[...,...]
	->	->NODE_58[[net.wastl.webmail.server.URLHandlerTree, net.wastl.webmail.server.URLHandlerTreeNode],[String getURL(), URLHandler getHandler(String url), void URLHandlerTree(String url), void addHandler(String url, URLHandler h)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_34[...,...]
	->NODE_59[[org.webengruven.webmail.auth.OTPCacheNode],[void OTPCacheNode(), void OTPCacheNode(OTPState act), void OTPCacheNode(OTPState act, OTPState nw)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_60[[net.wastl.webmail.server.StatusServer],[String getStatus()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_61[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.storage.simple.SimpleStorage],[void initConfig()]]
	->ITS CHILDREN:=================
	->	->NODE_62[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage],[void initConfig(), void shutdown()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_63[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Storage, net.wastl.webmail.storage.FileStorage],[Authenticator getAuthenticator(), Enumeration getUsers(String domain), String formatDate(long date), String getMimeType(String name), String getStringResource(String key, Locale locale), Templates getStylesheet(String name, Locale locale, String theme), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), byte[] getBinaryFile(String name, Locale locale, String theme), void FileStorage(WebMailServer parent), void SimpleStorage(WebMailServer parent), void deleteUserData(String user, String domain), void initAuth(), void initCache(), void initConfig(), void initLanguages(), void initLog(), void initMIME(), void loadXMLSysData(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void saveUserData(String user, String domain), void saveXMLSysData(), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_64[[net.wastl.webmail.server.Storage],[Authenticator getAuthenticator(), Enumeration getConfigKeys(), Enumeration getUsers(), Enumeration getUsers(String domain), Enumeration getVirtualDomains(), String formatDate(long date), String getBasePath(Locale locale, String theme), String getConfig(String key), String getMimeType(String name), String getStringResource(String key, Locale locale), Templates getStylesheet(String name, Locale locale, String theme), WebMailVirtualDomain createVirtualDomain(String name), WebMailVirtualDomain getVirtualDomain(String name), XMLAdminModel createXMLAdminModel(), XMLGenericModel createXMLGenericModel(), XMLSystemData getSystemData(), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String passwd), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), XMLUserModel createXMLUserModel(XMLUserData data), boolean getDebug(), byte[] getBinaryFile(String name, Locale locale, String theme), void FileStorage(WebMailServer parent), void SimpleStorage(WebMailServer parent), void Storage(WebMailServer parent), void deleteUserData(String user), void deleteUserData(String user, String domain), void deleteVirtualDomain(String name), void initAuth(), void initCache(), void initConfig(), void initConfigKeys(), void initLanguages(), void initLog(), void initMIME(), void loadXMLSysData(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void save(), void saveUserData(String user, String domain), void saveXMLSysData(), void setConfig(String key, String value), void setDebug(boolean b), void setUserData(String user, UserData userdata), void setVirtualDomain(String name, WebMailVirtualDomain v), void shutdown()]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->	->	->NODE_54[...,...]
	->	->	->NODE_65[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.WebMailServer],[String getVersion(), void initConfig(), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_54[...,...]
	->	->	->	->NODE_66[[net.wastl.webmail.server.WebMailServer],[AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), AuthenticatorHandler getAuthenticatorHandler(), ConfigScheme getConfigScheme(), ConnectionTimer getConnectionTimer(), Enumeration getServers(), Enumeration getSessions(), HTTPSession getSession(String key), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), Locale getDefaultLocale(), Object getServer(String ID), PluginHandler getPluginHandler(), Provider[] getStoreProviders(), Provider[] getTransportProviders(), ServletContext getServletContext(), Storage getStorage(), String generateMessageID(String user), String getBasePath(), String getBaseURI(HTTPRequestHeader header), String getConfig(String key), String getCopyright(), String getDefaultTheme(), String getImageBasePath(), String getProperty(String name), String getVersion(), ToplevelURLHandler getURLHandler(), WebMailServer getServer(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), boolean getDebug(), long getUptime(), void WebMailServer(), void WebMailServlet(), void debugOut(String msg), void debugOut(String msg, Exception ex), void doInit(), void initConfig(), void initProviders(), void initServers(), void initStorage(), void reinitServer(String ID), void removeSession(HTTPSession w), void restart(), void setDebug(boolean b), void setProperty(String name, String value), void shutdown(), void shutdownServers()]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->	->NODE_67[[net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer],[String getConfig(String key), boolean getDebug(), void initConfig(), void setDebug(boolean b), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_64[...,...]
	->	->	->	->NODE_66[...,...]
	->	->NODE_68[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Storage, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.storage.simple.SimpleStorage],[Enumeration getUsers(String domain), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), void SimpleStorage(WebMailServer parent), void deleteUserData(String user, String domain), void initCache(), void initConfig(), void loadXMLSysData(), void saveUserData(String user, String domain), void saveXMLSysData()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_63[...,...]
	->NODE_69[[net.wastl.webmail.server.WebMailVirtualDomain],[Enumeration getAllowedHosts(), String getAuthenticationHost(), String getDefaultServer(), String getDomainName(), boolean getHostsRestricted(), boolean isAllowedHost(String host), void setAllowedHosts(String hosts), void setAuthenticationHost(String name), void setDefaultServer(String name), void setDomainName(String name), void setHostsRestricted(boolean b)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_70[[net.wastl.webmail.exceptions.StylesheetNotFoundException, net.wastl.webmail.exceptions.WebMailException],[void StylesheetNotFoundException(), void StylesheetNotFoundException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_71[[net.wastl.webmail.misc.MD5],[String asHex(), String asHex(byte[] hash), byte[] Encode(int[] input, int len), byte[] Final(), int FF(int a, int b, int c, int d, int x, int s, int ac), int GG(int a, int b, int c, int d, int x, int s, int ac), int HH(int a, int b, int c, int d, int x, int s, int ac), int II(int a, int b, int c, int d, int x, int s, int ac), int rotate_left(int x, int n), int uadd(int a, int b), int uadd(int a, int b, int c), int uadd(int a, int b, int c, int d), int[] Decode(byte[] buffer, int len, int shift), void Init(), void MD5(), void MD5(Object ob), void Transform(MD5State state, byte[] buffer, int shift), void Update(MD5State stat, byte[] buffer, int offset, int length), void Update(String s), void Update(byte b), void Update(byte[] buffer), void Update(byte[] buffer, int length), void Update(byte[] buffer, int offset, int length), void Update(int i)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_72[[net.wastl.webmail.server.AuthenticatorHandler],[Authenticator getAuthenticator(String key), void AuthenticatorHandler(WebMailServer parent), void registerAuthenticators()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_73[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.JavaScriptFilter, net.wastl.webmail.xml.XMLGenericModel],[void init()]]
	->ITS CHILDREN:=================
	->	->NODE_11[...,...]
	->	->NODE_74[[net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.JavaScriptFilter],[String apply(String s), void init()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_75[[net.wastl.webmail.ui.html.JavaScriptFilter],[String apply(String s), void JavaScriptFilter(), void init()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->	->NODE_76[[net.wastl.webmail.ui.html.Fancyfier],[String apply(String s), void Fancyfier(), void init()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->NODE_53[...,...]
	->NODE_77[[net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLUserModel],[void clearWork()]]
	->ITS CHILDREN:=================
	->	->NODE_78[[net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLUserModel],[Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), Element createMailhost(String name, String id, String url), Element createMessageList(), Element getCurrent(String type, String id), Element getCurrentFolder(String id), Element getCurrentMessage(String id), Element getFolder(String id), Element getMessageList(Element folder), Element setCurrent(String type, String id), Element setCurrentFolder(String id), Element setCurrentMessage(String id), XMLMessage getMessage(Element folder, String msgnr, String msgid), XMLMessage getWorkMessage(), XMLMessage setWorkMessage(XMLMessage message), boolean messageCached(Element folder, String msgid), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), void addMailhost(Element mh), void clearWork(), void initRoot(), void removeMessageList(Element folder), void update()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_11[...,...]
	->	->NODE_10[...,...]
	->NODE_79[[org.webengruven.webmail.auth.AuthDisplayMngr, org.webengruven.webmail.auth.CRAuthDisplayMngr, org.webengruven.webmail.auth.OTPAuthDisplayMngr],[String getPassChangeTmpl(), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setPassChangeVars(UserData ud, XMLGenericModel model)]]
	->ITS CHILDREN:=================
	->	->NODE_80[[org.webengruven.webmail.auth.AuthDisplayMngr, org.webengruven.webmail.auth.CRAuthDisplayMngr],[String getChallengeScreenFile(), String getPassChangeTmpl(), void CRAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setLoginScreenVars(XMLGenericModel model), void setPassChangeVars(UserData ud, XMLGenericModel model)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_81[[org.webengruven.webmail.auth.AuthDisplayMngr],[String getChallengeScreenFile(), String getLoginScreenFile(), String getPassChangeTmpl(), void AuthDisplayMngr(), void CRAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setLoginScreenVars(XMLGenericModel model), void setPassChangeVars(UserData ud, XMLGenericModel model)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->NODE_82[[net.wastl.webmail.misc.StreamConnector],[ByteStore getResult(), void StreamConnector(InputStream sin, int size)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_83[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Storage, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.xml.XMLUserData],[String formatDate(long date)]]
	->ITS CHILDREN:=================
	->	->NODE_84[[net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserData],[String formatDate(long date), String getUserName(), void login(), void logout()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_18[...,...]
	->	->	->NODE_7[...,...]
	->	->NODE_85[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Storage, net.wastl.webmail.storage.FileStorage],[String formatDate(long date), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_86[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.server.Logger],[String formatDate(long date), void FileLogger(WebMailServer parent, Storage st), void flush(), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void shutdown(), void writeMessage(long time, String message)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_87[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Logger],[String formatDate(long date), void FileLogger(WebMailServer parent, Storage st), void ServletLogger(WebMailServer parent, Storage st), void flush(), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void shutdown(), void writeMessage(long time, String message)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_54[...,...]
	->	->	->NODE_63[...,...]
	->NODE_88[[net.wastl.webmail.exceptions.NoSuchFolderException],[void NoSuchFolderException(), void NoSuchFolderException(String msg)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_89[[net.wastl.webmail.server.ConnectionTimer],[void ConnectionTimer(), void addTimeableConnection(TimeableConnection c), void printStatus(), void removeAll(), void removeTimeableConnection(TimeableConnection c)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_90[[net.wastl.webmail.debug.ErrorHandler],[void ErrorHandler(Exception ex)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_91[[net.wastl.webmail.xml.XMLResourceBundle, org.bulbul.webmail.xmlresource.ResourceBase],[String getResult(Element element, String key), void getKeys(Element element, Hashtable hash)]]
	->ITS CHILDREN:=================
	->	->NODE_92[[org.bulbul.webmail.xmlresource.ResourceBase],[String getResult(Element element, String key), String getXmlResourceFilename(), void ResourceBase(), void getKeys(Element element, Hashtable hash), void loadXmlResourceFile()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_93[[net.wastl.webmail.xml.XMLResourceBundle],[String getResult(Element element, String key), void XMLResourceBundle(String resourcefile, String lang), void getKeys(Element element, Hashtable hash)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_94[[net.wastl.webmail.exceptions.DocumentNotFoundException, net.wastl.webmail.exceptions.WebMailException],[void DocumentNotFoundException(), void DocumentNotFoundException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_95[[net.wastl.webmail.server.http.HTTPRequestHeader, net.wastl.webmail.server.http.HTTPResponseHeader],[Enumeration getHeaderKeys(), String getHeader(String t)]]
	->ITS CHILDREN:=================
	->	->NODE_96[[net.wastl.webmail.server.http.HTTPResponseHeader],[Enumeration getHeaderKeys(), String getHeader(String t), String getResponseLine(), void HTTPResponseHeader(int response_code, String status), void putHeader(String key, String value), void removeHeader(String key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_97[[net.wastl.webmail.server.http.HTTPRequestHeader],[Enumeration getContentKeys(), Enumeration getHeaderKeys(), Hashtable getContent(), Object getObjContent(String key), String getContent(String key), String getHeader(String t), String getMethod(), String getPath(), String getVersion(), boolean isContentSet(String key), void HTTPRequestHeader(), void setContent(String key, Object value), void setHeader(String key, String value), void setMethod(String s), void setPath(String s), void setVersion(String s)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_98[[net.wastl.webmail.ui.html.HTMLHeader],[void HTMLHeader(String title)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_99[[org.bulbul.webmail.xmlresource.ResourceBase, org.bulbul.webmail.xmlresource.Resources, org.bulbul.webmail.xmlresource.Resources_en, org.bulbul.webmail.xmlresource.Resources_en_US, org.bulbul.webmail.xmlresource.Resources_zh_TW],[String getXmlResourceFilename()]]
	->ITS CHILDREN:=================
	->	->NODE_92[...,...]
	->NODE_100[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.PluginDependencyTree, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String provides(), void register(WebMailServer parent)]]
	->ITS CHILDREN:=================
	->	->NODE_29[...,...]
	->	->NODE_101[[net.wastl.webmail.server.PluginDependencyTree],[String provides(), boolean addPlugin(Plugin p), boolean provides(String s), void PluginDependencyTree(Plugin p), void PluginDependencyTree(String s), void register(WebMailServer parent)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_102[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.server.Authenticator],[String getKey()]]
	->ITS CHILDREN:=================
	->	->NODE_26[...,...]
	->	->NODE_103[[net.wastl.webmail.server.Authenticator],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getKey(), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), boolean canChangePassword(), void Authenticator(), void CRAuthenticator(), void IMAPAuthenticator(), void OTPAuthenticator(), void OTPAuthenticatorIface(), void POPAuthenticator(), void SimpleAuthenticator(), void UnixAuthenticator(), void authenticatePostUserData(UserData ud, String dom, String pass), void authenticatePostUserData(UserData udata, String domain, String password), void authenticatePreUserData(String login, String domain, String passwd), void authenticatePreUserData(String user, String domain, String given_passwd), void authenticatePreUserData(String user, String domain, String passwd), void changePassword(UserData ud, String newpass, String vrfy), void changePassword(UserData udata, String newpassword, String verify), void changePassword(UserData udata, String passwd, String verify), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_104[[net.wastl.webmail.server.PluginHandler.FFilter],[void FFilter()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_105[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData],[Document getRoot()]]
	->ITS CHILDREN:=================
	->	->NODE_106[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData],[Document getRoot(), DocumentFragment getDocumentFragment()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_18[...,...]
	->	->	->NODE_107[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.xml.XMLSystemData],[Document getRoot(), DocumentFragment getDocumentFragment(), Element createConfigElement(String key, String value, String type), Element createConfigGroup(String groupname), Element getConfigElementByKey(String key), Element getSysData(), Enumeration getVirtualDomains(), String getConfigRaw(String key), WebMailVirtualDomain getVirtualDomain(String domname), long getLoadTime(), void XMLSystemData(Document d, ConfigScheme cs), void createVirtualDomain(String name), void deleteConfigGroup(String groupname), void deleteVirtualDomain(String name), void initChoices(), void initChoices(String key), void setConfigRaw(String groupname, String key, String value, String type), void setLoadTime(long time), void setVirtualDomain(String name, WebMailVirtualDomain domain)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_108[[net.wastl.webmail.config.ConfigStore],[ConfigScheme getConfigScheme(), Document getRoot(), DocumentFragment getDocumentFragment(), Element createConfigElement(String key, String value, String type), Element createConfigGroup(String groupname), Element getConfigElementByKey(String key), Element getSysData(), Enumeration getConfigKeys(), Enumeration getVirtualDomains(), String getConfig(String key), String getConfigRaw(String key), WebMailVirtualDomain getVirtualDomain(String domname), boolean isConfigSet(String key), long getLoadTime(), void ConfigStore(), void ConfigStore(ConfigScheme cs), void XMLSystemData(Document d, ConfigScheme cs), void addConfigurationListener(String key, ConfigurationListener l), void createVirtualDomain(String name), void deleteConfigGroup(String groupname), void deleteVirtualDomain(String name), void initChoices(), void initChoices(String key), void setConfig(String key, String value), void setConfig(String key, String value, boolean filter, boolean notify), void setConfigRaw(String group, String key, String value, String type), void setConfigRaw(String groupname, String key, String value, String type), void setLoadTime(long time), void setVirtualDomain(String name, WebMailVirtualDomain domain)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->NODE_11[...,...]
	->NODE_109[[net.wastl.webmail.misc.AttributedExpireableCache, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.misc.ExpireableCache.MyHeap],[void remove(Object key)]]
	->ITS CHILDREN:=================
	->	->NODE_110[[net.wastl.webmail.misc.AttributedExpireableCache, net.wastl.webmail.misc.ExpireableCache],[Object getAttributes(Object key), void AttributedExpireableCache(int capacity), void AttributedExpireableCache(int capacity, float expire_factor), void put(Object id, Object object, Object attribs), void remove(Object key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_111[[net.wastl.webmail.misc.ExpireableCache],[Object get(Object key), Object getAttributes(Object key), int getCapacity(), int getHits(), int getMisses(), int getUsage(), void AttributedExpireableCache(int capacity), void AttributedExpireableCache(int capacity, float expire_factor), void ExpireableCache(int capacity), void ExpireableCache(int capacity, float expire_factor), void expireOver(), void hit(), void miss(), void put(Object id, Object object, Object attribs), void put(Object key, Object value), void remove(Object key), void setCapacity(int size), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->NODE_24[...,...]
	->NODE_112[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Authenticator, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.server.WebMailServlet, net.wastl.webmail.server.http.HTTPRequestHeader, org.webengruven.webmail.auth.CRAuthenticator, org.webengruven.webmail.auth.OTPAuthenticatorIface, org.webengruven.webmail.authenticators.OTPAuthenticator, org.webengruven.webmail.plugins.ChallengeHandler],[String getVersion()]]
	->ITS CHILDREN:=================
	->	->NODE_97[...,...]
	->	->NODE_29[...,...]
	->	->NODE_113[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator, org.webengruven.webmail.auth.CRAuthenticator, org.webengruven.webmail.auth.OTPAuthenticatorIface, org.webengruven.webmail.authenticators.OTPAuthenticator],[String getVersion(), void init(Storage store), void register(ConfigScheme store)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_114[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_115[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_116[[net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void POPAuthenticator(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_103[...,...]
	->	->	->	->	->NODE_117[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void IMAPAuthenticator(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_103[...,...]
	->	->	->	->NODE_118[[net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void UnixAuthenticator(), void authenticatePreUserData(String user, String domain, String given_passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_103[...,...]
	->	->	->NODE_119[[net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), void SimpleAuthenticator(), void authenticatePostUserData(UserData udata, String domain, String password), void changePassword(UserData udata, String passwd, String verify), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_103[...,...]
	->	->	->NODE_120[[net.wastl.webmail.server.Authenticator, org.webengruven.webmail.auth.CRAuthenticator, org.webengruven.webmail.auth.OTPAuthenticatorIface, org.webengruven.webmail.authenticators.OTPAuthenticator],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), void OTPAuthenticator(), void authenticatePostUserData(UserData ud, String dom, String pass), void changePassword(UserData ud, String newpass, String vrfy), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_121[[net.wastl.webmail.server.Authenticator, org.webengruven.webmail.auth.CRAuthenticator, org.webengruven.webmail.auth.OTPAuthenticatorIface],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), void OTPAuthenticator(), void OTPAuthenticatorIface(), void authenticatePostUserData(UserData ud, String dom, String pass), void changePassword(UserData ud, String newpass, String vrfy), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_122[[net.wastl.webmail.server.Authenticator, org.webengruven.webmail.auth.CRAuthenticator],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), void CRAuthenticator(), void OTPAuthenticator(), void OTPAuthenticatorIface(), void authenticatePostUserData(UserData ud, String dom, String pass), void changePassword(UserData ud, String newpass, String vrfy), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_103[...,...]
	->	->NODE_65[...,...]
	->	->NODE_123[[net.wastl.webmail.server.WebMailServer, net.wastl.webmail.server.WebMailServlet],[AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), Enumeration getServers(), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), Object getServer(String ID), ServletContext getServletContext(), String getBasePath(), String getImageBasePath(), String getVersion(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), void WebMailServlet(), void debugOut(String msg, Exception ex), void initServers(), void reinitServer(String ID), void shutdownServers()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_66[...,...]
	->NODE_124[[net.wastl.webmail.xml.XMLCommon],[Element getElementByAttribute(Element root, String tagname, String attribute, String att_value), Node cloneNode(Document d, Node n), Node importNode(Document d, Node n, boolean deep), String getElementTextValue(Element e), String getTagValue(Element e, String tagname), void debugXML(Document d), void genericRemoveAll(Element parent, String tagname), void setElementTextValue(Element e, String text), void setElementTextValue(Element e, String text, boolean cdata), void setTagValue(Element e, String tagname, String text), void setTagValue(Element e, String tagname, String text, boolean cdata), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg, boolean cdata), void writeXML(Document d, OutputStream os, String sysID), void writeXMLwalkTree(Node node, int indent, PrintWriter out)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_125[[net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.Queue],[Object next()]]
	->ITS CHILDREN:=================
	->	->NODE_13[...,...]
	->	->NODE_24[...,...]
	->NODE_126[[net.wastl.webmail.misc.MD5State],[void MD5State(), void MD5State(MD5State from)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_127[[net.wastl.webmail.misc.JavaScriptCleaner],[void JavaScriptCleaner(Document d), void walkTree(Node node)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_128[[net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigStore],[void addConfigurationListener(String key, ConfigurationListener l)]]
	->ITS CHILDREN:=================
	->	->NODE_108[...,...]
	->	->NODE_129[[net.wastl.webmail.config.ConfigScheme],[ConfigParameter getConfigParameter(String key), Enumeration getPossibleKeys(), Object getDefaultValue(String key), String filter(String key, String value), String getConfigParameterGroup(String key), String getConfigParameterType(String key), String getDescription(String key), boolean isValid(String key, Object value), void ConfigScheme(), void addConfigurationListener(String key, ConfigurationListener l), void configAddChoice(String key, String choice, String desc), void configRegisterChoiceKey(ConfigurationListener l, String key, String desc), void configRegisterChoiceKey(String key, String desc), void configRegisterCryptedStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterCryptedStringKey(String key, String def, String desc), void configRegisterIntegerKey(ConfigurationListener l, String key, String def, String desc), void configRegisterIntegerKey(String key, String def, String desc), void configRegisterStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterStringKey(String key, String def, String desc), void configRegisterYesNoKey(ConfigurationListener l, String key, String desc), void configRegisterYesNoKey(String key, String desc), void notifyConfigurationChange(String key), void registerConfig(ConfigParameter parm), void setDefaultValue(String key, Object default_value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_130[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer],[String getConfig(String key)]]
	->ITS CHILDREN:=================
	->	->NODE_131[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.WebMailServer],[ConfigScheme getConfigScheme(), String getConfig(String key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_108[...,...]
	->	->	->NODE_66[...,...]
	->	->NODE_132[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage],[Enumeration getConfigKeys(), Enumeration getVirtualDomains(), String getConfig(String key), void deleteVirtualDomain(String name), void setConfig(String key, String value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_64[...,...]
	->	->	->NODE_108[...,...]
	->	->NODE_67[...,...]
	->NODE_133[[net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.Storage, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, net.wastl.webmail.storage.FileStorage],[void notifyConfigurationChange(String key)]]
	->ITS CHILDREN:=================
	->	->NODE_129[...,...]
	->	->NODE_134[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Storage, net.wastl.webmail.storage.FileStorage],[void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_135[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.server.Logger],[void ServletLogger(WebMailServer parent, Storage st), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_87[...,...]
	->	->	->NODE_85[...,...]
	->	->NODE_53[...,...]
	->NODE_136[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserData],[void login(), void logout()]]
	->ITS CHILDREN:=================
	->	->NODE_84[...,...]
	->	->NODE_6[...,...]
	->NODE_137[[net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.exceptions.WebMailException, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[String getDomain()]]
	->ITS CHILDREN:=================
	->	->NODE_138[[net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.exceptions.WebMailException],[String getDomain(), String getUser(), void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain), void UserDataException(), void UserDataException(String s, String user, String domain)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_22[...,...]
	->	->NODE_18[...,...]
	->NODE_139[[net.wastl.webmail.exceptions.CreateUserDataException, net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.exceptions.WebMailException],[void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain)]]
	->ITS CHILDREN:=================
	->	->NODE_138[...,...]
	->NODE_140[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.ui.html.HTMLDocument, net.wastl.webmail.ui.html.HTMLImage],[String getContentEncoding(), String getContentType()]]
	->ITS CHILDREN:=================
	->	->NODE_56[...,...]
	->	->NODE_141[[net.wastl.webmail.ui.html.HTMLDocument, net.wastl.webmail.ui.html.HTMLImage],[String getContentEncoding(), String getContentType(), byte[] toBinary(), int size(), void HTMLImage(ByteStore content), void HTMLImage(Storage store, String name, Locale locale, String theme)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_142[[net.wastl.webmail.ui.html.HTMLDocument],[Enumeration getHTTPHeaderKeys(), String getContentEncoding(), String getContentType(), String getHTTPHeader(String key), String getReturnStatus(), boolean hasHTTPHeader(), byte[] toBinary(), int getReturnCode(), int length(), int size(), void HTMLDocument(), void HTMLDocument(String title, String cont, String basepath), void HTMLDocument(String title, String content), void HTMLImage(ByteStore content), void HTMLImage(Storage store, String name, Locale locale, String theme), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet), void addHTTPHeader(String key, String value), void setStatus(int code, String status)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->NODE_143[[net.wastl.webmail.server.SystemCheck],[void SystemCheck(WebMailServer parent), void checkPathProperty(WebMailServer parent, String property)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_144[[net.wastl.webmail.xml.XMLMessage, net.wastl.webmail.xml.XMLMessagePart],[Element getFirstMessageTextPart(Element parent), Element getHeader(), Element getMessageElement(), String getHeader(String header), XMLMessagePart getFirstMessageMultiPart(), XMLMessagePart getFirstMessageTextPart(), boolean isReply(String subject), boolean messageCompletelyCached(), void XMLMessage(Element message), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void setHeader(String header, String value)]]
	->ITS CHILDREN:=================
	->	->NODE_145[[net.wastl.webmail.xml.XMLMessagePart],[Element getFirstMessageTextPart(Element parent), Element getHeader(), Element getMessageElement(), Element getPartElement(), Enumeration getParts(), String getAttribute(String key), String getHeader(String header), XMLMessagePart createPart(String type), XMLMessagePart getFirstMessageMultiPart(), XMLMessagePart getFirstMessageTextPart(), boolean isReply(String subject), boolean messageCompletelyCached(), void XMLMessage(Element message), void XMLMessagePart(Document root), void XMLMessagePart(Element part), void addContent(Document content), void addContent(String content, int quotelevel), void addJavaScript(String content), void appendPart(XMLMessagePart childpart), void insertContent(String content, int quotelevel), void insertPart(XMLMessagePart childpart), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void quoteContent(), void removeAllContent(), void removeAllParts(), void removePart(XMLMessagePart childpart), void setAttribute(String key, String value), void setHeader(String header, String value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_146[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getName()]]
	->ITS CHILDREN:=================
	->	->NODE_27[...,...]
	->	->NODE_20[...,...]
	->NODE_147[[net.wastl.webmail.exceptions.BinaryNotFoundException, net.wastl.webmail.exceptions.WebMailException],[void BinaryNotFoundException(), void BinaryNotFoundException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_148[[net.wastl.webmail.exceptions.InvalidDataException, net.wastl.webmail.exceptions.WebMailException],[void InvalidDataException(), void InvalidDataException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_149[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage],[void shutdown()]]
	->ITS CHILDREN:=================
	->	->NODE_62[...,...]
	->	->NODE_134[...,...]
	->	->NODE_111[...,...]
	->NODE_150[[net.wastl.webmail.ui.html.HTMLDocument, net.wastl.webmail.ui.xml.XHTMLDocument],[int length(), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet)]]
	->ITS CHILDREN:=================
	->	->NODE_142[...,...]
	->NODE_151[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigYesNoParameter, net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType()]]
	->ITS CHILDREN:=================
	->	->NODE_152[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.StringConfigParameter],[String filter(String s), String getType(), void CryptedStringConfigParameter(String name, String def, String desc)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_153[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.StringConfigParameter],[String filter(String s), String getType(), boolean isPossibleValue(Object value), void CryptedStringConfigParameter(String name, String def, String desc), void StringConfigParameter(String name, String def, String desc), void UnchangeableStringConfigParameter(String name, String def, String desc)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_26[...,...]
	->	->NODE_154[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigYesNoParameter],[String getType(), void ConfigYesNoParameter(String name, String desc)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_155[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter],[Enumeration choices(), String getDescription(String choice), String getType(), boolean isPossibleValue(Object value), void ChoiceConfigParameter(String name, String desc), void ConfigYesNoParameter(String name, String desc), void addChoice(Object choice, String desc), void removeChoice(Object choice)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_26[...,...]
	->	->NODE_156[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType(), boolean isPossibleValue(Object value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_157[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType(), boolean isPossibleValue(Object value), void UnchangeableStringConfigParameter(String name, String def, String desc)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_153[...,...]
	->	->	->NODE_155[...,...]
	->	->	->NODE_158[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.IntegerConfigParameter],[String getType(), boolean isPossibleValue(Object value), void IntegerConfigParameter(String name, String def, String desc)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_26[...,...]
	->NODE_159[[net.wastl.webmail.xml.XMLAdminModel, net.wastl.webmail.xml.XMLGenericModel],[Element addStateElement(String tag), Element createElement(String tag), Element createTextElement(String tag, String value), void XMLAdminModel(WebMailServer parent, Element rsysdata), void clearUserData(), void importUserData(Element userdata)]]
	->ITS CHILDREN:=================
	->	->NODE_11[...,...]
	->NODE_160[[org.bulbul.webmail.util.TranscodeUtil],[String transcodeThenEncodeByLocale(String sourceString, String sourceStringEncoding, Locale locale)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_161[[net.wastl.webmail.exceptions.TimeoutException],[void TimeoutException()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_162[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage, net.wastl.webmail.xml.XMLSystemData],[Enumeration getVirtualDomains(), void deleteVirtualDomain(String name)]]
	->ITS CHILDREN:=================
	->	->NODE_132[...,...]
	->	->NODE_107[...,...]
Done printing lattice!
Using complex purge
Printing lattice after purging extents
NODE_0[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigStore, net.wastl.webmail.config.ConfigYesNoParameter, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter, net.wastl.webmail.debug.ErrorHandler, net.wastl.webmail.exceptions.BinaryNotFoundException, net.wastl.webmail.exceptions.CreateUserDataException, net.wastl.webmail.exceptions.DocumentNotFoundException, net.wastl.webmail.exceptions.InvalidDataException, net.wastl.webmail.exceptions.InvalidPasswordException, net.wastl.webmail.exceptions.NoSuchFolderException, net.wastl.webmail.exceptions.StylesheetNotFoundException, net.wastl.webmail.exceptions.TimeoutException, net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.exceptions.WebMailException, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.misc.AttributedExpireableCache, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.Helper, net.wastl.webmail.misc.JavaScriptCleaner, net.wastl.webmail.misc.MD5, net.wastl.webmail.misc.MD5State, net.wastl.webmail.misc.Queue, net.wastl.webmail.misc.StreamConnector, net.wastl.webmail.misc.StringHeap, net.wastl.webmail.misc.TEA, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.AdminPlugin.ShutdownThread, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.Authenticator, net.wastl.webmail.server.AuthenticatorHandler, net.wastl.webmail.server.ConnectionTimer, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.Logger, net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.PluginDependencyTree, net.wastl.webmail.server.PluginHandler, net.wastl.webmail.server.PluginHandler.FFilter, net.wastl.webmail.server.StatusServer, net.wastl.webmail.server.Storage, net.wastl.webmail.server.SystemCheck, net.wastl.webmail.server.TimeableConnection, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, net.wastl.webmail.server.URLHandlerTree, net.wastl.webmail.server.URLHandlerTreeNode, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.server.WebMailServlet, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.server.WebMailVirtualDomain, net.wastl.webmail.server.http.HTTPRequestHeader, net.wastl.webmail.server.http.HTTPResponseHeader, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.storage.simple.SimpleStorage, net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.HTMLDocument, net.wastl.webmail.ui.html.HTMLHeader, net.wastl.webmail.ui.html.HTMLImage, net.wastl.webmail.ui.html.JavaScriptFilter, net.wastl.webmail.ui.xml.XHTMLDocument, net.wastl.webmail.xml.XMLAdminModel, net.wastl.webmail.xml.XMLCommon, net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLMessage, net.wastl.webmail.xml.XMLMessagePart, net.wastl.webmail.xml.XMLResourceBundle, net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData, net.wastl.webmail.xml.XMLUserModel, org.bulbul.webmail.util.TranscodeUtil, org.bulbul.webmail.xmlresource.ResourceBase, org.bulbul.webmail.xmlresource.Resources, org.bulbul.webmail.xmlresource.Resources_en, org.bulbul.webmail.xmlresource.Resources_en_US, org.bulbul.webmail.xmlresource.Resources_zh_TW, org.webengruven.webmail.auth.AuthDisplayMngr, org.webengruven.webmail.auth.CRAuthDisplayMngr, org.webengruven.webmail.auth.CRAuthenticator, org.webengruven.webmail.auth.OTPAuthDisplayMngr, org.webengruven.webmail.auth.OTPAuthenticatorIface, org.webengruven.webmail.auth.OTPCacheNode, org.webengruven.webmail.authenticators.OTPAuthenticator, org.webengruven.webmail.plugins.ChallengeHandler],[]]
ITS CHILDREN:=================
	->NODE_1[[net.wastl.webmail.misc.Helper, net.wastl.webmail.misc.TEA],[void main(String[] args)]]
	->ITS CHILDREN:=================
	->	->NODE_2[[net.wastl.webmail.misc.TEA],[String dumpBytes(byte[] b), byte[] decipher(byte[] v), byte[] decode(byte[] b, int count), byte[] decode(int[] b), byte[] encipher(byte[] v), int padding(), int[] decipher(int[] v), int[] encipher(int[] v), int[] encode(byte[] b, int count), void TEA(byte[] key), void main(String[] args)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[[],[AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), AuthDisplayMngr getAuthDisplayMngr(), Authenticator getAuthenticator(), Authenticator getAuthenticator(String key), AuthenticatorHandler getAuthenticatorHandler(), ByteStore getAttachment(String key), ByteStore getBinaryFromIS(InputStream in, int nr_bytes_to_read), ByteStore getMIMEPart(String msgid, String name), ByteStore getResult(), ConfigParameter getConfigParameter(String key), ConfigScheme getConfigScheme(), ConnectionTimer getConnectionTimer(), Document getModel(), Document getRoot(), DocumentFragment getDocumentFragment(), Element addStateElement(String tag), Element createConfigElement(String key, String value, String type), Element createConfigGroup(String groupname), Element createElement(String tag), Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), Element createMailhost(String name, String id, String url), Element createMessageList(), Element createStateVar(String name, String value), Element createTextElement(String tag, String value), Element getConfigElementByKey(String key), Element getCurrent(String type, String id), Element getCurrentFolder(String id), Element getCurrentMessage(String id), Element getElementByAttribute(Element root, String tagname, String attribute, String att_value), Element getFirstMessageTextPart(Element parent), Element getFolder(String id), Element getHeader(), Element getMessageElement(), Element getMessageList(Element folder), Element getPartElement(), Element getStateData(), Element getSysData(), Element getUserData(), Element setCurrent(String type, String id), Element setCurrentFolder(String id), Element setCurrentMessage(String id), Enumeration breakLine(String line, int linesize, int quotelevel), Enumeration choices(), Enumeration getAllowedHosts(), Enumeration getConfigKeys(), Enumeration getConfigurationListeners(), Enumeration getContentKeys(), Enumeration getHTTPHeaderKeys(), Enumeration getHeaderKeys(), Enumeration getMimeParts(String msgid), Enumeration getParts(), Enumeration getPlugins(), Enumeration getPossibleKeys(), Enumeration getServers(), Enumeration getSessions(), Enumeration getUsers(), Enumeration getUsers(String domain), Enumeration getVirtualDomains(), Enumeration mailHosts(), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), Folder getFolder(String folderhash), Folder getRootFolder(String name), HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), HTTPSession getSession(String key), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), Hashtable getActiveConnections(), Hashtable getAttachments(), Hashtable getContent(), InetAddress getRemoteAddress(), Locale getDefaultLocale(), Locale getLocale(), Locale getPreferredLocale(), MailHostData getMailHost(String id), MailHostData getMailHost(String name), Node cloneNode(Document d, Node n), Node importNode(Document d, Node n, boolean deep), OTPState getFromCache(String key, int type), Object get(Object key), Object getAttributes(Object key), Object getDefault(), Object getDefaultValue(String key), Object getObjContent(String key), Object getServer(String ID), Object next(), PluginHandler getPluginHandler(), Provider[] getStoreProviders(), Provider[] getTransportProviders(), ServletContext getServletContext(), Storage getStorage(), Store connectStore(String host, String protocol, String login, String password), String apply(String s), String asHex(), String asHex(byte[] hash), String calcCode(InetAddress a, HTTPRequestHeader h), String calcSessionCode(InetAddress a, HTTPRequestHeader h), String crypt(String salt, String original), String decryptTEA(String src), String dumpBytes(byte[] b), String encryptTEA(String src), String filter(String key, String value), String filter(String s), String formatDate(long date), String generateFolderHash(Folder folder), String generateMessageID(String user), String getAttribute(String key), String getAuthenticationHost(), String getBasePath(), String getBasePath(Locale locale, String theme), String getBaseURI(HTTPRequestHeader header), String getChallenge(UserData ud), String getChallengeScreenFile(), String getConfig(String key), String getConfigParameterGroup(String key), String getConfigParameterType(String key), String getConfigRaw(String key), String getContent(String key), String getContentEncoding(), String getContentType(), String getCopyright(), String getDefaultServer(), String getDefaultTheme(), String getDescription(), String getDescription(String choice), String getDescription(String key), String getDomain(), String getDomainName(), String getElementTextValue(Element e), String getEmail(), String getEnv(String key), String getFirstLogin(), String getFullName(), String getGroup(), String getHTTPHeader(String key), String getHeader(String header), String getHeader(String t), String getHostURL(), String getID(), String getImageBasePath(), String getKey(), String getLastLogin(), String getLogin(), String getLoginCount(), String getLoginScreenFile(), String getMethod(), String getMimeType(String name), String getName(), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getNextID(), String getPassChangeTmpl(), String getPassword(), String getPasswordData(), String getPath(), String getProperty(String name), String getResponseLine(), String getResult(Element element, String key), String getReturnStatus(), String getSentFolder(), String getSessionCode(), String getSignature(), String getStateVar(String name), String getStatus(), String getStringResource(String key), String getStringResource(String key, Locale locale), String getTagValue(Element e, String tagname), String getTheme(), String getType(), String getURL(), String getUser(), String getUserName(), String getVersion(), String getXmlResourceFilename(), String joinAddress(Address[] a), String next(), String provides(), String requires(), String transcodeThenEncodeByLocale(String sourceString, String sourceStringEncoding, Locale locale), Templates getStylesheet(String name, Locale locale, String theme), ToplevelURLHandler getURLHandler(), URLHandler getHandler(String url), UserData getUser(), WebMailServer getServer(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), WebMailVirtualDomain createVirtualDomain(String name), WebMailVirtualDomain getVirtualDomain(String domname), WebMailVirtualDomain getVirtualDomain(String name), XMLAdminModel createXMLAdminModel(), XMLGenericModel createXMLGenericModel(), XMLMessage getMessage(Element folder, String msgnr, String msgid), XMLMessage getWorkMessage(), XMLMessage setWorkMessage(XMLMessage message), XMLMessagePart createPart(String type), XMLMessagePart getFirstMessageMultiPart(), XMLMessagePart getFirstMessageTextPart(), XMLSystemData getSystemData(), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String passwd), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), XMLUserModel createXMLUserModel(XMLUserData data), XMLUserModel getUserModel(), boolean addPlugin(Plugin p), boolean canChangePassword(), boolean checkPassword(String s), boolean getBoolVar(String var), boolean getBoolVarWrapper(String var), boolean getDebug(), boolean getHostsRestricted(), boolean hasHTTPHeader(), boolean isAllowedHost(String host), boolean isConfigSet(String key), boolean isContentSet(String key), boolean isEmpty(), boolean isLoggedOut(), boolean isPossibleValue(Object value), boolean isReply(String subject), boolean isSent(), boolean isValid(String key, Object value), boolean messageCached(Element folder, String msgid), boolean messageCompletelyCached(), boolean provides(String s), boolean wantsBreakLines(), boolean wantsSaveSent(), boolean wantsSetFlags(), boolean wantsShowFancy(), boolean wantsShowImages(), byte[] Encode(int[] input, int len), byte[] Final(), byte[] decipher(byte[] v), byte[] decode(byte[] b, int count), byte[] decode(int[] b), byte[] encipher(byte[] v), byte[] getBinaryFile(String name, Locale locale, String theme), byte[] getBytes(), byte[] toBinary(), int D_ENCRYPT(int L, int R, int S, int E0, int E1, int[] s), int FF(int a, int b, int c, int d, int x, int s, int ac), int GG(int a, int b, int c, int d, int x, int s, int ac), int HH(int a, int b, int c, int d, int x, int s, int ac), int HPERM_OP(int a, int n, int m), int II(int a, int b, int c, int d, int x, int s, int ac), int byteToUnsigned(byte b), int findFittingBreakPos(String line, int linesize), int fourBytesToInt(byte[] b, int offset), int getCapacity(), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), int getHits(), int getMaxLineLength(), int getMaxShowMessages(), int getMisses(), int getQuoteLevel(String token), int getReturnCode(), int getSize(), int getUsage(), int length(), int padding(), int rotate_left(int x, int n), int size(), int uadd(int a, int b), int uadd(int a, int b, int c), int uadd(int a, int b, int c, int d), int[] Decode(byte[] buffer, int len, int shift), int[] body(int[] schedule, int Eswap0, int Eswap1), int[] decipher(int[] v), int[] des_set_key(byte[] key), int[] encipher(int[] v), int[] encode(byte[] b, int count), int[] getSelectedMessages(HTTPRequestHeader head, int max), long getIntVar(String var), long getIntVarWrapper(String var), long getLastAccess(), long getLoadTime(), long getTimeout(), long getUptime(), void About(), void AdminPlugin(), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void AttributedExpireableCache(int capacity), void AttributedExpireableCache(int capacity, float expire_factor), void AuthDisplayMngr(), void Authenticator(), void AuthenticatorHandler(WebMailServer parent), void BinaryNotFoundException(), void BinaryNotFoundException(String s), void ByteStore(byte[] b), void CRAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void CRAuthenticator(), void ChoiceConfigParameter(String name, String desc), void Composer(), void ConfigParameter(String name, Object def, String desc), void ConfigScheme(), void ConfigStore(), void ConfigStore(ConfigScheme cs), void ConfigYesNoParameter(String name, String desc), void ConnectionTimer(), void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain), void CryptedStringConfigParameter(String name, String def, String desc), void DocumentNotFoundException(), void DocumentNotFoundException(String s), void ErrorHandler(), void ErrorHandler(Exception ex), void ExpireableCache(int capacity), void ExpireableCache(int capacity, float expire_factor), void FFilter(), void Fancyfier(), void FileAttacher(), void FileLogger(WebMailServer parent, Storage st), void FileStorage(WebMailServer parent), void FolderList(), void FolderSetup(), void HTMLDocument(), void HTMLDocument(String title, String cont, String basepath), void HTMLDocument(String title, String content), void HTMLHeader(String title), void HTMLImage(ByteStore content), void HTMLImage(Storage store, String name, Locale locale, String theme), void HTTPRequestHeader(), void HTTPResponseHeader(int response_code, String status), void Helper(), void IMAPAuthenticator(), void ImageHandler(), void Init(), void IntegerConfigParameter(String name, String def, String desc), void InvalidDataException(), void InvalidDataException(String s), void InvalidPasswordException(), void InvalidPasswordException(String s), void JavaScriptCleaner(Document d), void JavaScriptFilter(), void LogoutSession(), void MD5(), void MD5(Object ob), void MD5State(), void MD5State(MD5State from), void MailboxList(), void MyHeap(int capacity), void NavBar(), void NoSuchFolderException(), void NoSuchFolderException(String msg), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void OTPAuthenticator(), void OTPAuthenticatorIface(), void OTPCacheNode(), void OTPCacheNode(OTPState act), void OTPCacheNode(OTPState act, OTPState nw), void PERM_OP(int a, int b, int n, int m, int[] results), void POPAuthenticator(), void PassThroughPlugin(), void PluginDependencyTree(Plugin p), void PluginDependencyTree(String s), void PluginHandler(WebMailServer parent), void Queue(), void ResourceBase(), void SendMessage(), void ServletLogger(WebMailServer parent, Storage st), void ShowMIME(), void ShowMessage(), void ShutdownThread(int time, boolean restart, WebMailServer parent), void SimpleAuthenticator(), void SimpleStorage(WebMailServer parent), void Storage(WebMailServer parent), void StreamConnector(InputStream sin, int size), void StringConfigParameter(String name, String def, String desc), void StringHeap(int capacity), void StylesheetNotFoundException(), void StylesheetNotFoundException(String s), void SystemCheck(WebMailServer parent), void TEA(byte[] key), void TimeoutException(), void ToplevelURLHandler(WebMailServer parent), void Transform(MD5State state, byte[] buffer, int shift), void URLHandlerTree(String url), void UnchangeableStringConfigParameter(String name, String def, String desc), void UnixAuthenticator(), void Update(MD5State stat, byte[] buffer, int offset, int length), void Update(String s), void Update(byte b), void Update(byte[] buffer), void Update(byte[] buffer, int length), void Update(byte[] buffer, int offset, int length), void Update(int i), void UserDataException(), void UserDataException(String s, String user, String domain), void UserSetup(), void WebMailException(), void WebMailException(Exception ex), void WebMailException(String s), void WebMailHelp(), void WebMailServer(), void WebMailServlet(), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void WebMailTitle(), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet), void XMLAdminModel(WebMailServer parent, Element rsysdata), void XMLGenericModel(WebMailServer parent, Element rsysdata), void XMLMessage(Element message), void XMLMessagePart(Document root), void XMLMessagePart(Element part), void XMLResourceBundle(String resourcefile, String lang), void XMLSystemData(Document d, ConfigScheme cs), void XMLUserData(Document d), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), void addChoice(Object choice, String desc), void addConfigurationListener(ConfigurationListener l), void addConfigurationListener(String key, ConfigurationListener l), void addContent(Document content), void addContent(String content, int quotelevel), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void addHTTPHeader(String key, String value), void addHandler(String url, URLHandler h), void addJavaScript(String content), void addMailHost(String name, String host, String login, String password), void addMailbox(String name, String protocol, String host, String login, String password), void addMailhost(Element mh), void addStateVar(String name, String value), void addTimeableConnection(TimeableConnection c), void addWorkAttachment(String name, ByteStore bs, String description), void appendPart(XMLMessagePart childpart), void authenticatePostUserData(UserData ud, String dom, String pass), void authenticatePostUserData(UserData udata, String domain, String password), void authenticatePreUserData(String login, String domain, String passwd), void authenticatePreUserData(String user, String domain, String given_passwd), void authenticatePreUserData(String user, String domain, String passwd), void changePassword(UserData ud, String newpass, String vrfy), void changePassword(UserData udata, String newpassword, String verify), void changePassword(UserData udata, String passwd, String verify), void changeSetup(HTTPRequestHeader head), void changeUser(HTTPRequestHeader head), void checkPathProperty(WebMailServer parent, String property), void clearAttachments(), void clearUser(), void clearUserData(), void clearWork(), void configAddChoice(String key, String choice, String desc), void configRegisterChoiceKey(ConfigurationListener l, String key, String desc), void configRegisterChoiceKey(String key, String desc), void configRegisterCryptedStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterCryptedStringKey(String key, String def, String desc), void configRegisterIntegerKey(ConfigurationListener l, String key, String def, String desc), void configRegisterIntegerKey(String key, String def, String desc), void configRegisterStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterStringKey(String key, String def, String desc), void configRegisterYesNoKey(ConfigurationListener l, String key, String desc), void configRegisterYesNoKey(String key, String desc), void connectAll(), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void createMessageList(String folderhash, int list_part), void createVirtualDomain(String name), void debugOut(String msg), void debugOut(String msg, Exception ex), void debugXML(Document d), void decrease(int cur_pos), void deleteConfigGroup(String groupname), void deleteUser(String user), void deleteUserData(String user), void deleteUserData(String user, String domain), void deleteVirtualDomain(String name), void disconnect(String name), void disconnectAll(), void doInit(), void doInit(WebMailServer parent, HTTPRequestHeader h), void ensureElement(String tag, String attribute, String att_value), void expireOver(), void expungeFolders(), void flush(), void genericRemoveAll(Element parent, String tagname), void getFromCache(String key, int type, OTPState[] sts), void getKeys(Element element, Hashtable hash), void getMessage(String folderhash, int msgnum), void getMessage(String folderhash, int msgnum, int mode), void handleTransportException(SendFailedException e), void hit(), void importUserData(Element userdata), void increase(int cur_pos), void init(), void init(Storage store), void init(String user, String domain, String password), void initAuth(), void initCache(), void initChoices(), void initChoices(String key), void initConfig(), void initConfigKeys(), void initLanguages(), void initLog(), void initMIME(), void initProviders(), void initRoot(), void initServers(), void initStorage(), void insert(Object key, long value), void insert(String key), void insertContent(String content, int quotelevel), void insertPart(XMLMessagePart childpart), void intToFourBytes(int iValue, byte[] b, int offset), void loadXMLSysData(), void loadXmlResourceFile(), void log(int level, Exception ex), void log(int level, String message), void login(), void login(HTTPRequestHeader h), void logout(), void main(String[] args), void miss(), void notifyConfigurationChange(String key), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void prepareCompose(), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void printStatus(), void put(Object id, Object object, Object attribs), void put(Object key, Object value), void putHeader(String key, String value), void putIntoCache(String key, OTPState ast, OTPState nst), void queue(Object o), void queue(long time, String message), void quoteContent(), void refreshFolderInformation(), void refreshFolderInformation(String folderhash), void refreshFolderInformation(boolean subscribed_only), void register(ConfigScheme store), void register(WebMailServer parent), void registerAuthenticators(), void registerConfig(ConfigParameter parm), void registerHandler(String url, URLHandler handler), void registerPlugins(), void reinitServer(String ID), void remove(Object key), void remove(String key), void removeAll(), void removeAllContent(), void removeAllParts(), void removeAllStateVars(String name), void removeChoice(Object choice), void removeFolder(String id, boolean recurse), void removeFromCache(String key, int type), void removeHeader(String key), void removeMailHost(String id), void removeMailHost(String name), void removeMailbox(String name), void removeMessageList(Element folder), void removePart(XMLMessagePart childpart), void removeSession(HTTPSession w), void removeTimeableConnection(TimeableConnection c), void removeWorkAttachment(String name), void reqShutdown(int time, boolean reboot), void resetBoolVars(), void restart(), void save(), void saveData(), void saveUserData(String user, String domain), void saveXMLSysData(), void selectDomain(String domain), void selectUser(String user), void setAddToFolder(String id), void setAllowedHosts(String hosts), void setAttribute(String key, String value), void setAuthenticationHost(String name), void setBoolVar(String var, boolean value), void setBoolVarWrapper(String var, boolean value), void setBreakLines(boolean b), void setCapacity(int size), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setConfig(String key, String value), void setConfig(String key, String value, boolean filter, boolean notify), void setConfigRaw(String group, String key, String value, String type), void setConfigRaw(String groupname, String key, String value, String type), void setContent(String key, Object value), void setContentEncoding(String s), void setContentType(String s), void setDebug(boolean b), void setDefault(Object value), void setDefaultServer(String name), void setDefaultValue(String key, Object default_value), void setDescription(String s), void setDomain(String s), void setDomainName(String name), void setElementTextValue(Element e, String text), void setElementTextValue(Element e, String text, boolean cdata), void setEmail(String s), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void setFullName(String s), void setGroup(String g), void setHeader(String header, String value), void setHeader(String key, String value), void setHostURL(String v), void setHostsRestricted(boolean b), void setIntVar(String var, long value), void setIntVarWrapper(String var, long value), void setLastAccess(), void setLoadTime(long time), void setLogin(String s), void setLoginScreenVars(XMLGenericModel model), void setMaxLineLength(int i), void setMaxShowMessages(int i), void setMethod(String s), void setName(String s), void setName(String v), void setPassChangeVars(UserData ud, XMLGenericModel model), void setPassword(String newpasswd, String verify), void setPassword(String v), void setPasswordData(String data), void setPath(String s), void setPreferredLocale(String newloc), void setProperty(String name, String value), void setSaveSent(boolean b), void setSent(boolean b), void setSentFolder(String s), void setSetFlags(boolean b), void setShowFancy(boolean b), void setShowImages(boolean b), void setSignature(String s), void setStateVar(String name, String value), void setStatus(int code, String status), void setSubscribedAll(String id, boolean subscribed), void setTagValue(Element e, String tagname, String text), void setTagValue(Element e, String tagname, String text, boolean cdata), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg, boolean cdata), void setTheme(String theme), void setUserData(String user, UserData userdata), void setUserName(String s), void setVersion(String s), void setVirtualDomain(String name, WebMailVirtualDomain domain), void setVirtualDomain(String name, WebMailVirtualDomain v), void setupUserEdit(), void shutdown(), void shutdownServers(), void storeMessage(HTTPRequestHeader head), void subscribeFolder(String folderhash), void timeoutOccured(), void unsubscribeFolder(String folderhash), void update(), void walkTree(Node node), void writeMessage(long time, String message), void writeXML(Document d, OutputStream os, String sysID), void writeXMLwalkTree(Node node, int indent, PrintWriter out)]]
	->	->NODE_4[[net.wastl.webmail.misc.Helper],[Enumeration breakLine(String line, int linesize, int quotelevel), String calcSessionCode(InetAddress a, HTTPRequestHeader h), String crypt(String salt, String original), String decryptTEA(String src), String encryptTEA(String src), String joinAddress(Address[] a), int D_ENCRYPT(int L, int R, int S, int E0, int E1, int[] s), int HPERM_OP(int a, int n, int m), int byteToUnsigned(byte b), int findFittingBreakPos(String line, int linesize), int fourBytesToInt(byte[] b, int offset), int getQuoteLevel(String token), int[] body(int[] schedule, int Eswap0, int Eswap1), int[] des_set_key(byte[] key), void Helper(), void PERM_OP(int a, int b, int n, int m, int[] results), void intToFourBytes(int iValue, byte[] b, int offset), void main(String[] args)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_5[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel],[void setException(Exception ex)]]
	->ITS CHILDREN:=================
	->	->NODE_6[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.WebMailSession],[Document getModel(), InetAddress getRemoteAddress(), Locale getLocale(), String getEnv(String key), String getSessionCode(), boolean isLoggedOut(), long getLastAccess(), long getTimeout(), void doInit(WebMailServer parent, HTTPRequestHeader h), void login(), void login(HTTPRequestHeader h), void logout(), void saveData(), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setLastAccess(), void timeoutOccured()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_7[[net.wastl.webmail.server.WebMailSession],[ByteStore getAttachment(String key), ByteStore getMIMEPart(String msgid, String name), Document getModel(), Enumeration getMimeParts(String msgid), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), Folder getFolder(String folderhash), Folder getRootFolder(String name), Hashtable getActiveConnections(), Hashtable getAttachments(), InetAddress getRemoteAddress(), Locale getLocale(), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), String formatDate(long date), String generateFolderHash(Folder folder), String getEnv(String key), String getSessionCode(), String getStringResource(String key), String getUserName(), UserData getUser(), XMLUserModel getUserModel(), boolean isLoggedOut(), boolean isSent(), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), int[] getSelectedMessages(HTTPRequestHeader head, int max), long getLastAccess(), long getTimeout(), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void addMailbox(String name, String protocol, String host, String login, String password), void addWorkAttachment(String name, ByteStore bs, String description), void changeSetup(HTTPRequestHeader head), void clearAttachments(), void clearWork(), void connectAll(), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void createMessageList(String folderhash, int list_part), void disconnect(String name), void disconnectAll(), void doInit(WebMailServer parent, HTTPRequestHeader h), void expungeFolders(), void getMessage(String folderhash, int msgnum), void getMessage(String folderhash, int msgnum, int mode), void handleTransportException(SendFailedException e), void login(), void login(HTTPRequestHeader h), void logout(), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void prepareCompose(), void refreshFolderInformation(), void refreshFolderInformation(String folderhash), void refreshFolderInformation(boolean subscribed_only), void removeFolder(String id, boolean recurse), void removeMailbox(String name), void removeWorkAttachment(String name), void saveData(), void setAddToFolder(String id), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void setLastAccess(), void setSent(boolean b), void setSubscribedAll(String id, boolean subscribed), void storeMessage(HTTPRequestHeader head), void subscribeFolder(String folderhash), void timeoutOccured(), void unsubscribeFolder(String folderhash)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_8[[net.wastl.webmail.server.HTTPSession],[ByteStore getAttachment(String key), ByteStore getMIMEPart(String msgid, String name), Document getModel(), Enumeration getMimeParts(String msgid), Folder connect(String name), Folder getChildFolder(Folder root, String folderhash), Folder getFolder(String folderhash), Folder getRootFolder(String name), Hashtable getActiveConnections(), Hashtable getAttachments(), InetAddress getRemoteAddress(), Locale getLocale(), Store connectStore(String host, String protocol, String login, String password), String calcCode(InetAddress a, HTTPRequestHeader h), String formatDate(long date), String generateFolderHash(Folder folder), String getEnv(String key), String getSessionCode(), String getStringResource(String key), String getUserName(), UserData getUser(), XMLUserModel getUserModel(), boolean isLoggedOut(), boolean isSent(), int getFolderTree(Folder folder, Element xml_parent, boolean subscribed_only), int[] getSelectedMessages(HTTPRequestHeader head, int max), long getLastAccess(), long getTimeout(), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void WebMailSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void addFolder(String toid, String name, boolean holds_messages, boolean holds_folders), void addMailbox(String name, String protocol, String host, String login, String password), void addWorkAttachment(String name, ByteStore bs, String description), void changeSetup(HTTPRequestHeader head), void changeUser(HTTPRequestHeader head), void clearAttachments(), void clearUser(), void clearWork(), void connectAll(), void copyMoveMessage(String fromfolder, String tofolder, HTTPRequestHeader head, boolean move), void createMessageList(String folderhash, int list_part), void deleteUser(String user), void disconnect(String name), void disconnectAll(), void doInit(WebMailServer parent, HTTPRequestHeader h), void expungeFolders(), void getMessage(String folderhash, int msgnum), void getMessage(String folderhash, int msgnum, int mode), void handleTransportException(SendFailedException e), void login(), void login(HTTPRequestHeader h), void logout(), void parseMIMEContent(Part p, XMLMessagePart parent_part, String msgid), void prepareCompose(), void refreshFolderInformation(), void refreshFolderInformation(String folderhash), void refreshFolderInformation(boolean subscribed_only), void removeFolder(String id, boolean recurse), void removeMailbox(String name), void removeWorkAttachment(String name), void saveData(), void selectDomain(String domain), void selectUser(String user), void setAddToFolder(String id), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setFlags(String folderhash, HTTPRequestHeader head), void setLastAccess(), void setSent(boolean b), void setSubscribedAll(String id, boolean subscribed), void setupUserEdit(), void storeMessage(HTTPRequestHeader head), void subscribeFolder(String folderhash), void timeoutOccured(), void unsubscribeFolder(String folderhash)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->	->NODE_9[[net.wastl.webmail.server.AdminSession],[Document getModel(), InetAddress getRemoteAddress(), Locale getLocale(), String getEnv(String key), String getSessionCode(), boolean isLoggedOut(), long getLastAccess(), long getTimeout(), void AdminSession(WebMailServer parent, Object parm, HTTPRequestHeader h), void changeUser(HTTPRequestHeader head), void clearUser(), void deleteUser(String user), void doInit(WebMailServer parent, HTTPRequestHeader h), void login(), void login(HTTPRequestHeader h), void logout(), void saveData(), void selectDomain(String domain), void selectUser(String user), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setLastAccess(), void setupUserEdit(), void timeoutOccured()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_8[...,...]
	->	->NODE_10[[net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel],[void clearWork(), void setException(Exception ex)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_11[[net.wastl.webmail.xml.XMLGenericModel],[Document getRoot(), Element addStateElement(String tag), Element createElement(String tag), Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), Element createMailhost(String name, String id, String url), Element createMessageList(), Element createStateVar(String name, String value), Element createTextElement(String tag, String value), Element getCurrent(String type, String id), Element getCurrentFolder(String id), Element getCurrentMessage(String id), Element getFolder(String id), Element getMessageList(Element folder), Element getStateData(), Element setCurrent(String type, String id), Element setCurrentFolder(String id), Element setCurrentMessage(String id), String getNextID(), String getStateVar(String name), XMLMessage getMessage(Element folder, String msgnr, String msgid), XMLMessage getWorkMessage(), XMLMessage setWorkMessage(XMLMessage message), boolean messageCached(Element folder, String msgid), void XMLAdminModel(WebMailServer parent, Element rsysdata), void XMLGenericModel(WebMailServer parent, Element rsysdata), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), void addMailhost(Element mh), void addStateVar(String name, String value), void clearUserData(), void clearWork(), void importUserData(Element userdata), void init(), void initRoot(), void removeAllStateVars(String name), void removeMessageList(Element folder), void setException(Exception ex), void setStateVar(String name, String value), void update()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->	->NODE_7[...,...]
	->NODE_12[[net.wastl.webmail.misc.Queue, net.wastl.webmail.misc.StringHeap],[boolean isEmpty()]]
	->ITS CHILDREN:=================
	->	->NODE_13[[net.wastl.webmail.misc.Queue],[Object next(), boolean isEmpty(), void Queue(), void queue(Object o)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_14[[net.wastl.webmail.misc.StringHeap],[String next(), boolean isEmpty(), void StringHeap(int capacity), void decrease(int cur_pos), void increase(int cur_pos), void insert(String key), void remove(String key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_15[[net.wastl.webmail.plugins.AdminPlugin.ShutdownThread],[void ShutdownThread(int time, boolean restart, WebMailServer parent)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_16[[net.wastl.webmail.server.PluginHandler],[Enumeration getPlugins(), void PluginHandler(WebMailServer parent), void registerPlugins()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_17[[net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[String getLogin()]]
	->ITS CHILDREN:=================
	->	->NODE_18[[net.wastl.webmail.xml.XMLUserData],[Document getRoot(), DocumentFragment getDocumentFragment(), Element getUserData(), Enumeration mailHosts(), Locale getPreferredLocale(), MailHostData getMailHost(String id), String formatDate(long date), String getDomain(), String getEmail(), String getFirstLogin(), String getFullName(), String getLastLogin(), String getLogin(), String getLoginCount(), String getPasswordData(), String getSentFolder(), String getSignature(), String getTheme(), String getUserName(), boolean checkPassword(String s), boolean getBoolVar(String var), boolean getBoolVarWrapper(String var), boolean wantsBreakLines(), boolean wantsSaveSent(), boolean wantsSetFlags(), boolean wantsShowFancy(), boolean wantsShowImages(), int getMaxLineLength(), int getMaxShowMessages(), long getIntVar(String var), long getIntVarWrapper(String var), void XMLUserData(Document d), void addMailHost(String name, String host, String login, String password), void ensureElement(String tag, String attribute, String att_value), void init(String user, String domain, String password), void login(), void logout(), void removeMailHost(String id), void resetBoolVars(), void setBoolVar(String var, boolean value), void setBoolVarWrapper(String var, boolean value), void setBreakLines(boolean b), void setDomain(String s), void setEmail(String s), void setFullName(String s), void setIntVar(String var, long value), void setIntVarWrapper(String var, long value), void setMaxLineLength(int i), void setMaxShowMessages(int i), void setPassword(String newpasswd, String verify), void setPasswordData(String data), void setPreferredLocale(String newloc), void setSaveSent(boolean b), void setSentFolder(String s), void setSetFlags(boolean b), void setShowFancy(boolean b), void setShowImages(boolean b), void setSignature(String s), void setTheme(String theme), void setUserName(String s)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_19[[net.wastl.webmail.server.UserData],[Document getRoot(), DocumentFragment getDocumentFragment(), Element getUserData(), Enumeration mailHosts(), Locale getPreferredLocale(), MailHostData getMailHost(String id), MailHostData getMailHost(String name), String formatDate(long date), String getDomain(), String getEmail(), String getFirstLogin(), String getFullName(), String getLastLogin(), String getLogin(), String getLoginCount(), String getPasswordData(), String getSentFolder(), String getSignature(), String getTheme(), String getUserName(), boolean checkPassword(String s), boolean getBoolVar(String var), boolean getBoolVarWrapper(String var), boolean wantsBreakLines(), boolean wantsSaveSent(), boolean wantsSetFlags(), boolean wantsShowFancy(), boolean wantsShowImages(), int getMaxLineLength(), int getMaxShowMessages(), long getIntVar(String var), long getIntVarWrapper(String var), void XMLUserData(Document d), void addMailHost(String name, String host, String login, String password), void ensureElement(String tag, String attribute, String att_value), void init(String user, String domain, String password), void login(), void logout(), void removeMailHost(String id), void removeMailHost(String name), void resetBoolVars(), void setBoolVar(String var, boolean value), void setBoolVarWrapper(String var, boolean value), void setBreakLines(boolean b), void setDomain(String s), void setEmail(String s), void setFullName(String s), void setIntVar(String var, long value), void setIntVarWrapper(String var, long value), void setMaxLineLength(int i), void setMaxShowMessages(int i), void setPassword(String newpasswd, String verify), void setPasswordData(String data), void setPreferredLocale(String newloc), void setSaveSent(boolean b), void setSentFolder(String s), void setSetFlags(boolean b), void setShowFancy(boolean b), void setShowImages(boolean b), void setSignature(String s), void setTheme(String theme), void setUserName(String s)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->NODE_20[[net.wastl.webmail.server.MailHostData],[String getHostURL(), String getID(), String getLogin(), String getName(), String getPassword(), void setHostURL(String v), void setLogin(String s), void setName(String v), void setPassword(String v)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_21[[net.wastl.webmail.exceptions.InvalidPasswordException],[void InvalidPasswordException(), void InvalidPasswordException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[[net.wastl.webmail.exceptions.WebMailException],[String getDomain(), String getUser(), void BinaryNotFoundException(), void BinaryNotFoundException(String s), void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain), void DocumentNotFoundException(), void DocumentNotFoundException(String s), void InvalidDataException(), void InvalidDataException(String s), void InvalidPasswordException(), void InvalidPasswordException(String s), void StylesheetNotFoundException(), void StylesheetNotFoundException(String s), void UserDataException(), void UserDataException(String s, String user, String domain), void WebMailException(), void WebMailException(Exception ex), void WebMailException(String s)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_23[[net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.StringHeap],[void decrease(int cur_pos), void increase(int cur_pos)]]
	->ITS CHILDREN:=================
	->	->NODE_14[...,...]
	->	->NODE_24[[net.wastl.webmail.misc.ExpireableCache.MyHeap],[Object next(), void MyHeap(int capacity), void decrease(int cur_pos), void increase(int cur_pos), void insert(Object key, long value), void remove(Object key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_25[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription()]]
	->ITS CHILDREN:=================
	->	->NODE_26[[net.wastl.webmail.config.ConfigParameter],[Enumeration choices(), Enumeration getConfigurationListeners(), Object getDefault(), String filter(String s), String getDescription(), String getDescription(String choice), String getGroup(), String getKey(), String getType(), boolean isPossibleValue(Object value), void ChoiceConfigParameter(String name, String desc), void ConfigParameter(String name, Object def, String desc), void ConfigYesNoParameter(String name, String desc), void CryptedStringConfigParameter(String name, String def, String desc), void IntegerConfigParameter(String name, String def, String desc), void StringConfigParameter(String name, String def, String desc), void UnchangeableStringConfigParameter(String name, String def, String desc), void addChoice(Object choice, String desc), void addConfigurationListener(ConfigurationListener l), void removeChoice(Object choice), void setDefault(Object value), void setGroup(String g)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_27[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_28[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName(), String getURL()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_29[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_30[[net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_31[[net.wastl.webmail.plugins.ShowMessage],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ShowMessage(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[[net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler],[HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->	->NODE_33[[net.wastl.webmail.server.URLHandler],[HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void ToplevelURLHandler(WebMailServer parent), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void registerHandler(String url, URLHandler handler), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->	->	->NODE_34[[net.wastl.webmail.server.URLHandlerTreeNode],[HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), URLHandler getHandler(String url), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void ToplevelURLHandler(WebMailServer parent), void URLHandlerTree(String url), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void addHandler(String url, URLHandler h), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void registerHandler(String url, URLHandler handler), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->	->	->	->NODE_3[...,...]
	->	->	->	->	->	->NODE_35[[net.wastl.webmail.plugins.ShowMIME],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ShowMIME(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_36[[net.wastl.webmail.plugins.UserSetup],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void UserSetup(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_37[[net.wastl.webmail.plugins.FolderSetup],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void FolderSetup(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_38[[net.wastl.webmail.plugins.FolderList],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void FolderList(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_39[[net.wastl.webmail.plugins.MailboxList],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void MailboxList(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_40[[net.wastl.webmail.plugins.Composer],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void Composer(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_41[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_42[[net.wastl.webmail.plugins.AdminPlugin],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void AdminPlugin(), void register(WebMailServer parent), void reqShutdown(int time, boolean reboot)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_43[[net.wastl.webmail.plugins.About],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_44[[net.wastl.webmail.plugins.ErrorHandler],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ErrorHandler(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_45[[net.wastl.webmail.plugins.WebMailTitle],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void WebMailTitle(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_46[[net.wastl.webmail.plugins.ImageHandler],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void ImageHandler(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_47[[net.wastl.webmail.plugins.PassThroughPlugin],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void PassThroughPlugin(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_48[[net.wastl.webmail.plugins.LogoutSession],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void LogoutSession(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_49[[net.wastl.webmail.plugins.NavBar],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void NavBar(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->	->NODE_50[[net.wastl.webmail.plugins.WebMailHelp],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void WebMailHelp(), void register(WebMailServer parent)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_51[[net.wastl.webmail.plugins.FileAttacher],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void FileAttacher(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_52[[org.webengruven.webmail.plugins.ChallengeHandler],[HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->	->NODE_53[[net.wastl.webmail.plugins.SendMessage],[HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void SendMessage(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_54[[net.wastl.webmail.config.ConfigurationListener],[Authenticator getAuthenticator(), Enumeration getUsers(String domain), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), String formatDate(long date), String getDescription(), String getMimeType(String name), String getName(), String getStringResource(String key, Locale locale), String getURL(), String getVersion(), String provides(), String requires(), Templates getStylesheet(String name, Locale locale, String theme), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), byte[] getBinaryFile(String name, Locale locale, String theme), void FileLogger(WebMailServer parent, Storage st), void FileStorage(WebMailServer parent), void SendMessage(), void ServletLogger(WebMailServer parent, Storage st), void SimpleStorage(WebMailServer parent), void deleteUserData(String user, String domain), void flush(), void init(), void initAuth(), void initCache(), void initConfig(), void initLanguages(), void initLog(), void initMIME(), void loadXMLSysData(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void register(WebMailServer parent), void saveUserData(String user, String domain), void saveXMLSysData(), void shutdown(), void writeMessage(long time, String message)]]
	->	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->	->NODE_3[...,...]
	->	->	->	->	->	->NODE_32[...,...]
	->	->	->	->NODE_55[[net.wastl.webmail.server.ToplevelURLHandler],[HTMLDocument handleException(Exception ex, HTTPSession session, HTTPRequestHeader header), HTMLDocument handleURL(String url, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), void ToplevelURLHandler(WebMailServer parent), void registerHandler(String url, URLHandler handler)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_33[...,...]
	->	->	->NODE_56[[net.wastl.webmail.misc.ByteStore],[ByteStore getBinaryFromIS(InputStream in, int nr_bytes_to_read), String getContentEncoding(), String getContentType(), String getDescription(), String getName(), byte[] getBytes(), int getSize(), void ByteStore(byte[] b), void setContentEncoding(String s), void setContentType(String s), void setDescription(String s), void setName(String s)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->NODE_57[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandlerTree, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getURL()]]
	->ITS CHILDREN:=================
	->	->NODE_28[...,...]
	->	->NODE_58[[net.wastl.webmail.server.URLHandlerTree],[String getURL(), URLHandler getHandler(String url), void URLHandlerTree(String url), void addHandler(String url, URLHandler h)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_34[...,...]
	->NODE_59[[org.webengruven.webmail.auth.OTPCacheNode],[void OTPCacheNode(), void OTPCacheNode(OTPState act), void OTPCacheNode(OTPState act, OTPState nw)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_60[[net.wastl.webmail.server.StatusServer],[String getStatus()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_61[[net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.storage.simple.SimpleStorage],[void initConfig()]]
	->ITS CHILDREN:=================
	->	->NODE_62[[net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage],[void initConfig(), void shutdown()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_63[[net.wastl.webmail.storage.FileStorage],[Authenticator getAuthenticator(), Enumeration getUsers(String domain), String formatDate(long date), String getMimeType(String name), String getStringResource(String key, Locale locale), Templates getStylesheet(String name, Locale locale, String theme), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), byte[] getBinaryFile(String name, Locale locale, String theme), void FileStorage(WebMailServer parent), void SimpleStorage(WebMailServer parent), void deleteUserData(String user, String domain), void initAuth(), void initCache(), void initConfig(), void initLanguages(), void initLog(), void initMIME(), void loadXMLSysData(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void saveUserData(String user, String domain), void saveXMLSysData(), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_64[[net.wastl.webmail.server.Storage],[Authenticator getAuthenticator(), Enumeration getConfigKeys(), Enumeration getUsers(), Enumeration getUsers(String domain), Enumeration getVirtualDomains(), String formatDate(long date), String getBasePath(Locale locale, String theme), String getConfig(String key), String getMimeType(String name), String getStringResource(String key, Locale locale), Templates getStylesheet(String name, Locale locale, String theme), WebMailVirtualDomain createVirtualDomain(String name), WebMailVirtualDomain getVirtualDomain(String name), XMLAdminModel createXMLAdminModel(), XMLGenericModel createXMLGenericModel(), XMLSystemData getSystemData(), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String passwd), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), XMLUserModel createXMLUserModel(XMLUserData data), boolean getDebug(), byte[] getBinaryFile(String name, Locale locale, String theme), void FileStorage(WebMailServer parent), void SimpleStorage(WebMailServer parent), void Storage(WebMailServer parent), void deleteUserData(String user), void deleteUserData(String user, String domain), void deleteVirtualDomain(String name), void initAuth(), void initCache(), void initConfig(), void initConfigKeys(), void initLanguages(), void initLog(), void initMIME(), void loadXMLSysData(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void save(), void saveUserData(String user, String domain), void saveXMLSysData(), void setConfig(String key, String value), void setDebug(boolean b), void setUserData(String user, UserData userdata), void setVirtualDomain(String name, WebMailVirtualDomain v), void shutdown()]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->	->	->NODE_54[...,...]
	->	->	->NODE_65[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.WebMailServer],[String getVersion(), void initConfig(), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_54[...,...]
	->	->	->	->NODE_66[[net.wastl.webmail.server.WebMailServer],[AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), AuthenticatorHandler getAuthenticatorHandler(), ConfigScheme getConfigScheme(), ConnectionTimer getConnectionTimer(), Enumeration getServers(), Enumeration getSessions(), HTTPSession getSession(String key), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), Locale getDefaultLocale(), Object getServer(String ID), PluginHandler getPluginHandler(), Provider[] getStoreProviders(), Provider[] getTransportProviders(), ServletContext getServletContext(), Storage getStorage(), String generateMessageID(String user), String getBasePath(), String getBaseURI(HTTPRequestHeader header), String getConfig(String key), String getCopyright(), String getDefaultTheme(), String getImageBasePath(), String getProperty(String name), String getVersion(), ToplevelURLHandler getURLHandler(), WebMailServer getServer(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), boolean getDebug(), long getUptime(), void WebMailServer(), void WebMailServlet(), void debugOut(String msg), void debugOut(String msg, Exception ex), void doInit(), void initConfig(), void initProviders(), void initServers(), void initStorage(), void reinitServer(String ID), void removeSession(HTTPSession w), void restart(), void setDebug(boolean b), void setProperty(String name, String value), void shutdown(), void shutdownServers()]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->	->NODE_67[[net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer],[String getConfig(String key), boolean getDebug(), void initConfig(), void setDebug(boolean b), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_64[...,...]
	->	->	->	->NODE_66[...,...]
	->	->NODE_68[[net.wastl.webmail.storage.simple.SimpleStorage],[Enumeration getUsers(String domain), XMLUserData createUserData(String user, String domain, String password), XMLUserData getUserData(String user, String domain, String password, boolean authenticate), void SimpleStorage(WebMailServer parent), void deleteUserData(String user, String domain), void initCache(), void initConfig(), void loadXMLSysData(), void saveUserData(String user, String domain), void saveXMLSysData()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_63[...,...]
	->NODE_69[[net.wastl.webmail.server.WebMailVirtualDomain],[Enumeration getAllowedHosts(), String getAuthenticationHost(), String getDefaultServer(), String getDomainName(), boolean getHostsRestricted(), boolean isAllowedHost(String host), void setAllowedHosts(String hosts), void setAuthenticationHost(String name), void setDefaultServer(String name), void setDomainName(String name), void setHostsRestricted(boolean b)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_70[[net.wastl.webmail.exceptions.StylesheetNotFoundException],[void StylesheetNotFoundException(), void StylesheetNotFoundException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_71[[net.wastl.webmail.misc.MD5],[String asHex(), String asHex(byte[] hash), byte[] Encode(int[] input, int len), byte[] Final(), int FF(int a, int b, int c, int d, int x, int s, int ac), int GG(int a, int b, int c, int d, int x, int s, int ac), int HH(int a, int b, int c, int d, int x, int s, int ac), int II(int a, int b, int c, int d, int x, int s, int ac), int rotate_left(int x, int n), int uadd(int a, int b), int uadd(int a, int b, int c), int uadd(int a, int b, int c, int d), int[] Decode(byte[] buffer, int len, int shift), void Init(), void MD5(), void MD5(Object ob), void Transform(MD5State state, byte[] buffer, int shift), void Update(MD5State stat, byte[] buffer, int offset, int length), void Update(String s), void Update(byte b), void Update(byte[] buffer), void Update(byte[] buffer, int length), void Update(byte[] buffer, int offset, int length), void Update(int i)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_72[[net.wastl.webmail.server.AuthenticatorHandler],[Authenticator getAuthenticator(String key), void AuthenticatorHandler(WebMailServer parent), void registerAuthenticators()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_73[[net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.JavaScriptFilter, net.wastl.webmail.xml.XMLGenericModel],[void init()]]
	->ITS CHILDREN:=================
	->	->NODE_11[...,...]
	->	->NODE_74[[net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.JavaScriptFilter],[String apply(String s), void init()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_75[[net.wastl.webmail.ui.html.JavaScriptFilter],[String apply(String s), void JavaScriptFilter(), void init()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->	->NODE_76[[net.wastl.webmail.ui.html.Fancyfier],[String apply(String s), void Fancyfier(), void init()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->NODE_53[...,...]
	->NODE_77[[net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserModel],[void clearWork()]]
	->ITS CHILDREN:=================
	->	->NODE_78[[net.wastl.webmail.xml.XMLUserModel],[Element createFolder(String id, String name, boolean holds_folders, boolean holds_messages), Element createMailhost(String name, String id, String url), Element createMessageList(), Element getCurrent(String type, String id), Element getCurrentFolder(String id), Element getCurrentMessage(String id), Element getFolder(String id), Element getMessageList(Element folder), Element setCurrent(String type, String id), Element setCurrentFolder(String id), Element setCurrentMessage(String id), XMLMessage getMessage(Element folder, String msgnr, String msgid), XMLMessage getWorkMessage(), XMLMessage setWorkMessage(XMLMessage message), boolean messageCached(Element folder, String msgid), void XMLUserModel(WebMailServer parent, Element rsysdata, Element ruserdata), void addMailhost(Element mh), void clearWork(), void initRoot(), void removeMessageList(Element folder), void update()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_11[...,...]
	->	->NODE_10[...,...]
	->NODE_79[[org.webengruven.webmail.auth.OTPAuthDisplayMngr],[String getPassChangeTmpl(), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setPassChangeVars(UserData ud, XMLGenericModel model)]]
	->ITS CHILDREN:=================
	->	->NODE_80[[org.webengruven.webmail.auth.CRAuthDisplayMngr],[String getChallengeScreenFile(), String getPassChangeTmpl(), void CRAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setLoginScreenVars(XMLGenericModel model), void setPassChangeVars(UserData ud, XMLGenericModel model)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_81[[org.webengruven.webmail.auth.AuthDisplayMngr],[String getChallengeScreenFile(), String getLoginScreenFile(), String getPassChangeTmpl(), void AuthDisplayMngr(), void CRAuthDisplayMngr(), void CRAuthDisplayMngr(CRAuthenticator a), void OTPAuthDisplayMngr(), void OTPAuthDisplayMngr(OTPAuthenticatorIface a), void setChallengeScreenVars(UserData ud, XMLGenericModel model), void setLoginScreenVars(XMLGenericModel model), void setPassChangeVars(UserData ud, XMLGenericModel model)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->NODE_82[[net.wastl.webmail.misc.StreamConnector],[ByteStore getResult(), void StreamConnector(InputStream sin, int size)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_83[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.xml.XMLUserData],[String formatDate(long date)]]
	->ITS CHILDREN:=================
	->	->NODE_84[[net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserData],[String formatDate(long date), String getUserName(), void login(), void logout()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_18[...,...]
	->	->	->NODE_7[...,...]
	->	->NODE_85[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.storage.FileStorage],[String formatDate(long date), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_86[[net.wastl.webmail.logger.FileLogger],[String formatDate(long date), void FileLogger(WebMailServer parent, Storage st), void flush(), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void shutdown(), void writeMessage(long time, String message)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_87[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Logger],[String formatDate(long date), void FileLogger(WebMailServer parent, Storage st), void ServletLogger(WebMailServer parent, Storage st), void flush(), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void shutdown(), void writeMessage(long time, String message)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_54[...,...]
	->	->	->NODE_63[...,...]
	->NODE_88[[net.wastl.webmail.exceptions.NoSuchFolderException],[void NoSuchFolderException(), void NoSuchFolderException(String msg)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_89[[net.wastl.webmail.server.ConnectionTimer],[void ConnectionTimer(), void addTimeableConnection(TimeableConnection c), void printStatus(), void removeAll(), void removeTimeableConnection(TimeableConnection c)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_90[[net.wastl.webmail.debug.ErrorHandler],[void ErrorHandler(Exception ex)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_91[[net.wastl.webmail.xml.XMLResourceBundle, org.bulbul.webmail.xmlresource.ResourceBase],[String getResult(Element element, String key), void getKeys(Element element, Hashtable hash)]]
	->ITS CHILDREN:=================
	->	->NODE_92[[org.bulbul.webmail.xmlresource.ResourceBase],[String getResult(Element element, String key), String getXmlResourceFilename(), void ResourceBase(), void getKeys(Element element, Hashtable hash), void loadXmlResourceFile()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_93[[net.wastl.webmail.xml.XMLResourceBundle],[String getResult(Element element, String key), void XMLResourceBundle(String resourcefile, String lang), void getKeys(Element element, Hashtable hash)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_94[[net.wastl.webmail.exceptions.DocumentNotFoundException],[void DocumentNotFoundException(), void DocumentNotFoundException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_95[[net.wastl.webmail.server.http.HTTPRequestHeader, net.wastl.webmail.server.http.HTTPResponseHeader],[Enumeration getHeaderKeys(), String getHeader(String t)]]
	->ITS CHILDREN:=================
	->	->NODE_96[[net.wastl.webmail.server.http.HTTPResponseHeader],[Enumeration getHeaderKeys(), String getHeader(String t), String getResponseLine(), void HTTPResponseHeader(int response_code, String status), void putHeader(String key, String value), void removeHeader(String key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->	->NODE_97[[net.wastl.webmail.server.http.HTTPRequestHeader],[Enumeration getContentKeys(), Enumeration getHeaderKeys(), Hashtable getContent(), Object getObjContent(String key), String getContent(String key), String getHeader(String t), String getMethod(), String getPath(), String getVersion(), boolean isContentSet(String key), void HTTPRequestHeader(), void setContent(String key, Object value), void setHeader(String key, String value), void setMethod(String s), void setPath(String s), void setVersion(String s)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_98[[net.wastl.webmail.ui.html.HTMLHeader],[void HTMLHeader(String title)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_99[[org.bulbul.webmail.xmlresource.ResourceBase, org.bulbul.webmail.xmlresource.Resources, org.bulbul.webmail.xmlresource.Resources_en, org.bulbul.webmail.xmlresource.Resources_en_US, org.bulbul.webmail.xmlresource.Resources_zh_TW],[String getXmlResourceFilename()]]
	->ITS CHILDREN:=================
	->	->NODE_92[...,...]
	->NODE_100[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.PluginDependencyTree, org.webengruven.webmail.plugins.ChallengeHandler],[String provides(), void register(WebMailServer parent)]]
	->ITS CHILDREN:=================
	->	->NODE_29[...,...]
	->	->NODE_101[[net.wastl.webmail.server.PluginDependencyTree],[String provides(), boolean addPlugin(Plugin p), boolean provides(String s), void PluginDependencyTree(Plugin p), void PluginDependencyTree(String s), void register(WebMailServer parent)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_102[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.server.Authenticator],[String getKey()]]
	->ITS CHILDREN:=================
	->	->NODE_26[...,...]
	->	->NODE_103[[net.wastl.webmail.server.Authenticator],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getKey(), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), boolean canChangePassword(), void Authenticator(), void CRAuthenticator(), void IMAPAuthenticator(), void OTPAuthenticator(), void OTPAuthenticatorIface(), void POPAuthenticator(), void SimpleAuthenticator(), void UnixAuthenticator(), void authenticatePostUserData(UserData ud, String dom, String pass), void authenticatePostUserData(UserData udata, String domain, String password), void authenticatePreUserData(String login, String domain, String passwd), void authenticatePreUserData(String user, String domain, String given_passwd), void authenticatePreUserData(String user, String domain, String passwd), void changePassword(UserData ud, String newpass, String vrfy), void changePassword(UserData udata, String newpassword, String verify), void changePassword(UserData udata, String passwd, String verify), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_104[[net.wastl.webmail.server.PluginHandler.FFilter],[void FFilter()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_105[[net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData],[Document getRoot()]]
	->ITS CHILDREN:=================
	->	->NODE_106[[net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData],[Document getRoot(), DocumentFragment getDocumentFragment()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_18[...,...]
	->	->	->NODE_107[[net.wastl.webmail.xml.XMLSystemData],[Document getRoot(), DocumentFragment getDocumentFragment(), Element createConfigElement(String key, String value, String type), Element createConfigGroup(String groupname), Element getConfigElementByKey(String key), Element getSysData(), Enumeration getVirtualDomains(), String getConfigRaw(String key), WebMailVirtualDomain getVirtualDomain(String domname), long getLoadTime(), void XMLSystemData(Document d, ConfigScheme cs), void createVirtualDomain(String name), void deleteConfigGroup(String groupname), void deleteVirtualDomain(String name), void initChoices(), void initChoices(String key), void setConfigRaw(String groupname, String key, String value, String type), void setLoadTime(long time), void setVirtualDomain(String name, WebMailVirtualDomain domain)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_108[[net.wastl.webmail.config.ConfigStore],[ConfigScheme getConfigScheme(), Document getRoot(), DocumentFragment getDocumentFragment(), Element createConfigElement(String key, String value, String type), Element createConfigGroup(String groupname), Element getConfigElementByKey(String key), Element getSysData(), Enumeration getConfigKeys(), Enumeration getVirtualDomains(), String getConfig(String key), String getConfigRaw(String key), WebMailVirtualDomain getVirtualDomain(String domname), boolean isConfigSet(String key), long getLoadTime(), void ConfigStore(), void ConfigStore(ConfigScheme cs), void XMLSystemData(Document d, ConfigScheme cs), void addConfigurationListener(String key, ConfigurationListener l), void createVirtualDomain(String name), void deleteConfigGroup(String groupname), void deleteVirtualDomain(String name), void initChoices(), void initChoices(String key), void setConfig(String key, String value), void setConfig(String key, String value, boolean filter, boolean notify), void setConfigRaw(String group, String key, String value, String type), void setConfigRaw(String groupname, String key, String value, String type), void setLoadTime(long time), void setVirtualDomain(String name, WebMailVirtualDomain domain)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_3[...,...]
	->	->NODE_11[...,...]
	->NODE_109[[net.wastl.webmail.misc.AttributedExpireableCache, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.misc.ExpireableCache.MyHeap],[void remove(Object key)]]
	->ITS CHILDREN:=================
	->	->NODE_110[[net.wastl.webmail.misc.AttributedExpireableCache],[Object getAttributes(Object key), void AttributedExpireableCache(int capacity), void AttributedExpireableCache(int capacity, float expire_factor), void put(Object id, Object object, Object attribs), void remove(Object key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_111[[net.wastl.webmail.misc.ExpireableCache],[Object get(Object key), Object getAttributes(Object key), int getCapacity(), int getHits(), int getMisses(), int getUsage(), void AttributedExpireableCache(int capacity), void AttributedExpireableCache(int capacity, float expire_factor), void ExpireableCache(int capacity), void ExpireableCache(int capacity, float expire_factor), void expireOver(), void hit(), void miss(), void put(Object id, Object object, Object attribs), void put(Object key, Object value), void remove(Object key), void setCapacity(int size), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->	->NODE_24[...,...]
	->NODE_112[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Authenticator, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.server.WebMailServlet, net.wastl.webmail.server.http.HTTPRequestHeader, org.webengruven.webmail.authenticators.OTPAuthenticator, org.webengruven.webmail.plugins.ChallengeHandler],[String getVersion()]]
	->ITS CHILDREN:=================
	->	->NODE_97[...,...]
	->	->NODE_29[...,...]
	->	->NODE_113[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator, org.webengruven.webmail.authenticators.OTPAuthenticator],[String getVersion(), void init(Storage store), void register(ConfigScheme store)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_114[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_115[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator],[String getVersion(), boolean canChangePassword(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_116[[net.wastl.webmail.authenticators.POPAuthenticator],[String getVersion(), boolean canChangePassword(), void POPAuthenticator(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_103[...,...]
	->	->	->	->	->NODE_117[[net.wastl.webmail.authenticators.IMAPAuthenticator],[String getVersion(), boolean canChangePassword(), void IMAPAuthenticator(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_103[...,...]
	->	->	->	->NODE_118[[net.wastl.webmail.authenticators.UnixAuthenticator],[String getVersion(), boolean canChangePassword(), void UnixAuthenticator(), void authenticatePreUserData(String user, String domain, String given_passwd), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_103[...,...]
	->	->	->NODE_119[[net.wastl.webmail.authenticators.SimpleAuthenticator],[String getVersion(), void SimpleAuthenticator(), void authenticatePostUserData(UserData udata, String domain, String password), void changePassword(UserData udata, String passwd, String verify), void init(Storage store), void register(ConfigScheme store)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_103[...,...]
	->	->	->NODE_120[[org.webengruven.webmail.authenticators.OTPAuthenticator],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), void OTPAuthenticator(), void authenticatePostUserData(UserData ud, String dom, String pass), void changePassword(UserData ud, String newpass, String vrfy), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_121[[org.webengruven.webmail.auth.OTPAuthenticatorIface],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), void OTPAuthenticator(), void OTPAuthenticatorIface(), void authenticatePostUserData(UserData ud, String dom, String pass), void changePassword(UserData ud, String newpass, String vrfy), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->NODE_122[[org.webengruven.webmail.auth.CRAuthenticator],[AuthDisplayMngr getAuthDisplayMngr(), OTPState getFromCache(String key, int type), String getChallenge(UserData ud), String getNewChallenge(UserData ud), String getNewChallenge(UserData udata), String getVersion(), void CRAuthenticator(), void OTPAuthenticator(), void OTPAuthenticatorIface(), void authenticatePostUserData(UserData ud, String dom, String pass), void changePassword(UserData ud, String newpass, String vrfy), void getFromCache(String key, int type, OTPState[] sts), void init(Storage store), void putIntoCache(String key, OTPState ast, OTPState nst), void register(ConfigScheme store), void removeFromCache(String key, int type)]]
	->	->	->	->	->ITS CHILDREN:=================
	->	->	->	->	->	->NODE_103[...,...]
	->	->NODE_65[...,...]
	->	->NODE_123[[net.wastl.webmail.server.WebMailServlet],[AdminSession newAdminSession(HttpServletRequest req, HTTPRequestHeader h), AdminSession newAdminSession(InetAddress a, HTTPRequestHeader h), Enumeration getServers(), HTTPSession getSession(String sessionid, InetAddress a, HTTPRequestHeader h), Object getServer(String ID), ServletContext getServletContext(), String getBasePath(), String getImageBasePath(), String getVersion(), WebMailSession newSession(HttpServletRequest req, HTTPRequestHeader h), WebMailSession newSession(InetAddress a, HTTPRequestHeader h), void WebMailServlet(), void debugOut(String msg, Exception ex), void initServers(), void reinitServer(String ID), void shutdownServers()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_66[...,...]
	->NODE_124[[net.wastl.webmail.xml.XMLCommon],[Element getElementByAttribute(Element root, String tagname, String attribute, String att_value), Node cloneNode(Document d, Node n), Node importNode(Document d, Node n, boolean deep), String getElementTextValue(Element e), String getTagValue(Element e, String tagname), void debugXML(Document d), void genericRemoveAll(Element parent, String tagname), void setElementTextValue(Element e, String text), void setElementTextValue(Element e, String text, boolean cdata), void setTagValue(Element e, String tagname, String text), void setTagValue(Element e, String tagname, String text, boolean cdata), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg), void setTagValue(Element e, String tagname, String text, boolean unique, String errormsg, boolean cdata), void writeXML(Document d, OutputStream os, String sysID), void writeXMLwalkTree(Node node, int indent, PrintWriter out)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_125[[net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.Queue],[Object next()]]
	->ITS CHILDREN:=================
	->	->NODE_13[...,...]
	->	->NODE_24[...,...]
	->NODE_126[[net.wastl.webmail.misc.MD5State],[void MD5State(), void MD5State(MD5State from)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_127[[net.wastl.webmail.misc.JavaScriptCleaner],[void JavaScriptCleaner(Document d), void walkTree(Node node)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_128[[net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigStore],[void addConfigurationListener(String key, ConfigurationListener l)]]
	->ITS CHILDREN:=================
	->	->NODE_108[...,...]
	->	->NODE_129[[net.wastl.webmail.config.ConfigScheme],[ConfigParameter getConfigParameter(String key), Enumeration getPossibleKeys(), Object getDefaultValue(String key), String filter(String key, String value), String getConfigParameterGroup(String key), String getConfigParameterType(String key), String getDescription(String key), boolean isValid(String key, Object value), void ConfigScheme(), void addConfigurationListener(String key, ConfigurationListener l), void configAddChoice(String key, String choice, String desc), void configRegisterChoiceKey(ConfigurationListener l, String key, String desc), void configRegisterChoiceKey(String key, String desc), void configRegisterCryptedStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterCryptedStringKey(String key, String def, String desc), void configRegisterIntegerKey(ConfigurationListener l, String key, String def, String desc), void configRegisterIntegerKey(String key, String def, String desc), void configRegisterStringKey(ConfigurationListener l, String key, String def, String desc), void configRegisterStringKey(String key, String def, String desc), void configRegisterYesNoKey(ConfigurationListener l, String key, String desc), void configRegisterYesNoKey(String key, String desc), void notifyConfigurationChange(String key), void registerConfig(ConfigParameter parm), void setDefaultValue(String key, Object default_value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_130[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer],[String getConfig(String key)]]
	->ITS CHILDREN:=================
	->	->NODE_131[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.WebMailServer],[ConfigScheme getConfigScheme(), String getConfig(String key)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_108[...,...]
	->	->	->NODE_66[...,...]
	->	->NODE_132[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage],[Enumeration getConfigKeys(), Enumeration getVirtualDomains(), String getConfig(String key), void deleteVirtualDomain(String name), void setConfig(String key, String value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_64[...,...]
	->	->	->NODE_108[...,...]
	->	->NODE_67[...,...]
	->NODE_133[[net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.storage.FileStorage],[void notifyConfigurationChange(String key)]]
	->ITS CHILDREN:=================
	->	->NODE_129[...,...]
	->	->NODE_134[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.storage.FileStorage],[void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_135[[net.wastl.webmail.logger.ServletLogger],[void ServletLogger(WebMailServer parent, Storage st), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_87[...,...]
	->	->	->NODE_85[...,...]
	->	->NODE_53[...,...]
	->NODE_136[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserData],[void login(), void logout()]]
	->ITS CHILDREN:=================
	->	->NODE_84[...,...]
	->	->NODE_6[...,...]
	->NODE_137[[net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[String getDomain()]]
	->ITS CHILDREN:=================
	->	->NODE_138[[net.wastl.webmail.exceptions.UserDataException],[String getDomain(), String getUser(), void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain), void UserDataException(), void UserDataException(String s, String user, String domain)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_22[...,...]
	->	->NODE_18[...,...]
	->NODE_139[[net.wastl.webmail.exceptions.CreateUserDataException],[void CreateUserDataException(), void CreateUserDataException(String s, String user, String domain)]]
	->ITS CHILDREN:=================
	->	->NODE_138[...,...]
	->NODE_140[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.ui.html.HTMLImage],[String getContentEncoding(), String getContentType()]]
	->ITS CHILDREN:=================
	->	->NODE_56[...,...]
	->	->NODE_141[[net.wastl.webmail.ui.html.HTMLImage],[String getContentEncoding(), String getContentType(), byte[] toBinary(), int size(), void HTMLImage(ByteStore content), void HTMLImage(Storage store, String name, Locale locale, String theme)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_142[[net.wastl.webmail.ui.html.HTMLDocument],[Enumeration getHTTPHeaderKeys(), String getContentEncoding(), String getContentType(), String getHTTPHeader(String key), String getReturnStatus(), boolean hasHTTPHeader(), byte[] toBinary(), int getReturnCode(), int length(), int size(), void HTMLDocument(), void HTMLDocument(String title, String cont, String basepath), void HTMLDocument(String title, String content), void HTMLImage(ByteStore content), void HTMLImage(Storage store, String name, Locale locale, String theme), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet), void addHTTPHeader(String key, String value), void setStatus(int code, String status)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_3[...,...]
	->NODE_143[[net.wastl.webmail.server.SystemCheck],[void SystemCheck(WebMailServer parent), void checkPathProperty(WebMailServer parent, String property)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_144[[net.wastl.webmail.xml.XMLMessage],[Element getFirstMessageTextPart(Element parent), Element getHeader(), Element getMessageElement(), String getHeader(String header), XMLMessagePart getFirstMessageMultiPart(), XMLMessagePart getFirstMessageTextPart(), boolean isReply(String subject), boolean messageCompletelyCached(), void XMLMessage(Element message), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void setHeader(String header, String value)]]
	->ITS CHILDREN:=================
	->	->NODE_145[[net.wastl.webmail.xml.XMLMessagePart],[Element getFirstMessageTextPart(Element parent), Element getHeader(), Element getMessageElement(), Element getPartElement(), Enumeration getParts(), String getAttribute(String key), String getHeader(String header), XMLMessagePart createPart(String type), XMLMessagePart getFirstMessageMultiPart(), XMLMessagePart getFirstMessageTextPart(), boolean isReply(String subject), boolean messageCompletelyCached(), void XMLMessage(Element message), void XMLMessagePart(Document root), void XMLMessagePart(Element part), void addContent(Document content), void addContent(String content, int quotelevel), void addJavaScript(String content), void appendPart(XMLMessagePart childpart), void insertContent(String content, int quotelevel), void insertPart(XMLMessagePart childpart), void prepareForward(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void prepareReply(String prefix_subject, String postfix_subject, String prefix_message, String postfix_message), void quoteContent(), void removeAllContent(), void removeAllParts(), void removePart(XMLMessagePart childpart), void setAttribute(String key, String value), void setHeader(String header, String value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_3[...,...]
	->NODE_146[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getName()]]
	->ITS CHILDREN:=================
	->	->NODE_27[...,...]
	->	->NODE_20[...,...]
	->NODE_147[[net.wastl.webmail.exceptions.BinaryNotFoundException],[void BinaryNotFoundException(), void BinaryNotFoundException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_148[[net.wastl.webmail.exceptions.InvalidDataException],[void InvalidDataException(), void InvalidDataException(String s)]]
	->ITS CHILDREN:=================
	->	->NODE_22[...,...]
	->NODE_149[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage],[void shutdown()]]
	->ITS CHILDREN:=================
	->	->NODE_62[...,...]
	->	->NODE_134[...,...]
	->	->NODE_111[...,...]
	->NODE_150[[net.wastl.webmail.ui.xml.XHTMLDocument],[int length(), void XHTMLDocument(Document xml, String xsl), void XHTMLDocument(Document xml, Templates stylesheet)]]
	->ITS CHILDREN:=================
	->	->NODE_142[...,...]
	->NODE_151[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigYesNoParameter, net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType()]]
	->ITS CHILDREN:=================
	->	->NODE_152[[net.wastl.webmail.config.CryptedStringConfigParameter],[String filter(String s), String getType(), void CryptedStringConfigParameter(String name, String def, String desc)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_153[[net.wastl.webmail.config.StringConfigParameter],[String filter(String s), String getType(), boolean isPossibleValue(Object value), void CryptedStringConfigParameter(String name, String def, String desc), void StringConfigParameter(String name, String def, String desc), void UnchangeableStringConfigParameter(String name, String def, String desc)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_26[...,...]
	->	->NODE_154[[net.wastl.webmail.config.ConfigYesNoParameter],[String getType(), void ConfigYesNoParameter(String name, String desc)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_155[[net.wastl.webmail.config.ChoiceConfigParameter],[Enumeration choices(), String getDescription(String choice), String getType(), boolean isPossibleValue(Object value), void ChoiceConfigParameter(String name, String desc), void ConfigYesNoParameter(String name, String desc), void addChoice(Object choice, String desc), void removeChoice(Object choice)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_26[...,...]
	->	->NODE_156[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType(), boolean isPossibleValue(Object value)]]
	->	->ITS CHILDREN:=================
	->	->	->NODE_157[[net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType(), boolean isPossibleValue(Object value), void UnchangeableStringConfigParameter(String name, String def, String desc)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_153[...,...]
	->	->	->NODE_155[...,...]
	->	->	->NODE_158[[net.wastl.webmail.config.IntegerConfigParameter],[String getType(), boolean isPossibleValue(Object value), void IntegerConfigParameter(String name, String def, String desc)]]
	->	->	->ITS CHILDREN:=================
	->	->	->	->NODE_26[...,...]
	->NODE_159[[net.wastl.webmail.xml.XMLAdminModel],[Element addStateElement(String tag), Element createElement(String tag), Element createTextElement(String tag, String value), void XMLAdminModel(WebMailServer parent, Element rsysdata), void clearUserData(), void importUserData(Element userdata)]]
	->ITS CHILDREN:=================
	->	->NODE_11[...,...]
	->NODE_160[[org.bulbul.webmail.util.TranscodeUtil],[String transcodeThenEncodeByLocale(String sourceString, String sourceStringEncoding, Locale locale)]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_161[[net.wastl.webmail.exceptions.TimeoutException],[void TimeoutException()]]
	->ITS CHILDREN:=================
	->	->NODE_3[...,...]
	->NODE_162[[net.wastl.webmail.server.Storage, net.wastl.webmail.xml.XMLSystemData],[Enumeration getVirtualDomains(), void deleteVirtualDomain(String name)]]
	->ITS CHILDREN:=================
	->	->NODE_132[...,...]
	->	->NODE_107[...,...]
Done printing lattice!
Printing candidate nodes
	->NODE_0[[net.wastl.webmail.misc.Helper, net.wastl.webmail.misc.TEA],[void main(String[] args)]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_1[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel],[void setException(Exception ex)]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.HTTPSession]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.06666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.06666667 ]; RELATED TYPES: [net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.WebMailSession]
	  	->NODE_2[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.WebMailSession],[Document getModel(), InetAddress getRemoteAddress(), Locale getLocale(), String getEnv(String key), String getSessionCode(), boolean isLoggedOut(), long getLastAccess(), long getTimeout(), void doInit(WebMailServer parent, HTTPRequestHeader h), void login(), void login(HTTPRequestHeader h), void logout(), void saveData(), void setEnv(), void setEnv(String key, String value), void setException(Exception ex), void setLastAccess(), void timeoutOccured()]]
	  	  FEATURE TYPE:  ## ADHOC
	  	->NODE_3[[net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLGenericModel],[void clearWork(), void setException(Exception ex)]]
	  	  FEATURE TYPE:  ## ADHOC
	->NODE_4[[net.wastl.webmail.misc.Queue, net.wastl.webmail.misc.StringHeap],[boolean isEmpty()]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_5[[net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[String getLogin()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.UserData]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.023255814 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.024390243 ]; RELATED TYPES: [net.wastl.webmail.xml.XMLUserData]
	->NODE_6[[net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.StringHeap],[void decrease(int cur_pos), void increase(int cur_pos)]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_7[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.Plugin]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.16666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.16666667 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.URLHandler]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.5 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, org.webengruven.webmail.plugins.ChallengeHandler]
	  	->NODE_8[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName()]]
	  	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.Plugin]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.33333334 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.URLHandler]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.6666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, org.webengruven.webmail.plugins.ChallengeHandler]
	  	  	->NODE_9[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName(), String getURL()]]
	  	  	  FEATURE TYPE:  ## ADHOC
	  	  	  	->NODE_10[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler],[String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	  	  	  	  FEATURE TYPE:  ## ADHOC
	  	  	  	  	->NODE_11[[net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup],[HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	  	  	  	  	  FEATURE TYPE:  ## ADHOC
	  	  	  	  	  	->	->NODE_12[[net.wastl.webmail.server.Plugin, net.wastl.webmail.server.URLHandler],[HTMLDocument handleURL(String subURL, HTTPSession sess, HTTPRequestHeader h), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession sess, HTTPRequestHeader header), HTMLDocument handleURL(String suburl, HTTPSession sess1, HTTPRequestHeader head), HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void About(), void AdminPlugin(), void Composer(), void ErrorHandler(), void FileAttacher(), void FolderList(), void FolderSetup(), void ImageHandler(), void LogoutSession(), void MailboxList(), void NavBar(), void PassThroughPlugin(), void SendMessage(), void ShowMIME(), void ShowMessage(), void UserSetup(), void WebMailHelp(), void WebMailTitle(), void init(), void notifyConfigurationChange(String key), void register(WebMailServer parent), void reqShutdown(int time, boolean reboot)]]
	  	  	  	  	  	  	  FEATURE TYPE:  ## ADHOC
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	->NODE_13[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle],[HTMLDocument handleURL(String suburl, HTTPSession session, HTTPRequestHeader header), String getDescription(), String getName(), String getURL(), String getVersion(), String provides(), String requires(), void register(WebMailServer parent)]]
	  	  	  	  	  FEATURE TYPE:  ## ADHOC
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	->	->NODE_12[...,...]
	  	  	  	  	->	->NODE_12[...,...]
	->NODE_14[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandlerTree, net.wastl.webmail.server.URLHandlerTreeNode, org.webengruven.webmail.plugins.ChallengeHandler],[String getURL()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.URLHandlerTreeNode]; ANCHOR TYPE BEHAVIOR COVERAGE: [1.0 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.server.URLHandlerTree] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.URLHandlerTree]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.25 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.server.ToplevelURLHandler]
	  	->NODE_9[...,...]
	->NODE_15[[net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.storage.simple.SimpleStorage],[void initConfig()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.storage.FileStorage]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.05882353 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.5 ]; RELATED TYPES: [net.wastl.webmail.storage.simple.SimpleStorage] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.025 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.025 ]; RELATED TYPES: [net.wastl.webmail.server.WebMailServer]
	  	->	->NODE_16[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.WebMailServer],[String getVersion(), void initConfig(), void shutdown()]]
	  	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.075 ]##
	  	->	->NODE_17[[net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer],[String getConfig(String key), boolean getDebug(), void initConfig(), void setDebug(boolean b), void shutdown()]]
	  	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.Storage]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.13513513 ]##FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.125 ]##
	->NODE_18[[net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.JavaScriptFilter, net.wastl.webmail.xml.XMLGenericModel],[void init()]]
	  FEATURE TYPE:  ## ADHOC
	  	->NODE_19[[net.wastl.webmail.ui.html.Fancyfier, net.wastl.webmail.ui.html.JavaScriptFilter],[String apply(String s), void init()]]
	  	  FEATURE TYPE:  ## ADHOC
	->	->NODE_3[...,...]
	->NODE_20[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.storage.FileStorage, net.wastl.webmail.xml.XMLUserData],[String formatDate(long date)]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.xml.XMLUserData]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.016666668 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.25 ]; RELATED TYPES: [net.wastl.webmail.server.WebMailSession]
	  	->NODE_21[[net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserData],[String formatDate(long date), String getUserName(), void login(), void logout()]]
	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.xml.XMLUserData]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.06666667 ]##
	  	->NODE_22[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.storage.FileStorage],[String formatDate(long date), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	  	  FEATURE TYPE:  ## ADHOC
	  	  	->	->NODE_23[[net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.server.Logger],[String formatDate(long date), void FileLogger(WebMailServer parent, Storage st), void ServletLogger(WebMailServer parent, Storage st), void flush(), void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void queue(long time, String message), void shutdown(), void writeMessage(long time, String message)]]
	  	  	  	  FEATURE TYPE:  ## ADHOC
	->NODE_24[[net.wastl.webmail.xml.XMLResourceBundle, org.bulbul.webmail.xmlresource.ResourceBase],[String getResult(Element element, String key), void getKeys(Element element, Hashtable hash)]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_25[[net.wastl.webmail.server.http.HTTPRequestHeader, net.wastl.webmail.server.http.HTTPResponseHeader],[Enumeration getHeaderKeys(), String getHeader(String t)]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_26[[org.bulbul.webmail.xmlresource.ResourceBase, org.bulbul.webmail.xmlresource.Resources, org.bulbul.webmail.xmlresource.Resources_en, org.bulbul.webmail.xmlresource.Resources_en_US, org.bulbul.webmail.xmlresource.Resources_zh_TW],[String getXmlResourceFilename()]]
	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [org.bulbul.webmail.xmlresource.ResourceBase]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.2 ]##
	->NODE_27[[net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.PluginDependencyTree, org.webengruven.webmail.plugins.ChallengeHandler],[String provides(), void register(WebMailServer parent)]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.Plugin]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.33333334 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.Plugin]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.server.PluginDependencyTree]
	  	->NODE_10[...,...]
	->NODE_28[[net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.server.Authenticator],[String getKey()]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_29[[net.wastl.webmail.xml.XMLGenericModel, net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData],[Document getRoot()]]
	  FEATURE TYPE:  ## ADHOC
	  	->NODE_30[[net.wastl.webmail.xml.XMLSystemData, net.wastl.webmail.xml.XMLUserData],[Document getRoot(), DocumentFragment getDocumentFragment()]]
	  	  FEATURE TYPE:  ## ADHOC
	->NODE_31[[net.wastl.webmail.misc.AttributedExpireableCache, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.misc.ExpireableCache.MyHeap],[void remove(Object key)]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.misc.ExpireableCache]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.071428575 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.misc.AttributedExpireableCache] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.misc.ExpireableCache.MyHeap]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.16666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.misc.ExpireableCache]
	->NODE_32[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.Authenticator, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.server.WebMailServlet, net.wastl.webmail.server.http.HTTPRequestHeader, org.webengruven.webmail.authenticators.OTPAuthenticator, org.webengruven.webmail.plugins.ChallengeHandler],[String getVersion()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.Plugin]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.16666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.16666667 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.server.Authenticator]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.1 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.33333334 ]; RELATED TYPES: [net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, org.webengruven.webmail.authenticators.OTPAuthenticator] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.025 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.11111111 ]; RELATED TYPES: [net.wastl.webmail.server.WebMailServlet] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.025 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.server.WebMailServer]
	  	->NODE_10[...,...]
	  	->NODE_33[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.SimpleAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator, org.webengruven.webmail.authenticators.OTPAuthenticator],[String getVersion(), void init(Storage store), void register(ConfigScheme store)]]
	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.server.Authenticator]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.3 ]##
	  	  	->NODE_34[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator, net.wastl.webmail.authenticators.UnixAuthenticator, net.wastl.webmail.server.Authenticator],[String getVersion(), boolean canChangePassword(), void init(Storage store), void register(ConfigScheme store)]]
	  	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.server.Authenticator]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.4 ]##
	  	  	  	->NODE_35[[net.wastl.webmail.authenticators.IMAPAuthenticator, net.wastl.webmail.authenticators.POPAuthenticator],[String getVersion(), boolean canChangePassword(), void authenticatePreUserData(String user, String domain, String passwd), void init(Storage store), void register(ConfigScheme store)]]
	  	  	  	  FEATURE TYPE:  ## ADHOC
	  	->NODE_16[...,...]
	->NODE_36[[net.wastl.webmail.misc.ExpireableCache.MyHeap, net.wastl.webmail.misc.Queue],[Object next()]]
	  FEATURE TYPE:  ## ADHOC
	->NODE_37[[net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigStore],[void addConfigurationListener(String key, ConfigurationListener l)]]
	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.config.ConfigScheme]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.041666668 ]##
	->NODE_38[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer],[String getConfig(String key)]]
	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.025 ]## ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.Storage]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.027027028 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.25 ]; RELATED TYPES: [net.wastl.webmail.server.WebMailServer]
	  	->NODE_39[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.WebMailServer],[ConfigScheme getConfigScheme(), String getConfig(String key)]]
	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.05 ]##
	  	->NODE_40[[net.wastl.webmail.config.ConfigStore, net.wastl.webmail.server.Storage],[Enumeration getConfigKeys(), Enumeration getVirtualDomains(), String getConfig(String key), void deleteVirtualDomain(String name), void setConfig(String key, String value)]]
	  	  FEATURE TYPE:  ## ADHOC
	  	->NODE_17[...,...]
	->NODE_41[[net.wastl.webmail.config.ConfigScheme, net.wastl.webmail.config.ConfigurationListener, net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.storage.FileStorage],[void notifyConfigurationChange(String key)]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.config.ConfigurationListener]; ANCHOR TYPE BEHAVIOR COVERAGE: [1.0 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.storage.FileStorage]
	  	->NODE_42[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.storage.FileStorage],[void initLog(), void log(int level, Exception ex), void log(int level, String message), void notifyConfigurationChange(String key), void shutdown()]]
	  	  FEATURE TYPE:  ## ADHOC
	  	  	->	->NODE_23[...,...]
	  	  	->NODE_22[...,...]
	->NODE_43[[net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.HTTPSession, net.wastl.webmail.server.UserData, net.wastl.webmail.server.WebMailSession, net.wastl.webmail.xml.XMLUserData],[void login(), void logout()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.HTTPSession]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.13333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.13333334 ]; RELATED TYPES: [net.wastl.webmail.server.AdminSession, net.wastl.webmail.server.WebMailSession] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.UserData]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.046511628 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.048780486 ]; RELATED TYPES: [net.wastl.webmail.xml.XMLUserData] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.xml.XMLUserData]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.033333335 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.5 ]; RELATED TYPES: [net.wastl.webmail.server.WebMailSession]
	  	->NODE_21[...,...]
	  	->NODE_2[...,...]
	->NODE_44[[net.wastl.webmail.exceptions.UserDataException, net.wastl.webmail.server.UserData, net.wastl.webmail.xml.XMLUserData],[String getDomain()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.UserData]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.023255814 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.024390243 ]; RELATED TYPES: [net.wastl.webmail.xml.XMLUserData]
	->NODE_45[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.ui.html.HTMLImage],[String getContentEncoding(), String getContentType()]]
	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.misc.ByteStore]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.16666667 ]##
	->NODE_46[[net.wastl.webmail.misc.ByteStore, net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.MailHostData, net.wastl.webmail.server.Plugin, net.wastl.webmail.server.ToplevelURLHandler, net.wastl.webmail.server.URLHandler, org.webengruven.webmail.plugins.ChallengeHandler],[String getName()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.Plugin]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.16666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.16666667 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, org.webengruven.webmail.plugins.ChallengeHandler] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.URLHandler]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.5 ]; RELATED TYPES: [net.wastl.webmail.plugins.About, net.wastl.webmail.plugins.AdminPlugin, net.wastl.webmail.plugins.Composer, net.wastl.webmail.plugins.ErrorHandler, net.wastl.webmail.plugins.FileAttacher, net.wastl.webmail.plugins.FolderList, net.wastl.webmail.plugins.FolderSetup, net.wastl.webmail.plugins.ImageHandler, net.wastl.webmail.plugins.LogoutSession, net.wastl.webmail.plugins.MailboxList, net.wastl.webmail.plugins.NavBar, net.wastl.webmail.plugins.PassThroughPlugin, net.wastl.webmail.plugins.SendMessage, net.wastl.webmail.plugins.ShowMIME, net.wastl.webmail.plugins.ShowMessage, net.wastl.webmail.plugins.UserSetup, net.wastl.webmail.plugins.WebMailHelp, net.wastl.webmail.plugins.WebMailTitle, net.wastl.webmail.server.ToplevelURLHandler, org.webengruven.webmail.plugins.ChallengeHandler]
	  	->NODE_8[...,...]
	->NODE_47[[net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.misc.ExpireableCache, net.wastl.webmail.server.Logger, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer, net.wastl.webmail.storage.FileStorage],[void shutdown()]]
	  FEATURE TYPE:  ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_INTERFACE_IMPLEMENTATIONS; ANCHOR: [net.wastl.webmail.server.Logger]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.33333334 ]; RELATED TYPES: [net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.server.Storage]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.027027028 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.06666667 ]; RELATED TYPES: [net.wastl.webmail.storage.FileStorage] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.WebMailServer]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.025 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.logger.FileLogger, net.wastl.webmail.server.Storage, net.wastl.webmail.server.WebMailServer] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.Storage]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.027027028 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.logger.FileLogger, net.wastl.webmail.logger.ServletLogger, net.wastl.webmail.server.WebMailServer] ## PARTIAL_EXTENT_PARTIAL_BEHAVIOR_EXPLICIT_AGGREGATIONS; ANCHOR: [net.wastl.webmail.server.Logger]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 0.33333334 ]; RELATED TYPES: [net.wastl.webmail.storage.FileStorage]
	  	->NODE_42[...,...]
	->NODE_48[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.ConfigYesNoParameter, net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType()]]
	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.config.ConfigParameter]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.083333336 ]## ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.config.StringConfigParameter]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.33333334 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.config.CryptedStringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter] ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.config.ChoiceConfigParameter]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.14285715 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.config.ConfigYesNoParameter]
	  	->NODE_49[[net.wastl.webmail.config.ChoiceConfigParameter, net.wastl.webmail.config.ConfigParameter, net.wastl.webmail.config.IntegerConfigParameter, net.wastl.webmail.config.StringConfigParameter, net.wastl.webmail.config.UnchangeableStringConfigParameter],[String getType(), boolean isPossibleValue(Object value)]]
	  	  FEATURE TYPE: FULL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.config.ConfigParameter]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.16666667 ]## ## PARTIAL_EXTENT_FULL_BEHAVIOR_EXPLICIT_CLASS_SUBCLASS_REDEFINITIONS; ANCHOR: [net.wastl.webmail.config.StringConfigParameter]; ANCHOR TYPE BEHAVIOR COVERAGE: [0.6666667 ]; CONFIGURATION BEHAVIOR COVERAGE: [ 1.0 ]; RELATED TYPES: [net.wastl.webmail.config.UnchangeableStringConfigParameter]
	->	->NODE_40[...,...]
Done printing candidate nodes!
true
